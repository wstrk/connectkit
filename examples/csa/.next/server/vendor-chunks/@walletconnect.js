/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@walletconnect";
exports.ids = ["vendor-chunks/@walletconnect"];
exports.modules = {

/***/ "(ssr)/../../node_modules/@walletconnect/core/dist/index.es.js":
/*!***************************************************************!*\
  !*** ../../node_modules/@walletconnect/core/dist/index.es.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CORE_CONTEXT: () => (/* binding */ Q),\n/* harmony export */   CORE_DEFAULT: () => (/* binding */ Qe),\n/* harmony export */   CORE_PROTOCOL: () => (/* binding */ le),\n/* harmony export */   CORE_STORAGE_OPTIONS: () => (/* binding */ Ze),\n/* harmony export */   CORE_STORAGE_PREFIX: () => (/* binding */ O),\n/* harmony export */   CORE_VERSION: () => (/* binding */ We),\n/* harmony export */   CRYPTO_CLIENT_SEED: () => (/* binding */ de),\n/* harmony export */   CRYPTO_CONTEXT: () => (/* binding */ et),\n/* harmony export */   CRYPTO_JWT_TTL: () => (/* binding */ tt),\n/* harmony export */   Core: () => (/* binding */ Mr),\n/* harmony export */   Crypto: () => (/* binding */ xt),\n/* harmony export */   ECHO_CONTEXT: () => (/* binding */ St),\n/* harmony export */   ECHO_URL: () => (/* binding */ Tt),\n/* harmony export */   EXPIRER_CONTEXT: () => (/* binding */ Ct),\n/* harmony export */   EXPIRER_DEFAULT_TTL: () => (/* binding */ wr),\n/* harmony export */   EXPIRER_EVENTS: () => (/* binding */ v),\n/* harmony export */   EXPIRER_STORAGE_VERSION: () => (/* binding */ Rt),\n/* harmony export */   EchoClient: () => (/* binding */ Gt),\n/* harmony export */   Expirer: () => (/* binding */ jt),\n/* harmony export */   HISTORY_CONTEXT: () => (/* binding */ vt),\n/* harmony export */   HISTORY_EVENTS: () => (/* binding */ R),\n/* harmony export */   HISTORY_STORAGE_VERSION: () => (/* binding */ It),\n/* harmony export */   JsonRpcHistory: () => (/* binding */ Vt),\n/* harmony export */   KEYCHAIN_CONTEXT: () => (/* binding */ it),\n/* harmony export */   KEYCHAIN_STORAGE_VERSION: () => (/* binding */ st),\n/* harmony export */   KeyChain: () => (/* binding */ Pt),\n/* harmony export */   MESSAGES_CONTEXT: () => (/* binding */ rt),\n/* harmony export */   MESSAGES_STORAGE_VERSION: () => (/* binding */ nt),\n/* harmony export */   MessageTracker: () => (/* binding */ Ot),\n/* harmony export */   PAIRING_CONTEXT: () => (/* binding */ Et),\n/* harmony export */   PAIRING_DEFAULT_TTL: () => (/* binding */ Er),\n/* harmony export */   PAIRING_EVENTS: () => (/* binding */ V),\n/* harmony export */   PAIRING_RPC_OPTS: () => (/* binding */ F),\n/* harmony export */   PAIRING_STORAGE_VERSION: () => (/* binding */ wt),\n/* harmony export */   PENDING_SUB_RESOLUTION_TIMEOUT: () => (/* binding */ ft),\n/* harmony export */   PUBLISHER_CONTEXT: () => (/* binding */ at),\n/* harmony export */   PUBLISHER_DEFAULT_TTL: () => (/* binding */ ot),\n/* harmony export */   Pairing: () => (/* binding */ Bt),\n/* harmony export */   RELAYER_CONTEXT: () => (/* binding */ ut),\n/* harmony export */   RELAYER_DEFAULT_LOGGER: () => (/* binding */ ct),\n/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ ht),\n/* harmony export */   RELAYER_DEFAULT_RELAY_URL: () => (/* binding */ ge),\n/* harmony export */   RELAYER_EVENTS: () => (/* binding */ D),\n/* harmony export */   RELAYER_FAILOVER_RELAY_URL: () => (/* binding */ pe),\n/* harmony export */   RELAYER_PROVIDER_EVENTS: () => (/* binding */ P),\n/* harmony export */   RELAYER_RECONNECT_TIMEOUT: () => (/* binding */ dt),\n/* harmony export */   RELAYER_SDK_VERSION: () => (/* binding */ gt),\n/* harmony export */   RELAYER_STORAGE_OPTIONS: () => (/* binding */ br),\n/* harmony export */   RELAYER_SUBSCRIBER_SUFFIX: () => (/* binding */ lt),\n/* harmony export */   RELAYER_TRANSPORT_CUTOFF: () => (/* binding */ pt),\n/* harmony export */   Relayer: () => (/* binding */ Ft),\n/* harmony export */   STORE_STORAGE_VERSION: () => (/* binding */ Dt),\n/* harmony export */   SUBSCRIBER_CONTEXT: () => (/* binding */ mt),\n/* harmony export */   SUBSCRIBER_DEFAULT_TTL: () => (/* binding */ fr),\n/* harmony export */   SUBSCRIBER_EVENTS: () => (/* binding */ w),\n/* harmony export */   SUBSCRIBER_STORAGE_VERSION: () => (/* binding */ bt),\n/* harmony export */   Store: () => (/* binding */ Kt),\n/* harmony export */   Subscriber: () => (/* binding */ Nt),\n/* harmony export */   TRUSTED_VERIFY_URLS: () => (/* binding */ _t),\n/* harmony export */   VERIFY_CONTEXT: () => (/* binding */ Z),\n/* harmony export */   VERIFY_FALLBACK_SERVER: () => (/* binding */ ee),\n/* harmony export */   VERIFY_SERVER: () => (/* binding */ $),\n/* harmony export */   Verify: () => (/* binding */ qt),\n/* harmony export */   WALLETCONNECT_CLIENT_ID: () => (/* binding */ yt),\n/* harmony export */   \"default\": () => (/* binding */ te)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_keyvaluestorage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/keyvaluestorage */ \"(ssr)/../../node_modules/@walletconnect/keyvaluestorage/dist/index.es.js\");\n/* harmony import */ var _walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/heartbeat */ \"(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/logger */ \"(ssr)/../../node_modules/@walletconnect/logger/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @walletconnect/types */ \"(ssr)/../../node_modules/@walletconnect/types/dist/index.es.js\");\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/../../node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/relay-auth */ \"(ssr)/../../node_modules/@walletconnect/relay-auth/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/../../node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uint8arrays */ \"(ssr)/../../node_modules/uint8arrays/esm/src/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/../../node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @walletconnect/jsonrpc-provider */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-provider/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_ws_connection__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @walletconnect/jsonrpc-ws-connection */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js\");\n/* harmony import */ var lodash_isequal__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lodash.isequal */ \"(ssr)/../../node_modules/lodash.isequal/index.js\");\n/* harmony import */ var lodash_isequal__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(lodash_isequal__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! isomorphic-unfetch */ \"(ssr)/../../node_modules/isomorphic-unfetch/index.js\");\n/* harmony import */ var isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_12__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction Hi(r, e) {\n    if (r.length >= 255) throw new TypeError(\"Alphabet too long\");\n    for(var t = new Uint8Array(256), i = 0; i < t.length; i++)t[i] = 255;\n    for(var s = 0; s < r.length; s++){\n        var n = r.charAt(s), o = n.charCodeAt(0);\n        if (t[o] !== 255) throw new TypeError(n + \" is ambiguous\");\n        t[o] = s;\n    }\n    var a = r.length, h = r.charAt(0), l = Math.log(a) / Math.log(256), d = Math.log(256) / Math.log(a);\n    function p(u) {\n        if (u instanceof Uint8Array || (ArrayBuffer.isView(u) ? u = new Uint8Array(u.buffer, u.byteOffset, u.byteLength) : Array.isArray(u) && (u = Uint8Array.from(u))), !(u instanceof Uint8Array)) throw new TypeError(\"Expected Uint8Array\");\n        if (u.length === 0) return \"\";\n        for(var m = 0, z = 0, I = 0, _ = u.length; I !== _ && u[I] === 0;)I++, m++;\n        for(var S = (_ - I) * d + 1 >>> 0, f = new Uint8Array(S); I !== _;){\n            for(var T = u[I], A = 0, C = S - 1; (T !== 0 || A < z) && C !== -1; C--, A++)T += 256 * f[C] >>> 0, f[C] = T % a >>> 0, T = T / a >>> 0;\n            if (T !== 0) throw new Error(\"Non-zero carry\");\n            z = A, I++;\n        }\n        for(var x = S - z; x !== S && f[x] === 0;)x++;\n        for(var q = h.repeat(m); x < S; ++x)q += r.charAt(f[x]);\n        return q;\n    }\n    function y(u) {\n        if (typeof u != \"string\") throw new TypeError(\"Expected String\");\n        if (u.length === 0) return new Uint8Array;\n        var m = 0;\n        if (u[m] !== \" \") {\n            for(var z = 0, I = 0; u[m] === h;)z++, m++;\n            for(var _ = (u.length - m) * l + 1 >>> 0, S = new Uint8Array(_); u[m];){\n                var f = t[u.charCodeAt(m)];\n                if (f === 255) return;\n                for(var T = 0, A = _ - 1; (f !== 0 || T < I) && A !== -1; A--, T++)f += a * S[A] >>> 0, S[A] = f % 256 >>> 0, f = f / 256 >>> 0;\n                if (f !== 0) throw new Error(\"Non-zero carry\");\n                I = T, m++;\n            }\n            if (u[m] !== \" \") {\n                for(var C = _ - I; C !== _ && S[C] === 0;)C++;\n                for(var x = new Uint8Array(z + (_ - C)), q = z; C !== _;)x[q++] = S[C++];\n                return x;\n            }\n        }\n    }\n    function M(u) {\n        var m = y(u);\n        if (m) return m;\n        throw new Error(`Non-${e} character`);\n    }\n    return {\n        encode: p,\n        decodeUnsafe: y,\n        decode: M\n    };\n}\nvar Ji = Hi, Xi = Ji;\nconst Ne = (r)=>{\n    if (r instanceof Uint8Array && r.constructor.name === \"Uint8Array\") return r;\n    if (r instanceof ArrayBuffer) return new Uint8Array(r);\n    if (ArrayBuffer.isView(r)) return new Uint8Array(r.buffer, r.byteOffset, r.byteLength);\n    throw new Error(\"Unknown type, must be binary type\");\n}, Wi = (r)=>new TextEncoder().encode(r), Qi = (r)=>new TextDecoder().decode(r);\nclass Zi {\n    constructor(e, t, i){\n        this.name = e, this.prefix = t, this.baseEncode = i;\n    }\n    encode(e) {\n        if (e instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e)}`;\n        throw Error(\"Unknown type, must be binary type\");\n    }\n}\nclass es {\n    constructor(e, t, i){\n        if (this.name = e, this.prefix = t, t.codePointAt(0) === void 0) throw new Error(\"Invalid prefix character\");\n        this.prefixCodePoint = t.codePointAt(0), this.baseDecode = i;\n    }\n    decode(e) {\n        if (typeof e == \"string\") {\n            if (e.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            return this.baseDecode(e.slice(this.prefix.length));\n        } else throw Error(\"Can only multibase decode strings\");\n    }\n    or(e) {\n        return Ue(this, e);\n    }\n}\nclass ts {\n    constructor(e){\n        this.decoders = e;\n    }\n    or(e) {\n        return Ue(this, e);\n    }\n    decode(e) {\n        const t = e[0], i = this.decoders[t];\n        if (i) return i.decode(e);\n        throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n    }\n}\nconst Ue = (r, e)=>new ts({\n        ...r.decoders || {\n            [r.prefix]: r\n        },\n        ...e.decoders || {\n            [e.prefix]: e\n        }\n    });\nclass is {\n    constructor(e, t, i, s){\n        this.name = e, this.prefix = t, this.baseEncode = i, this.baseDecode = s, this.encoder = new Zi(e, t, i), this.decoder = new es(e, t, s);\n    }\n    encode(e) {\n        return this.encoder.encode(e);\n    }\n    decode(e) {\n        return this.decoder.decode(e);\n    }\n}\nconst W = ({ name: r, prefix: e, encode: t, decode: i })=>new is(r, e, t, i), B = ({ prefix: r, name: e, alphabet: t })=>{\n    const { encode: i, decode: s } = Xi(t, e);\n    return W({\n        prefix: r,\n        name: e,\n        encode: i,\n        decode: (n)=>Ne(s(n))\n    });\n}, ss = (r, e, t, i)=>{\n    const s = {};\n    for(let d = 0; d < e.length; ++d)s[e[d]] = d;\n    let n = r.length;\n    for(; r[n - 1] === \"=\";)--n;\n    const o = new Uint8Array(n * t / 8 | 0);\n    let a = 0, h = 0, l = 0;\n    for(let d = 0; d < n; ++d){\n        const p = s[r[d]];\n        if (p === void 0) throw new SyntaxError(`Non-${i} character`);\n        h = h << t | p, a += t, a >= 8 && (a -= 8, o[l++] = 255 & h >> a);\n    }\n    if (a >= t || 255 & h << 8 - a) throw new SyntaxError(\"Unexpected end of data\");\n    return o;\n}, rs = (r, e, t)=>{\n    const i = e[e.length - 1] === \"=\", s = (1 << t) - 1;\n    let n = \"\", o = 0, a = 0;\n    for(let h = 0; h < r.length; ++h)for(a = a << 8 | r[h], o += 8; o > t;)o -= t, n += e[s & a >> o];\n    if (o && (n += e[s & a << t - o]), i) for(; n.length * t & 7;)n += \"=\";\n    return n;\n}, g = ({ name: r, prefix: e, bitsPerChar: t, alphabet: i })=>W({\n        prefix: e,\n        name: r,\n        encode (s) {\n            return rs(s, i, t);\n        },\n        decode (s) {\n            return ss(s, i, t, r);\n        }\n    }), ns = W({\n    prefix: \"\\x00\",\n    name: \"identity\",\n    encode: (r)=>Qi(r),\n    decode: (r)=>Wi(r)\n});\nvar os = Object.freeze({\n    __proto__: null,\n    identity: ns\n});\nconst as = g({\n    prefix: \"0\",\n    name: \"base2\",\n    alphabet: \"01\",\n    bitsPerChar: 1\n});\nvar hs = Object.freeze({\n    __proto__: null,\n    base2: as\n});\nconst cs = g({\n    prefix: \"7\",\n    name: \"base8\",\n    alphabet: \"01234567\",\n    bitsPerChar: 3\n});\nvar us = Object.freeze({\n    __proto__: null,\n    base8: cs\n});\nconst ls = B({\n    prefix: \"9\",\n    name: \"base10\",\n    alphabet: \"0123456789\"\n});\nvar ds = Object.freeze({\n    __proto__: null,\n    base10: ls\n});\nconst gs = g({\n    prefix: \"f\",\n    name: \"base16\",\n    alphabet: \"0123456789abcdef\",\n    bitsPerChar: 4\n}), ps = g({\n    prefix: \"F\",\n    name: \"base16upper\",\n    alphabet: \"0123456789ABCDEF\",\n    bitsPerChar: 4\n});\nvar Ds = Object.freeze({\n    __proto__: null,\n    base16: gs,\n    base16upper: ps\n});\nconst ys = g({\n    prefix: \"b\",\n    name: \"base32\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567\",\n    bitsPerChar: 5\n}), ms = g({\n    prefix: \"B\",\n    name: \"base32upper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",\n    bitsPerChar: 5\n}), bs = g({\n    prefix: \"c\",\n    name: \"base32pad\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567=\",\n    bitsPerChar: 5\n}), fs = g({\n    prefix: \"C\",\n    name: \"base32padupper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=\",\n    bitsPerChar: 5\n}), Es = g({\n    prefix: \"v\",\n    name: \"base32hex\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv\",\n    bitsPerChar: 5\n}), ws = g({\n    prefix: \"V\",\n    name: \"base32hexupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV\",\n    bitsPerChar: 5\n}), vs = g({\n    prefix: \"t\",\n    name: \"base32hexpad\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv=\",\n    bitsPerChar: 5\n}), Is = g({\n    prefix: \"T\",\n    name: \"base32hexpadupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV=\",\n    bitsPerChar: 5\n}), Cs = g({\n    prefix: \"h\",\n    name: \"base32z\",\n    alphabet: \"ybndrfg8ejkmcpqxot1uwisza345h769\",\n    bitsPerChar: 5\n});\nvar Rs = Object.freeze({\n    __proto__: null,\n    base32: ys,\n    base32upper: ms,\n    base32pad: bs,\n    base32padupper: fs,\n    base32hex: Es,\n    base32hexupper: ws,\n    base32hexpad: vs,\n    base32hexpadupper: Is,\n    base32z: Cs\n});\nconst _s = B({\n    prefix: \"k\",\n    name: \"base36\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuvwxyz\"\n}), Ss = B({\n    prefix: \"K\",\n    name: \"base36upper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n});\nvar Ts = Object.freeze({\n    __proto__: null,\n    base36: _s,\n    base36upper: Ss\n});\nconst Ps = B({\n    name: \"base58btc\",\n    prefix: \"z\",\n    alphabet: \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"\n}), xs = B({\n    name: \"base58flickr\",\n    prefix: \"Z\",\n    alphabet: \"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\"\n});\nvar Os = Object.freeze({\n    __proto__: null,\n    base58btc: Ps,\n    base58flickr: xs\n});\nconst As = g({\n    prefix: \"m\",\n    name: \"base64\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",\n    bitsPerChar: 6\n}), zs = g({\n    prefix: \"M\",\n    name: \"base64pad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n    bitsPerChar: 6\n}), Ns = g({\n    prefix: \"u\",\n    name: \"base64url\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",\n    bitsPerChar: 6\n}), Us = g({\n    prefix: \"U\",\n    name: \"base64urlpad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\",\n    bitsPerChar: 6\n});\nvar Ls = Object.freeze({\n    __proto__: null,\n    base64: As,\n    base64pad: zs,\n    base64url: Ns,\n    base64urlpad: Us\n});\nconst Le = Array.from(\"\\uD83D\\uDE80\\uD83E\\uDE90☄\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09☀\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02❤\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09☺\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E✌✨\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D❣\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33✋\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13⭐✅\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6✔\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90☹\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20☝\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B⚽\\uD83E\\uDD19☕\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81⚡\\uD83C\\uDF1E\\uD83C\\uDF88❌✊\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C✈\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74▶➡❓\\uD83D\\uDC8E\\uD83D\\uDCB8⬇\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A⚠\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37☎\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51❄\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42\"), Fs = Le.reduce((r, e, t)=>(r[t] = e, r), []), $s = Le.reduce((r, e, t)=>(r[e.codePointAt(0)] = t, r), []);\nfunction Ms(r) {\n    return r.reduce((e, t)=>(e += Fs[t], e), \"\");\n}\nfunction ks(r) {\n    const e = [];\n    for (const t of r){\n        const i = $s[t.codePointAt(0)];\n        if (i === void 0) throw new Error(`Non-base256emoji character: ${t}`);\n        e.push(i);\n    }\n    return new Uint8Array(e);\n}\nconst Ks = W({\n    prefix: \"\\uD83D\\uDE80\",\n    name: \"base256emoji\",\n    encode: Ms,\n    decode: ks\n});\nvar Bs = Object.freeze({\n    __proto__: null,\n    base256emoji: Ks\n}), Vs = $e, Fe = 128, js = 127, qs = ~js, Gs = Math.pow(2, 31);\nfunction $e(r, e, t) {\n    e = e || [], t = t || 0;\n    for(var i = t; r >= Gs;)e[t++] = r & 255 | Fe, r /= 128;\n    for(; r & qs;)e[t++] = r & 255 | Fe, r >>>= 7;\n    return e[t] = r | 0, $e.bytes = t - i + 1, e;\n}\nvar Ys = he, Hs = 128, Me = 127;\nfunction he(r, i) {\n    var t = 0, i = i || 0, s = 0, n = i, o, a = r.length;\n    do {\n        if (n >= a) throw he.bytes = 0, new RangeError(\"Could not decode varint\");\n        o = r[n++], t += s < 28 ? (o & Me) << s : (o & Me) * Math.pow(2, s), s += 7;\n    }while (o >= Hs);\n    return he.bytes = n - i, t;\n}\nvar Js = Math.pow(2, 7), Xs = Math.pow(2, 14), Ws = Math.pow(2, 21), Qs = Math.pow(2, 28), Zs = Math.pow(2, 35), er = Math.pow(2, 42), tr = Math.pow(2, 49), ir = Math.pow(2, 56), sr = Math.pow(2, 63), rr = function(r) {\n    return r < Js ? 1 : r < Xs ? 2 : r < Ws ? 3 : r < Qs ? 4 : r < Zs ? 5 : r < er ? 6 : r < tr ? 7 : r < ir ? 8 : r < sr ? 9 : 10;\n}, nr = {\n    encode: Vs,\n    decode: Ys,\n    encodingLength: rr\n}, ke = nr;\nconst Ke = (r, e, t = 0)=>(ke.encode(r, e, t), e), Be = (r)=>ke.encodingLength(r), ce = (r, e)=>{\n    const t = e.byteLength, i = Be(r), s = i + Be(t), n = new Uint8Array(s + t);\n    return Ke(r, n, 0), Ke(t, n, i), n.set(e, s), new or(r, t, e, n);\n};\nclass or {\n    constructor(e, t, i, s){\n        this.code = e, this.size = t, this.digest = i, this.bytes = s;\n    }\n}\nconst Ve = ({ name: r, code: e, encode: t })=>new ar(r, e, t);\nclass ar {\n    constructor(e, t, i){\n        this.name = e, this.code = t, this.encode = i;\n    }\n    digest(e) {\n        if (e instanceof Uint8Array) {\n            const t = this.encode(e);\n            return t instanceof Uint8Array ? ce(this.code, t) : t.then((i)=>ce(this.code, i));\n        } else throw Error(\"Unknown type, must be binary type\");\n    }\n}\nconst je = (r)=>async (e)=>new Uint8Array(await crypto.subtle.digest(r, e)), hr = Ve({\n    name: \"sha2-256\",\n    code: 18,\n    encode: je(\"SHA-256\")\n}), cr = Ve({\n    name: \"sha2-512\",\n    code: 19,\n    encode: je(\"SHA-512\")\n});\nvar ur = Object.freeze({\n    __proto__: null,\n    sha256: hr,\n    sha512: cr\n});\nconst qe = 0, lr = \"identity\", Ge = Ne, dr = (r)=>ce(qe, Ge(r)), gr = {\n    code: qe,\n    name: lr,\n    encode: Ge,\n    digest: dr\n};\nvar pr = Object.freeze({\n    __proto__: null,\n    identity: gr\n});\nnew TextEncoder, new TextDecoder;\nconst Ye = {\n    ...os,\n    ...hs,\n    ...us,\n    ...ds,\n    ...Ds,\n    ...Rs,\n    ...Ts,\n    ...Os,\n    ...Ls,\n    ...Bs\n};\n({\n    ...ur,\n    ...pr\n});\nfunction He(r) {\n    return globalThis.Buffer != null ? new Uint8Array(r.buffer, r.byteOffset, r.byteLength) : r;\n}\nfunction Dr(r = 0) {\n    return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? He(globalThis.Buffer.allocUnsafe(r)) : new Uint8Array(r);\n}\nfunction Je(r, e, t, i) {\n    return {\n        name: r,\n        prefix: e,\n        encoder: {\n            name: r,\n            prefix: e,\n            encode: t\n        },\n        decoder: {\n            decode: i\n        }\n    };\n}\nconst Xe = Je(\"utf8\", \"u\", (r)=>\"u\" + new TextDecoder(\"utf8\").decode(r), (r)=>new TextEncoder().encode(r.substring(1))), ue = Je(\"ascii\", \"a\", (r)=>{\n    let e = \"a\";\n    for(let t = 0; t < r.length; t++)e += String.fromCharCode(r[t]);\n    return e;\n}, (r)=>{\n    r = r.substring(1);\n    const e = Dr(r.length);\n    for(let t = 0; t < r.length; t++)e[t] = r.charCodeAt(t);\n    return e;\n}), yr = {\n    utf8: Xe,\n    \"utf-8\": Xe,\n    hex: Ye.base16,\n    latin1: ue,\n    ascii: ue,\n    binary: ue,\n    ...Ye\n};\nfunction mr(r, e = \"utf8\") {\n    const t = yr[e];\n    if (!t) throw new Error(`Unsupported encoding \"${e}\"`);\n    return (e === \"utf8\" || e === \"utf-8\") && globalThis.Buffer != null && globalThis.Buffer.from != null ? He(globalThis.Buffer.from(r, \"utf-8\")) : t.decoder.decode(`${t.prefix}${r}`);\n}\nconst le = \"wc\", We = 2, Q = \"core\", O = `${le}@2:${Q}:`, Qe = {\n    name: Q,\n    logger: \"error\"\n}, Ze = {\n    database: \":memory:\"\n}, et = \"crypto\", de = \"client_ed25519_seed\", tt = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_DAY, it = \"keychain\", st = \"0.3\", rt = \"messages\", nt = \"0.3\", ot = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.SIX_HOURS, at = \"publisher\", ht = \"irn\", ct = \"error\", ge = \"wss://relay.walletconnect.com\", pe = \"wss://relay.walletconnect.org\", ut = \"relayer\", D = {\n    message: \"relayer_message\",\n    message_ack: \"relayer_message_ack\",\n    connect: \"relayer_connect\",\n    disconnect: \"relayer_disconnect\",\n    error: \"relayer_error\",\n    connection_stalled: \"relayer_connection_stalled\",\n    transport_closed: \"relayer_transport_closed\",\n    publish: \"relayer_publish\"\n}, lt = \"_subscription\", P = {\n    payload: \"payload\",\n    connect: \"connect\",\n    disconnect: \"disconnect\",\n    error: \"error\"\n}, dt = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_SECOND, br = {\n    database: \":memory:\"\n}, gt = \"2.11.0\", pt = 1e4, Dt = \"0.3\", yt = \"WALLETCONNECT_CLIENT_ID\", w = {\n    created: \"subscription_created\",\n    deleted: \"subscription_deleted\",\n    expired: \"subscription_expired\",\n    disabled: \"subscription_disabled\",\n    sync: \"subscription_sync\",\n    resubscribed: \"subscription_resubscribed\"\n}, fr = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.THIRTY_DAYS, mt = \"subscription\", bt = \"0.3\", ft = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.FIVE_SECONDS * 1e3, Et = \"pairing\", wt = \"0.3\", Er = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.THIRTY_DAYS, F = {\n    wc_pairingDelete: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_DAY,\n            prompt: !1,\n            tag: 1e3\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_DAY,\n            prompt: !1,\n            tag: 1001\n        }\n    },\n    wc_pairingPing: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.THIRTY_SECONDS,\n            prompt: !1,\n            tag: 1002\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.THIRTY_SECONDS,\n            prompt: !1,\n            tag: 1003\n        }\n    },\n    unregistered_method: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_DAY,\n            prompt: !1,\n            tag: 0\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_DAY,\n            prompt: !1,\n            tag: 0\n        }\n    }\n}, V = {\n    create: \"pairing_create\",\n    expire: \"pairing_expire\",\n    delete: \"pairing_delete\",\n    ping: \"pairing_ping\"\n}, R = {\n    created: \"history_created\",\n    updated: \"history_updated\",\n    deleted: \"history_deleted\",\n    sync: \"history_sync\"\n}, vt = \"history\", It = \"0.3\", Ct = \"expirer\", v = {\n    created: \"expirer_created\",\n    deleted: \"expirer_deleted\",\n    expired: \"expirer_expired\",\n    sync: \"expirer_sync\"\n}, Rt = \"0.3\", wr = _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_DAY, Z = \"verify-api\", $ = \"https://verify.walletconnect.com\", ee = \"https://verify.walletconnect.org\", _t = [\n    $,\n    ee\n], St = \"echo\", Tt = \"https://echo.walletconnect.com\";\nclass Pt {\n    constructor(e, t){\n        this.core = e, this.logger = t, this.keychain = new Map, this.name = it, this.version = st, this.initialized = !1, this.storagePrefix = O, this.init = async ()=>{\n            if (!this.initialized) {\n                const i = await this.getKeyChain();\n                typeof i < \"u\" && (this.keychain = i), this.initialized = !0;\n            }\n        }, this.has = (i)=>(this.isInitialized(), this.keychain.has(i)), this.set = async (i, s)=>{\n            this.isInitialized(), this.keychain.set(i, s), await this.persist();\n        }, this.get = (i)=>{\n            this.isInitialized();\n            const s = this.keychain.get(i);\n            if (typeof s > \"u\") {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${i}`);\n                throw new Error(n);\n            }\n            return s;\n        }, this.del = async (i)=>{\n            this.isInitialized(), this.keychain.delete(i), await this.persist();\n        }, this.core = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    async setKeyChain(e) {\n        await this.core.storage.setItem(this.storageKey, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.mapToObj)(e));\n    }\n    async getKeyChain() {\n        const e = await this.core.storage.getItem(this.storageKey);\n        return typeof e < \"u\" ? (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.objToMap)(e) : void 0;\n    }\n    async persist() {\n        await this.setKeyChain(this.keychain);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass xt {\n    constructor(e, t, i){\n        this.core = e, this.logger = t, this.name = et, this.initialized = !1, this.init = async ()=>{\n            this.initialized || (await this.keychain.init(), this.initialized = !0);\n        }, this.hasKeys = (s)=>(this.isInitialized(), this.keychain.has(s)), this.getClientId = async ()=>{\n            this.isInitialized();\n            const s = await this.getClientSeed(), n = _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_5__.generateKeyPair(s);\n            return _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_5__.encodeIss(n.publicKey);\n        }, this.generateKeyPair = ()=>{\n            this.isInitialized();\n            const s = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.generateKeyPair)();\n            return this.setPrivateKey(s.publicKey, s.privateKey);\n        }, this.signJWT = async (s)=>{\n            this.isInitialized();\n            const n = await this.getClientSeed(), o = _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_5__.generateKeyPair(n), a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.generateRandomBytes32)(), h = tt;\n            return await _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_5__.signJWT(a, s, h, o);\n        }, this.generateSharedKey = (s, n, o)=>{\n            this.isInitialized();\n            const a = this.getPrivateKey(s), h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.deriveSymKey)(a, n);\n            return this.setSymKey(h, o);\n        }, this.setSymKey = async (s, n)=>{\n            this.isInitialized();\n            const o = n || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.hashKey)(s);\n            return await this.keychain.set(o, s), o;\n        }, this.deleteKeyPair = async (s)=>{\n            this.isInitialized(), await this.keychain.del(s);\n        }, this.deleteSymKey = async (s)=>{\n            this.isInitialized(), await this.keychain.del(s);\n        }, this.encode = async (s, n, o)=>{\n            this.isInitialized();\n            const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.validateEncoding)(o), h = (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_4__.safeJsonStringify)(n);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isTypeOneEnvelope)(a)) {\n                const y = a.senderPublicKey, M = a.receiverPublicKey;\n                s = await this.generateSharedKey(y, M);\n            }\n            const l = this.getSymKey(s), { type: d, senderPublicKey: p } = a;\n            return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.encrypt)({\n                type: d,\n                symKey: l,\n                message: h,\n                senderPublicKey: p\n            });\n        }, this.decode = async (s, n, o)=>{\n            this.isInitialized();\n            const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.validateDecoding)(n, o);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isTypeOneEnvelope)(a)) {\n                const h = a.receiverPublicKey, l = a.senderPublicKey;\n                s = await this.generateSharedKey(h, l);\n            }\n            try {\n                const h = this.getSymKey(s), l = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.decrypt)({\n                    symKey: h,\n                    encoded: n\n                });\n                return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_4__.safeJsonParse)(l);\n            } catch (h) {\n                this.logger.error(`Failed to decode message from topic: '${s}', clientId: '${await this.getClientId()}'`), this.logger.error(h);\n            }\n        }, this.getPayloadType = (s)=>{\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.deserialize)(s);\n            return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.decodeTypeByte)(n.type);\n        }, this.getPayloadSenderPublicKey = (s)=>{\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.deserialize)(s);\n            return n.senderPublicKey ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_6__.toString)(n.senderPublicKey, _walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.BASE16) : void 0;\n        }, this.core = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.keychain = i || new Pt(this.core, this.logger);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    async setPrivateKey(e, t) {\n        return await this.keychain.set(e, t), e;\n    }\n    getPrivateKey(e) {\n        return this.keychain.get(e);\n    }\n    async getClientSeed() {\n        let e = \"\";\n        try {\n            e = this.keychain.get(de);\n        } catch  {\n            e = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.generateRandomBytes32)(), await this.keychain.set(de, e);\n        }\n        return mr(e, \"base16\");\n    }\n    getSymKey(e) {\n        return this.keychain.get(e);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass Ot extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IMessageTracker {\n    constructor(e, t){\n        super(e, t), this.logger = e, this.core = t, this.messages = new Map, this.name = rt, this.version = nt, this.initialized = !1, this.storagePrefix = O, this.init = async ()=>{\n            if (!this.initialized) {\n                this.logger.trace(\"Initialized\");\n                try {\n                    const i = await this.getRelayerMessages();\n                    typeof i < \"u\" && (this.messages = i), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({\n                        type: \"method\",\n                        method: \"restore\",\n                        size: this.messages.size\n                    });\n                } catch (i) {\n                    this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(i);\n                } finally{\n                    this.initialized = !0;\n                }\n            }\n        }, this.set = async (i, s)=>{\n            this.isInitialized();\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.hashMessage)(s);\n            let o = this.messages.get(i);\n            return typeof o > \"u\" && (o = {}), typeof o[n] < \"u\" || (o[n] = s, this.messages.set(i, o), await this.persist()), n;\n        }, this.get = (i)=>{\n            this.isInitialized();\n            let s = this.messages.get(i);\n            return typeof s > \"u\" && (s = {}), s;\n        }, this.has = (i, s)=>{\n            this.isInitialized();\n            const n = this.get(i), o = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.hashMessage)(s);\n            return typeof n[o] < \"u\";\n        }, this.del = async (i)=>{\n            this.isInitialized(), this.messages.delete(i), await this.persist();\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(e, this.name), this.core = t;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    async setRelayerMessages(e) {\n        await this.core.storage.setItem(this.storageKey, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.mapToObj)(e));\n    }\n    async getRelayerMessages() {\n        const e = await this.core.storage.getItem(this.storageKey);\n        return typeof e < \"u\" ? (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.objToMap)(e) : void 0;\n    }\n    async persist() {\n        await this.setRelayerMessages(this.messages);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass vr extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IPublisher {\n    constructor(e, t){\n        super(e, t), this.relayer = e, this.logger = t, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = at, this.queue = new Map, this.publishTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.TEN_SECONDS), this.needsTransportRestart = !1, this.publish = async (i, s, n)=>{\n            var o;\n            this.logger.debug(\"Publishing Payload\"), this.logger.trace({\n                type: \"method\",\n                method: \"publish\",\n                params: {\n                    topic: i,\n                    message: s,\n                    opts: n\n                }\n            });\n            try {\n                const a = n?.ttl || ot, h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolName)(n), l = n?.prompt || !1, d = n?.tag || 0, p = n?.id || (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.getBigIntRpcId)().toString(), y = {\n                    topic: i,\n                    message: s,\n                    opts: {\n                        ttl: a,\n                        relay: h,\n                        prompt: l,\n                        tag: d,\n                        id: p\n                    }\n                }, M = setTimeout(()=>this.queue.set(p, y), this.publishTimeout);\n                try {\n                    await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createExpiringPromise)(this.rpcPublish(i, s, a, h, l, d, p), this.publishTimeout, \"Failed to publish payload, please try again.\"), this.removeRequestFromQueue(p), this.relayer.events.emit(D.publish, y);\n                } catch (u) {\n                    if (this.logger.debug(\"Publishing Payload stalled\"), this.needsTransportRestart = !0, (o = n?.internal) != null && o.throwOnFailedPublish) throw this.removeRequestFromQueue(p), u;\n                    return;\n                } finally{\n                    clearTimeout(M);\n                }\n                this.logger.debug(\"Successfully Published Payload\"), this.logger.trace({\n                    type: \"method\",\n                    method: \"publish\",\n                    params: {\n                        topic: i,\n                        message: s,\n                        opts: n\n                    }\n                });\n            } catch (a) {\n                throw this.logger.debug(\"Failed to Publish Payload\"), this.logger.error(a), a;\n            }\n        }, this.on = (i, s)=>{\n            this.events.on(i, s);\n        }, this.once = (i, s)=>{\n            this.events.once(i, s);\n        }, this.off = (i, s)=>{\n            this.events.off(i, s);\n        }, this.removeListener = (i, s)=>{\n            this.events.removeListener(i, s);\n        }, this.relayer = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.registerEventListeners();\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    rpcPublish(e, t, i, s, n, o, a) {\n        var h, l, d, p;\n        const y = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolApi)(s.protocol).publish,\n            params: {\n                topic: e,\n                message: t,\n                ttl: i,\n                prompt: n,\n                tag: o\n            },\n            id: a\n        };\n        return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isUndefined)((h = y.params) == null ? void 0 : h.prompt) && ((l = y.params) == null || delete l.prompt), (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isUndefined)((d = y.params) == null ? void 0 : d.tag) && ((p = y.params) == null || delete p.tag), this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"message\",\n            direction: \"outgoing\",\n            request: y\n        }), this.relayer.request(y);\n    }\n    removeRequestFromQueue(e) {\n        this.queue.delete(e);\n    }\n    checkQueue() {\n        this.queue.forEach(async (e)=>{\n            const { topic: t, message: i, opts: s } = e;\n            await this.publish(t, i, s);\n        });\n    }\n    registerEventListeners() {\n        this.relayer.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__.HEARTBEAT_EVENTS.pulse, ()=>{\n            if (this.needsTransportRestart) {\n                this.needsTransportRestart = !1, this.relayer.events.emit(D.connection_stalled);\n                return;\n            }\n            this.checkQueue();\n        }), this.relayer.on(D.message_ack, (e)=>{\n            this.removeRequestFromQueue(e.id.toString());\n        });\n    }\n}\nclass Ir {\n    constructor(){\n        this.map = new Map, this.set = (e, t)=>{\n            const i = this.get(e);\n            this.exists(e, t) || this.map.set(e, [\n                ...i,\n                t\n            ]);\n        }, this.get = (e)=>this.map.get(e) || [], this.exists = (e, t)=>this.get(e).includes(t), this.delete = (e, t)=>{\n            if (typeof t > \"u\") {\n                this.map.delete(e);\n                return;\n            }\n            if (!this.map.has(e)) return;\n            const i = this.get(e);\n            if (!this.exists(e, t)) return;\n            const s = i.filter((n)=>n !== t);\n            if (!s.length) {\n                this.map.delete(e);\n                return;\n            }\n            this.map.set(e, s);\n        }, this.clear = ()=>{\n            this.map.clear();\n        };\n    }\n    get topics() {\n        return Array.from(this.map.keys());\n    }\n}\nvar Cr = Object.defineProperty, Rr = Object.defineProperties, _r = Object.getOwnPropertyDescriptors, At = Object.getOwnPropertySymbols, Sr = Object.prototype.hasOwnProperty, Tr = Object.prototype.propertyIsEnumerable, zt = (r, e, t)=>e in r ? Cr(r, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : r[e] = t, j = (r, e)=>{\n    for(var t in e || (e = {}))Sr.call(e, t) && zt(r, t, e[t]);\n    if (At) for (var t of At(e))Tr.call(e, t) && zt(r, t, e[t]);\n    return r;\n}, De = (r, e)=>Rr(r, _r(e));\nclass Nt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.ISubscriber {\n    constructor(e, t){\n        super(e, t), this.relayer = e, this.logger = t, this.subscriptions = new Map, this.topicMap = new Ir, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = mt, this.version = bt, this.pending = new Map, this.cached = [], this.initialized = !1, this.pendingSubscriptionWatchLabel = \"pending_sub_watch_label\", this.pollingInterval = 20, this.storagePrefix = O, this.subscribeTimeout = 1e4, this.restartInProgress = !1, this.batchSubscribeTopicsLimit = 500, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), this.registerEventListeners(), this.clientId = await this.relayer.core.crypto.getClientId());\n        }, this.subscribe = async (i, s)=>{\n            await this.restartToComplete(), this.isInitialized(), this.logger.debug(\"Subscribing Topic\"), this.logger.trace({\n                type: \"method\",\n                method: \"subscribe\",\n                params: {\n                    topic: i,\n                    opts: s\n                }\n            });\n            try {\n                const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolName)(s), o = {\n                    topic: i,\n                    relay: n\n                };\n                this.pending.set(i, o);\n                const a = await this.rpcSubscribe(i, n);\n                return this.onSubscribe(a, o), this.logger.debug(\"Successfully Subscribed Topic\"), this.logger.trace({\n                    type: \"method\",\n                    method: \"subscribe\",\n                    params: {\n                        topic: i,\n                        opts: s\n                    }\n                }), a;\n            } catch (n) {\n                throw this.logger.debug(\"Failed to Subscribe Topic\"), this.logger.error(n), n;\n            }\n        }, this.unsubscribe = async (i, s)=>{\n            await this.restartToComplete(), this.isInitialized(), typeof s?.id < \"u\" ? await this.unsubscribeById(i, s.id, s) : await this.unsubscribeByTopic(i, s);\n        }, this.isSubscribed = async (i)=>this.topics.includes(i) ? !0 : await new Promise((s, n)=>{\n                const o = new _walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.Watch;\n                o.start(this.pendingSubscriptionWatchLabel);\n                const a = setInterval(()=>{\n                    !this.pending.has(i) && this.topics.includes(i) && (clearInterval(a), o.stop(this.pendingSubscriptionWatchLabel), s(!0)), o.elapsed(this.pendingSubscriptionWatchLabel) >= ft && (clearInterval(a), o.stop(this.pendingSubscriptionWatchLabel), n(new Error(\"Subscription resolution timeout\")));\n                }, this.pollingInterval);\n            }).catch(()=>!1), this.on = (i, s)=>{\n            this.events.on(i, s);\n        }, this.once = (i, s)=>{\n            this.events.once(i, s);\n        }, this.off = (i, s)=>{\n            this.events.off(i, s);\n        }, this.removeListener = (i, s)=>{\n            this.events.removeListener(i, s);\n        }, this.restart = async ()=>{\n            this.restartInProgress = !0, await this.restore(), await this.reset(), this.restartInProgress = !1;\n        }, this.relayer = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.clientId = \"\";\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get length() {\n        return this.subscriptions.size;\n    }\n    get ids() {\n        return Array.from(this.subscriptions.keys());\n    }\n    get values() {\n        return Array.from(this.subscriptions.values());\n    }\n    get topics() {\n        return this.topicMap.topics;\n    }\n    hasSubscription(e, t) {\n        let i = !1;\n        try {\n            i = this.getSubscription(e).topic === t;\n        } catch  {}\n        return i;\n    }\n    onEnable() {\n        this.cached = [], this.initialized = !0;\n    }\n    onDisable() {\n        this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear();\n    }\n    async unsubscribeByTopic(e, t) {\n        const i = this.topicMap.get(e);\n        await Promise.all(i.map(async (s)=>await this.unsubscribeById(e, s, t)));\n    }\n    async unsubscribeById(e, t, i) {\n        this.logger.debug(\"Unsubscribing Topic\"), this.logger.trace({\n            type: \"method\",\n            method: \"unsubscribe\",\n            params: {\n                topic: e,\n                id: t,\n                opts: i\n            }\n        });\n        try {\n            const s = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolName)(i);\n            await this.rpcUnsubscribe(e, t, s);\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getSdkError)(\"USER_DISCONNECTED\", `${this.name}, ${e}`);\n            await this.onUnsubscribe(e, t, n), this.logger.debug(\"Successfully Unsubscribed Topic\"), this.logger.trace({\n                type: \"method\",\n                method: \"unsubscribe\",\n                params: {\n                    topic: e,\n                    id: t,\n                    opts: i\n                }\n            });\n        } catch (s) {\n            throw this.logger.debug(\"Failed to Unsubscribe Topic\"), this.logger.error(s), s;\n        }\n    }\n    async rpcSubscribe(e, t) {\n        const i = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolApi)(t.protocol).subscribe,\n            params: {\n                topic: e\n            }\n        };\n        this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: i\n        });\n        try {\n            await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createExpiringPromise)(this.relayer.request(i), this.subscribeTimeout);\n        } catch  {\n            this.logger.debug(\"Outgoing Relay Subscribe Payload stalled\"), this.relayer.events.emit(D.connection_stalled);\n        }\n        return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.hashMessage)(e + this.clientId);\n    }\n    async rpcBatchSubscribe(e) {\n        if (!e.length) return;\n        const t = e[0].relay, i = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolApi)(t.protocol).batchSubscribe,\n            params: {\n                topics: e.map((s)=>s.topic)\n            }\n        };\n        this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: i\n        });\n        try {\n            return await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createExpiringPromise)(this.relayer.request(i), this.subscribeTimeout);\n        } catch  {\n            this.logger.debug(\"Outgoing Relay Payload stalled\"), this.relayer.events.emit(D.connection_stalled);\n        }\n    }\n    rpcUnsubscribe(e, t, i) {\n        const s = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolApi)(i.protocol).unsubscribe,\n            params: {\n                topic: e,\n                id: t\n            }\n        };\n        return this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: s\n        }), this.relayer.request(s);\n    }\n    onSubscribe(e, t) {\n        this.setSubscription(e, De(j({}, t), {\n            id: e\n        })), this.pending.delete(t.topic);\n    }\n    onBatchSubscribe(e) {\n        e.length && e.forEach((t)=>{\n            this.setSubscription(t.id, j({}, t)), this.pending.delete(t.topic);\n        });\n    }\n    async onUnsubscribe(e, t, i) {\n        this.events.removeAllListeners(t), this.hasSubscription(t, e) && this.deleteSubscription(t, i), await this.relayer.messages.del(e);\n    }\n    async setRelayerSubscriptions(e) {\n        await this.relayer.core.storage.setItem(this.storageKey, e);\n    }\n    async getRelayerSubscriptions() {\n        return await this.relayer.core.storage.getItem(this.storageKey);\n    }\n    setSubscription(e, t) {\n        this.subscriptions.has(e) || (this.logger.debug(\"Setting subscription\"), this.logger.trace({\n            type: \"method\",\n            method: \"setSubscription\",\n            id: e,\n            subscription: t\n        }), this.addSubscription(e, t));\n    }\n    addSubscription(e, t) {\n        this.subscriptions.set(e, j({}, t)), this.topicMap.set(t.topic, e), this.events.emit(w.created, t);\n    }\n    getSubscription(e) {\n        this.logger.debug(\"Getting subscription\"), this.logger.trace({\n            type: \"method\",\n            method: \"getSubscription\",\n            id: e\n        });\n        const t = this.subscriptions.get(e);\n        if (!t) {\n            const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw new Error(i);\n        }\n        return t;\n    }\n    deleteSubscription(e, t) {\n        this.logger.debug(\"Deleting subscription\"), this.logger.trace({\n            type: \"method\",\n            method: \"deleteSubscription\",\n            id: e,\n            reason: t\n        });\n        const i = this.getSubscription(e);\n        this.subscriptions.delete(e), this.topicMap.delete(i.topic, e), this.events.emit(w.deleted, De(j({}, i), {\n            reason: t\n        }));\n    }\n    async persist() {\n        await this.setRelayerSubscriptions(this.values), this.events.emit(w.sync);\n    }\n    async reset() {\n        if (this.cached.length) {\n            const e = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);\n            for(let t = 0; t < e; t++){\n                const i = this.cached.splice(0, this.batchSubscribeTopicsLimit);\n                await this.batchSubscribe(i);\n            }\n        }\n        this.events.emit(w.resubscribed);\n    }\n    async restore() {\n        try {\n            const e = await this.getRelayerSubscriptions();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.subscriptions.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                subscriptions: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e);\n        }\n    }\n    async batchSubscribe(e) {\n        if (!e.length) return;\n        const t = await this.rpcBatchSubscribe(e);\n        (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isValidArray)(t) && this.onBatchSubscribe(t.map((i, s)=>De(j({}, e[s]), {\n                id: i\n            })));\n    }\n    async onConnect() {\n        this.restartInProgress || (await this.restart(), this.onEnable());\n    }\n    onDisconnect() {\n        this.onDisable();\n    }\n    async checkPending() {\n        if (!this.initialized || this.relayer.transportExplicitlyClosed) return;\n        const e = [];\n        this.pending.forEach((t)=>{\n            e.push(t);\n        }), await this.batchSubscribe(e);\n    }\n    registerEventListeners() {\n        this.relayer.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__.HEARTBEAT_EVENTS.pulse, async ()=>{\n            await this.checkPending();\n        }), this.relayer.on(D.connect, async ()=>{\n            await this.onConnect();\n        }), this.relayer.on(D.disconnect, ()=>{\n            this.onDisconnect();\n        }), this.events.on(w.created, async (e)=>{\n            const t = w.created;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), await this.persist();\n        }), this.events.on(w.deleted, async (e)=>{\n            const t = w.deleted;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), await this.persist();\n        });\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n    async restartToComplete() {\n        this.restartInProgress && await new Promise((e)=>{\n            const t = setInterval(()=>{\n                this.restartInProgress || (clearInterval(t), e());\n            }, this.pollingInterval);\n        });\n    }\n}\nvar Pr = Object.defineProperty, Ut = Object.getOwnPropertySymbols, xr = Object.prototype.hasOwnProperty, Or = Object.prototype.propertyIsEnumerable, Lt = (r, e, t)=>e in r ? Pr(r, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : r[e] = t, Ar = (r, e)=>{\n    for(var t in e || (e = {}))xr.call(e, t) && Lt(r, t, e[t]);\n    if (Ut) for (var t of Ut(e))Or.call(e, t) && Lt(r, t, e[t]);\n    return r;\n};\nclass Ft extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IRelayer {\n    constructor(e){\n        super(e), this.protocol = \"wc\", this.version = 2, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = ut, this.transportExplicitlyClosed = !1, this.initialized = !1, this.connectionAttemptInProgress = !1, this.connectionStatusPollingInterval = 20, this.staleConnectionErrors = [\n            \"socket hang up\",\n            \"socket stalled\"\n        ], this.hasExperiencedNetworkDisruption = !1, this.request = async (t)=>{\n            this.logger.debug(\"Publishing Request Payload\");\n            try {\n                return await this.toEstablishConnection(), await this.provider.request(t);\n            } catch (i) {\n                throw this.logger.debug(\"Failed to Publish Request\"), this.logger.error(i), i;\n            }\n        }, this.onPayloadHandler = (t)=>{\n            this.onProviderPayload(t);\n        }, this.onConnectHandler = ()=>{\n            this.events.emit(D.connect);\n        }, this.onDisconnectHandler = ()=>{\n            this.onProviderDisconnect();\n        }, this.onProviderErrorHandler = (t)=>{\n            this.logger.error(t), this.events.emit(D.error, t), this.logger.info(\"Fatal socket error received, closing transport\"), this.transportClose();\n        }, this.registerProviderListeners = ()=>{\n            this.provider.on(P.payload, this.onPayloadHandler), this.provider.on(P.connect, this.onConnectHandler), this.provider.on(P.disconnect, this.onDisconnectHandler), this.provider.on(P.error, this.onProviderErrorHandler);\n        }, this.core = e.core, this.logger = typeof e.logger < \"u\" && typeof e.logger != \"string\" ? (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(e.logger, this.name) : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getDefaultLoggerOptions)({\n            level: e.logger || ct\n        })), this.messages = new Ot(this.logger, e.core), this.subscriber = new Nt(this, this.logger), this.publisher = new vr(this, this.logger), this.relayUrl = e?.relayUrl || ge, this.projectId = e.projectId, this.bundleId = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getBundleId)(), this.provider = {};\n    }\n    async init() {\n        this.logger.trace(\"Initialized\"), this.registerEventListeners(), await this.createProvider(), await Promise.all([\n            this.messages.init(),\n            this.subscriber.init()\n        ]);\n        try {\n            await this.transportOpen();\n        } catch  {\n            this.logger.warn(`Connection via ${this.relayUrl} failed, attempting to connect via failover domain ${pe}...`), await this.restartTransport(pe);\n        }\n        this.initialized = !0, setTimeout(async ()=>{\n            this.subscriber.topics.length === 0 && (this.logger.info(\"No topics subscribed to after init, closing transport\"), await this.transportClose(), this.transportExplicitlyClosed = !1);\n        }, pt);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get connected() {\n        return this.provider.connection.connected;\n    }\n    get connecting() {\n        return this.provider.connection.connecting;\n    }\n    async publish(e, t, i) {\n        this.isInitialized(), await this.publisher.publish(e, t, i), await this.recordMessageEvent({\n            topic: e,\n            message: t,\n            publishedAt: Date.now()\n        });\n    }\n    async subscribe(e, t) {\n        var i;\n        this.isInitialized();\n        let s = ((i = this.subscriber.topicMap.get(e)) == null ? void 0 : i[0]) || \"\";\n        if (s) return s;\n        let n;\n        const o = (a)=>{\n            a.topic === e && (this.subscriber.off(w.created, o), n());\n        };\n        return await Promise.all([\n            new Promise((a)=>{\n                n = a, this.subscriber.on(w.created, o);\n            }),\n            new Promise(async (a)=>{\n                s = await this.subscriber.subscribe(e, t), a();\n            })\n        ]), s;\n    }\n    async unsubscribe(e, t) {\n        this.isInitialized(), await this.subscriber.unsubscribe(e, t);\n    }\n    on(e, t) {\n        this.events.on(e, t);\n    }\n    once(e, t) {\n        this.events.once(e, t);\n    }\n    off(e, t) {\n        this.events.off(e, t);\n    }\n    removeListener(e, t) {\n        this.events.removeListener(e, t);\n    }\n    async transportClose() {\n        this.transportExplicitlyClosed = !0, this.hasExperiencedNetworkDisruption && this.connected ? await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createExpiringPromise)(this.provider.disconnect(), 1e3, \"provider.disconnect()\").catch(()=>this.onProviderDisconnect()) : this.connected && await this.provider.disconnect();\n    }\n    async transportOpen(e) {\n        if (this.transportExplicitlyClosed = !1, await this.confirmOnlineStateOrThrow(), !this.connectionAttemptInProgress) {\n            e && e !== this.relayUrl && (this.relayUrl = e, await this.transportClose(), await this.createProvider()), this.connectionAttemptInProgress = !0;\n            try {\n                await Promise.all([\n                    new Promise((t)=>{\n                        if (!this.initialized) return t();\n                        this.subscriber.once(w.resubscribed, ()=>{\n                            t();\n                        });\n                    }),\n                    new Promise(async (t, i)=>{\n                        try {\n                            await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createExpiringPromise)(this.provider.connect(), 1e4, `Socket stalled when trying to connect to ${this.relayUrl}`);\n                        } catch (s) {\n                            i(s);\n                            return;\n                        }\n                        t();\n                    })\n                ]);\n            } catch (t) {\n                this.logger.error(t);\n                const i = t;\n                if (!this.isConnectionStalled(i.message)) throw t;\n                this.provider.events.emit(P.disconnect);\n            } finally{\n                this.connectionAttemptInProgress = !1, this.hasExperiencedNetworkDisruption = !1;\n            }\n        }\n    }\n    async restartTransport(e) {\n        await this.confirmOnlineStateOrThrow(), !this.connectionAttemptInProgress && (this.relayUrl = e || this.relayUrl, await this.transportClose(), await this.createProvider(), await this.transportOpen());\n    }\n    async confirmOnlineStateOrThrow() {\n        if (!await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isOnline)()) throw new Error(\"No internet connection detected. Please restart your network and try again.\");\n    }\n    isConnectionStalled(e) {\n        return this.staleConnectionErrors.some((t)=>e.includes(t));\n    }\n    async createProvider() {\n        this.provider.connection && this.unregisterProviderListeners();\n        const e = await this.core.crypto.signJWT(this.relayUrl);\n        this.provider = new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_8__.JsonRpcProvider(new _walletconnect_jsonrpc_ws_connection__WEBPACK_IMPORTED_MODULE_10__[\"default\"]((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.formatRelayRpcUrl)({\n            sdkVersion: gt,\n            protocol: this.protocol,\n            version: this.version,\n            relayUrl: this.relayUrl,\n            projectId: this.projectId,\n            auth: e,\n            useOnCloseEvent: !0,\n            bundleId: this.bundleId\n        }))), this.registerProviderListeners();\n    }\n    async recordMessageEvent(e) {\n        const { topic: t, message: i } = e;\n        await this.messages.set(t, i);\n    }\n    async shouldIgnoreMessageEvent(e) {\n        const { topic: t, message: i } = e;\n        if (!i || i.length === 0) return this.logger.debug(`Ignoring invalid/empty message: ${i}`), !0;\n        if (!await this.subscriber.isSubscribed(t)) return this.logger.debug(`Ignoring message for non-subscribed topic ${t}`), !0;\n        const s = this.messages.has(t, i);\n        return s && this.logger.debug(`Ignoring duplicate message: ${i}`), s;\n    }\n    async onProviderPayload(e) {\n        if (this.logger.debug(\"Incoming Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"incoming\",\n            payload: e\n        }), (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcRequest)(e)) {\n            if (!e.method.endsWith(lt)) return;\n            const t = e.params, { topic: i, message: s, publishedAt: n } = t.data, o = {\n                topic: i,\n                message: s,\n                publishedAt: n\n            };\n            this.logger.debug(\"Emitting Relayer Payload\"), this.logger.trace(Ar({\n                type: \"event\",\n                event: t.id\n            }, o)), this.events.emit(t.id, o), await this.acknowledgePayload(e), await this.onMessageEvent(o);\n        } else (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcResponse)(e) && this.events.emit(D.message_ack, e);\n    }\n    async onMessageEvent(e) {\n        await this.shouldIgnoreMessageEvent(e) || (this.events.emit(D.message, e), await this.recordMessageEvent(e));\n    }\n    async acknowledgePayload(e) {\n        const t = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcResult)(e.id, !0);\n        await this.provider.connection.send(t);\n    }\n    unregisterProviderListeners() {\n        this.provider.off(P.payload, this.onPayloadHandler), this.provider.off(P.connect, this.onConnectHandler), this.provider.off(P.disconnect, this.onDisconnectHandler), this.provider.off(P.error, this.onProviderErrorHandler);\n    }\n    async registerEventListeners() {\n        this.events.on(D.connection_stalled, ()=>{\n            this.restartTransport().catch((t)=>this.logger.error(t));\n        });\n        let e = await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isOnline)();\n        (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.subscribeToNetworkChange)(async (t)=>{\n            this.initialized && e !== t && (e = t, t ? await this.restartTransport().catch((i)=>this.logger.error(i)) : (this.hasExperiencedNetworkDisruption = !0, await this.transportClose().catch((i)=>this.logger.error(i))));\n        });\n    }\n    onProviderDisconnect() {\n        this.events.emit(D.disconnect), this.attemptToReconnect();\n    }\n    attemptToReconnect() {\n        this.transportExplicitlyClosed || (this.logger.info(\"attemptToReconnect called. Connecting...\"), setTimeout(async ()=>{\n            await this.restartTransport().catch((e)=>this.logger.error(e));\n        }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(dt)));\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n    async toEstablishConnection() {\n        if (await this.confirmOnlineStateOrThrow(), !this.connected) {\n            if (this.connectionAttemptInProgress) return await new Promise((e)=>{\n                const t = setInterval(()=>{\n                    this.connected && (clearInterval(t), e());\n                }, this.connectionStatusPollingInterval);\n            });\n            await this.restartTransport();\n        }\n    }\n}\nvar zr = Object.defineProperty, $t = Object.getOwnPropertySymbols, Nr = Object.prototype.hasOwnProperty, Ur = Object.prototype.propertyIsEnumerable, Mt = (r, e, t)=>e in r ? zr(r, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : r[e] = t, kt = (r, e)=>{\n    for(var t in e || (e = {}))Nr.call(e, t) && Mt(r, t, e[t]);\n    if ($t) for (var t of $t(e))Ur.call(e, t) && Mt(r, t, e[t]);\n    return r;\n};\nclass Kt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IStore {\n    constructor(e, t, i, s = O, n = void 0){\n        super(e, t, i, s), this.core = e, this.logger = t, this.name = i, this.map = new Map, this.version = Dt, this.cached = [], this.initialized = !1, this.storagePrefix = O, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), await this.restore(), this.cached.forEach((o)=>{\n                this.getKey && o !== null && !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isUndefined)(o) ? this.map.set(this.getKey(o), o) : (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isProposalStruct)(o) ? this.map.set(o.id, o) : (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isSessionStruct)(o) && this.map.set(o.topic, o);\n            }), this.cached = [], this.initialized = !0);\n        }, this.set = async (o, a)=>{\n            this.isInitialized(), this.map.has(o) ? await this.update(o, a) : (this.logger.debug(\"Setting value\"), this.logger.trace({\n                type: \"method\",\n                method: \"set\",\n                key: o,\n                value: a\n            }), this.map.set(o, a), await this.persist());\n        }, this.get = (o)=>(this.isInitialized(), this.logger.debug(\"Getting value\"), this.logger.trace({\n                type: \"method\",\n                method: \"get\",\n                key: o\n            }), this.getData(o)), this.getAll = (o)=>(this.isInitialized(), o ? this.values.filter((a)=>Object.keys(o).every((h)=>lodash_isequal__WEBPACK_IMPORTED_MODULE_11___default()(a[h], o[h]))) : this.values), this.update = async (o, a)=>{\n            this.isInitialized(), this.logger.debug(\"Updating value\"), this.logger.trace({\n                type: \"method\",\n                method: \"update\",\n                key: o,\n                update: a\n            });\n            const h = kt(kt({}, this.getData(o)), a);\n            this.map.set(o, h), await this.persist();\n        }, this.delete = async (o, a)=>{\n            this.isInitialized(), this.map.has(o) && (this.logger.debug(\"Deleting value\"), this.logger.trace({\n                type: \"method\",\n                method: \"delete\",\n                key: o,\n                reason: a\n            }), this.map.delete(o), await this.persist());\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.storagePrefix = s, this.getKey = n;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get length() {\n        return this.map.size;\n    }\n    get keys() {\n        return Array.from(this.map.keys());\n    }\n    get values() {\n        return Array.from(this.map.values());\n    }\n    async setDataStore(e) {\n        await this.core.storage.setItem(this.storageKey, e);\n    }\n    async getDataStore() {\n        return await this.core.storage.getItem(this.storageKey);\n    }\n    getData(e) {\n        const t = this.map.get(e);\n        if (!t) {\n            const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw this.logger.error(i), new Error(i);\n        }\n        return t;\n    }\n    async persist() {\n        await this.setDataStore(this.values);\n    }\n    async restore() {\n        try {\n            const e = await this.getDataStore();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.map.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                value: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e);\n        }\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass Bt {\n    constructor(e, t){\n        this.core = e, this.logger = t, this.name = Et, this.version = wt, this.events = new (events__WEBPACK_IMPORTED_MODULE_0___default()), this.initialized = !1, this.storagePrefix = O, this.ignoredPayloadTypes = [\n            _walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.TYPE_1\n        ], this.registeredMethods = [], this.init = async ()=>{\n            this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = !0, this.logger.trace(\"Initialized\"));\n        }, this.register = ({ methods: i })=>{\n            this.isInitialized(), this.registeredMethods = [\n                ...new Set([\n                    ...this.registeredMethods,\n                    ...i\n                ])\n            ];\n        }, this.create = async ()=>{\n            this.isInitialized();\n            const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.generateRandomBytes32)(), s = await this.core.crypto.setSymKey(i), n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.FIVE_MINUTES), o = {\n                protocol: ht\n            }, a = {\n                topic: s,\n                expiry: n,\n                relay: o,\n                active: !1\n            }, h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.formatUri)({\n                protocol: this.core.protocol,\n                version: this.core.version,\n                topic: s,\n                symKey: i,\n                relay: o\n            });\n            return await this.pairings.set(s, a), await this.core.relayer.subscribe(s), this.core.expirer.set(s, n), {\n                topic: s,\n                uri: h\n            };\n        }, this.pair = async (i)=>{\n            this.isInitialized(), this.isValidPair(i);\n            const { topic: s, symKey: n, relay: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.parseUri)(i.uri);\n            let a;\n            if (this.pairings.keys.includes(s) && (a = this.pairings.get(s), a.active)) throw new Error(`Pairing already exists: ${s}. Please try again with a new connection URI.`);\n            const h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.FIVE_MINUTES), l = {\n                topic: s,\n                relay: o,\n                expiry: h,\n                active: !1\n            };\n            return await this.pairings.set(s, l), this.core.expirer.set(s, h), i.activatePairing && await this.activate({\n                topic: s\n            }), this.events.emit(V.create, l), this.core.crypto.keychain.has(s) || (await this.core.crypto.setSymKey(n, s), await this.core.relayer.subscribe(s, {\n                relay: o\n            })), l;\n        }, this.activate = async ({ topic: i })=>{\n            this.isInitialized();\n            const s = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.THIRTY_DAYS);\n            await this.pairings.update(i, {\n                active: !0,\n                expiry: s\n            }), this.core.expirer.set(i, s);\n        }, this.ping = async (i)=>{\n            this.isInitialized(), await this.isValidPing(i);\n            const { topic: s } = i;\n            if (this.pairings.keys.includes(s)) {\n                const n = await this.sendRequest(s, \"wc_pairingPing\", {}), { done: o, resolve: a, reject: h } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createDelayedPromise)();\n                this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.engineEvent)(\"pairing_ping\", n), ({ error: l })=>{\n                    l ? h(l) : a();\n                }), await o();\n            }\n        }, this.updateExpiry = async ({ topic: i, expiry: s })=>{\n            this.isInitialized(), await this.pairings.update(i, {\n                expiry: s\n            });\n        }, this.updateMetadata = async ({ topic: i, metadata: s })=>{\n            this.isInitialized(), await this.pairings.update(i, {\n                peerMetadata: s\n            });\n        }, this.getPairings = ()=>(this.isInitialized(), this.pairings.values), this.disconnect = async (i)=>{\n            this.isInitialized(), await this.isValidDisconnect(i);\n            const { topic: s } = i;\n            this.pairings.keys.includes(s) && (await this.sendRequest(s, \"wc_pairingDelete\", (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getSdkError)(\"USER_DISCONNECTED\")), await this.deletePairing(s));\n        }, this.sendRequest = async (i, s, n)=>{\n            const o = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcRequest)(s, n), a = await this.core.crypto.encode(i, o), h = F[s].req;\n            return this.core.history.set(i, o), this.core.relayer.publish(i, a, h), o.id;\n        }, this.sendResult = async (i, s, n)=>{\n            const o = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcResult)(i, n), a = await this.core.crypto.encode(s, o), h = await this.core.history.get(s, i), l = F[h.request.method].res;\n            await this.core.relayer.publish(s, a, l), await this.core.history.resolve(o);\n        }, this.sendError = async (i, s, n)=>{\n            const o = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcError)(i, n), a = await this.core.crypto.encode(s, o), h = await this.core.history.get(s, i), l = F[h.request.method] ? F[h.request.method].res : F.unregistered_method.res;\n            await this.core.relayer.publish(s, a, l), await this.core.history.resolve(o);\n        }, this.deletePairing = async (i, s)=>{\n            await this.core.relayer.unsubscribe(i), await Promise.all([\n                this.pairings.delete(i, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getSdkError)(\"USER_DISCONNECTED\")),\n                this.core.crypto.deleteSymKey(i),\n                s ? Promise.resolve() : this.core.expirer.del(i)\n            ]);\n        }, this.cleanup = async ()=>{\n            const i = this.pairings.getAll().filter((s)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isExpired)(s.expiry));\n            await Promise.all(i.map((s)=>this.deletePairing(s.topic)));\n        }, this.onRelayEventRequest = (i)=>{\n            const { topic: s, payload: n } = i;\n            switch(n.method){\n                case \"wc_pairingPing\":\n                    return this.onPairingPingRequest(s, n);\n                case \"wc_pairingDelete\":\n                    return this.onPairingDeleteRequest(s, n);\n                default:\n                    return this.onUnknownRpcMethodRequest(s, n);\n            }\n        }, this.onRelayEventResponse = async (i)=>{\n            const { topic: s, payload: n } = i, o = (await this.core.history.get(s, n.id)).request.method;\n            switch(o){\n                case \"wc_pairingPing\":\n                    return this.onPairingPingResponse(s, n);\n                default:\n                    return this.onUnknownRpcMethodResponse(o);\n            }\n        }, this.onPairingPingRequest = async (i, s)=>{\n            const { id: n } = s;\n            try {\n                this.isValidPing({\n                    topic: i\n                }), await this.sendResult(n, i, !0), this.events.emit(V.ping, {\n                    id: n,\n                    topic: i\n                });\n            } catch (o) {\n                await this.sendError(n, i, o), this.logger.error(o);\n            }\n        }, this.onPairingPingResponse = (i, s)=>{\n            const { id: n } = s;\n            setTimeout(()=>{\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcResult)(s) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.engineEvent)(\"pairing_ping\", n), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcError)(s) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.engineEvent)(\"pairing_ping\", n), {\n                    error: s.error\n                });\n            }, 500);\n        }, this.onPairingDeleteRequest = async (i, s)=>{\n            const { id: n } = s;\n            try {\n                this.isValidDisconnect({\n                    topic: i\n                }), await this.deletePairing(i), this.events.emit(V.delete, {\n                    id: n,\n                    topic: i\n                });\n            } catch (o) {\n                await this.sendError(n, i, o), this.logger.error(o);\n            }\n        }, this.onUnknownRpcMethodRequest = async (i, s)=>{\n            const { id: n, method: o } = s;\n            try {\n                if (this.registeredMethods.includes(o)) return;\n                const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getSdkError)(\"WC_METHOD_UNSUPPORTED\", o);\n                await this.sendError(n, i, a), this.logger.error(a);\n            } catch (a) {\n                await this.sendError(n, i, a), this.logger.error(a);\n            }\n        }, this.onUnknownRpcMethodResponse = (i)=>{\n            this.registeredMethods.includes(i) || this.logger.error((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getSdkError)(\"WC_METHOD_UNSUPPORTED\", i));\n        }, this.isValidPair = (i)=>{\n            var s;\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isValidParams)(i)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", `pair() params: ${i}`);\n                throw new Error(o);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isValidUrl)(i.uri)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", `pair() uri: ${i.uri}`);\n                throw new Error(o);\n            }\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.parseUri)(i.uri);\n            if (!((s = n?.relay) != null && s.protocol)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", \"pair() uri#relay-protocol\");\n                throw new Error(o);\n            }\n            if (!(n != null && n.symKey)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", \"pair() uri#symKey\");\n                throw new Error(o);\n            }\n        }, this.isValidPing = async (i)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isValidParams)(i)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", `ping() params: ${i}`);\n                throw new Error(n);\n            }\n            const { topic: s } = i;\n            await this.isValidPairingTopic(s);\n        }, this.isValidDisconnect = async (i)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isValidParams)(i)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", `disconnect() params: ${i}`);\n                throw new Error(n);\n            }\n            const { topic: s } = i;\n            await this.isValidPairingTopic(s);\n        }, this.isValidPairingTopic = async (i)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isValidString)(i, !1)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", `pairing topic should be a string: ${i}`);\n                throw new Error(s);\n            }\n            if (!this.pairings.keys.includes(i)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NO_MATCHING_KEY\", `pairing topic doesn't exist: ${i}`);\n                throw new Error(s);\n            }\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isExpired)(this.pairings.get(i).expiry)) {\n                await this.deletePairing(i);\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"EXPIRED\", `pairing topic: ${i}`);\n                throw new Error(s);\n            }\n        }, this.core = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.pairings = new Kt(this.core, this.logger, this.name, this.storagePrefix);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n    registerRelayerEvents() {\n        this.core.relayer.on(D.message, async (e)=>{\n            const { topic: t, message: i } = e;\n            if (!this.pairings.keys.includes(t) || this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(i))) return;\n            const s = await this.core.crypto.decode(t, i);\n            try {\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcRequest)(s) ? (this.core.history.set(t, s), this.onRelayEventRequest({\n                    topic: t,\n                    payload: s\n                })) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcResponse)(s) && (await this.core.history.resolve(s), await this.onRelayEventResponse({\n                    topic: t,\n                    payload: s\n                }), this.core.history.delete(t, s.id));\n            } catch (n) {\n                this.logger.error(n);\n            }\n        });\n    }\n    registerExpirerEvents() {\n        this.core.expirer.on(v.expired, async (e)=>{\n            const { topic: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.parseExpirerTarget)(e.target);\n            t && this.pairings.keys.includes(t) && (await this.deletePairing(t, !0), this.events.emit(V.expire, {\n                topic: t\n            }));\n        });\n    }\n}\nclass Vt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IJsonRpcHistory {\n    constructor(e, t){\n        super(e, t), this.core = e, this.logger = t, this.records = new Map, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = vt, this.version = It, this.cached = [], this.initialized = !1, this.storagePrefix = O, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), await this.restore(), this.cached.forEach((i)=>this.records.set(i.id, i)), this.cached = [], this.registerEventListeners(), this.initialized = !0);\n        }, this.set = (i, s, n)=>{\n            if (this.isInitialized(), this.logger.debug(\"Setting JSON-RPC request history record\"), this.logger.trace({\n                type: \"method\",\n                method: \"set\",\n                topic: i,\n                request: s,\n                chainId: n\n            }), this.records.has(s.id)) return;\n            const o = {\n                id: s.id,\n                topic: i,\n                request: {\n                    method: s.method,\n                    params: s.params || null\n                },\n                chainId: n,\n                expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.THIRTY_DAYS)\n            };\n            this.records.set(o.id, o), this.events.emit(R.created, o);\n        }, this.resolve = async (i)=>{\n            if (this.isInitialized(), this.logger.debug(\"Updating JSON-RPC response history record\"), this.logger.trace({\n                type: \"method\",\n                method: \"update\",\n                response: i\n            }), !this.records.has(i.id)) return;\n            const s = await this.getRecord(i.id);\n            typeof s.response > \"u\" && (s.response = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcError)(i) ? {\n                error: i.error\n            } : {\n                result: i.result\n            }, this.records.set(s.id, s), this.events.emit(R.updated, s));\n        }, this.get = async (i, s)=>(this.isInitialized(), this.logger.debug(\"Getting record\"), this.logger.trace({\n                type: \"method\",\n                method: \"get\",\n                topic: i,\n                id: s\n            }), await this.getRecord(s)), this.delete = (i, s)=>{\n            this.isInitialized(), this.logger.debug(\"Deleting record\"), this.logger.trace({\n                type: \"method\",\n                method: \"delete\",\n                id: s\n            }), this.values.forEach((n)=>{\n                if (n.topic === i) {\n                    if (typeof s < \"u\" && n.id !== s) return;\n                    this.records.delete(n.id), this.events.emit(R.deleted, n);\n                }\n            });\n        }, this.exists = async (i, s)=>(this.isInitialized(), this.records.has(s) ? (await this.getRecord(s)).topic === i : !1), this.on = (i, s)=>{\n            this.events.on(i, s);\n        }, this.once = (i, s)=>{\n            this.events.once(i, s);\n        }, this.off = (i, s)=>{\n            this.events.off(i, s);\n        }, this.removeListener = (i, s)=>{\n            this.events.removeListener(i, s);\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get size() {\n        return this.records.size;\n    }\n    get keys() {\n        return Array.from(this.records.keys());\n    }\n    get values() {\n        return Array.from(this.records.values());\n    }\n    get pending() {\n        const e = [];\n        return this.values.forEach((t)=>{\n            if (typeof t.response < \"u\") return;\n            const i = {\n                topic: t.topic,\n                request: (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcRequest)(t.request.method, t.request.params, t.id),\n                chainId: t.chainId\n            };\n            return e.push(i);\n        }), e;\n    }\n    async setJsonRpcRecords(e) {\n        await this.core.storage.setItem(this.storageKey, e);\n    }\n    async getJsonRpcRecords() {\n        return await this.core.storage.getItem(this.storageKey);\n    }\n    getRecord(e) {\n        this.isInitialized();\n        const t = this.records.get(e);\n        if (!t) {\n            const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw new Error(i);\n        }\n        return t;\n    }\n    async persist() {\n        await this.setJsonRpcRecords(this.values), this.events.emit(R.sync);\n    }\n    async restore() {\n        try {\n            const e = await this.getJsonRpcRecords();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.records.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                records: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e);\n        }\n    }\n    registerEventListeners() {\n        this.events.on(R.created, (e)=>{\n            const t = R.created;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                record: e\n            }), this.persist();\n        }), this.events.on(R.updated, (e)=>{\n            const t = R.updated;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                record: e\n            }), this.persist();\n        }), this.events.on(R.deleted, (e)=>{\n            const t = R.deleted;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                record: e\n            }), this.persist();\n        }), this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__.HEARTBEAT_EVENTS.pulse, ()=>{\n            this.cleanup();\n        });\n    }\n    cleanup() {\n        try {\n            this.records.forEach((e)=>{\n                (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(e.expiry || 0) - Date.now() <= 0 && (this.logger.info(`Deleting expired history log: ${e.id}`), this.delete(e.topic, e.id));\n            });\n        } catch (e) {\n            this.logger.warn(e);\n        }\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass jt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IExpirer {\n    constructor(e, t){\n        super(e, t), this.core = e, this.logger = t, this.expirations = new Map, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = Ct, this.version = Rt, this.cached = [], this.initialized = !1, this.storagePrefix = O, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), await this.restore(), this.cached.forEach((i)=>this.expirations.set(i.target, i)), this.cached = [], this.registerEventListeners(), this.initialized = !0);\n        }, this.has = (i)=>{\n            try {\n                const s = this.formatTarget(i);\n                return typeof this.getExpiration(s) < \"u\";\n            } catch  {\n                return !1;\n            }\n        }, this.set = (i, s)=>{\n            this.isInitialized();\n            const n = this.formatTarget(i), o = {\n                target: n,\n                expiry: s\n            };\n            this.expirations.set(n, o), this.checkExpiry(n, o), this.events.emit(v.created, {\n                target: n,\n                expiration: o\n            });\n        }, this.get = (i)=>{\n            this.isInitialized();\n            const s = this.formatTarget(i);\n            return this.getExpiration(s);\n        }, this.del = (i)=>{\n            if (this.isInitialized(), this.has(i)) {\n                const s = this.formatTarget(i), n = this.getExpiration(s);\n                this.expirations.delete(s), this.events.emit(v.deleted, {\n                    target: s,\n                    expiration: n\n                });\n            }\n        }, this.on = (i, s)=>{\n            this.events.on(i, s);\n        }, this.once = (i, s)=>{\n            this.events.once(i, s);\n        }, this.off = (i, s)=>{\n            this.events.off(i, s);\n        }, this.removeListener = (i, s)=>{\n            this.events.removeListener(i, s);\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get length() {\n        return this.expirations.size;\n    }\n    get keys() {\n        return Array.from(this.expirations.keys());\n    }\n    get values() {\n        return Array.from(this.expirations.values());\n    }\n    formatTarget(e) {\n        if (typeof e == \"string\") return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.formatTopicTarget)(e);\n        if (typeof e == \"number\") return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.formatIdTarget)(e);\n        const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"UNKNOWN_TYPE\", `Target type: ${typeof e}`);\n        throw new Error(t);\n    }\n    async setExpirations(e) {\n        await this.core.storage.setItem(this.storageKey, e);\n    }\n    async getExpirations() {\n        return await this.core.storage.getItem(this.storageKey);\n    }\n    async persist() {\n        await this.setExpirations(this.values), this.events.emit(v.sync);\n    }\n    async restore() {\n        try {\n            const e = await this.getExpirations();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.expirations.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                expirations: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e);\n        }\n    }\n    getExpiration(e) {\n        const t = this.expirations.get(e);\n        if (!t) {\n            const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw this.logger.error(i), new Error(i);\n        }\n        return t;\n    }\n    checkExpiry(e, t) {\n        const { expiry: i } = t;\n        (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(i) - Date.now() <= 0 && this.expire(e, t);\n    }\n    expire(e, t) {\n        this.expirations.delete(e), this.events.emit(v.expired, {\n            target: e,\n            expiration: t\n        });\n    }\n    checkExpirations() {\n        this.core.relayer.connected && this.expirations.forEach((e, t)=>this.checkExpiry(t, e));\n    }\n    registerEventListeners() {\n        this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__.HEARTBEAT_EVENTS.pulse, ()=>this.checkExpirations()), this.events.on(v.created, (e)=>{\n            const t = v.created;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), this.persist();\n        }), this.events.on(v.expired, (e)=>{\n            const t = v.expired;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), this.persist();\n        }), this.events.on(v.deleted, (e)=>{\n            const t = v.deleted;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), this.persist();\n        });\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass qt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IVerify {\n    constructor(e, t){\n        super(e, t), this.projectId = e, this.logger = t, this.name = Z, this.initialized = !1, this.queue = [], this.verifyDisabled = !1, this.init = async (i)=>{\n            if (this.verifyDisabled || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isReactNative)() || !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isBrowser)()) return;\n            const s = this.getVerifyUrl(i?.verifyUrl);\n            this.verifyUrl !== s && this.removeIframe(), this.verifyUrl = s;\n            try {\n                await this.createIframe();\n            } catch (n) {\n                this.logger.info(`Verify iframe failed to load: ${this.verifyUrl}`), this.logger.info(n);\n            }\n            if (!this.initialized) {\n                this.removeIframe(), this.verifyUrl = ee;\n                try {\n                    await this.createIframe();\n                } catch (n) {\n                    this.logger.info(`Verify iframe failed to load: ${this.verifyUrl}`), this.logger.info(n), this.verifyDisabled = !0;\n                }\n            }\n        }, this.register = async (i)=>{\n            this.initialized ? this.sendPost(i.attestationId) : (this.addToQueue(i.attestationId), await this.init());\n        }, this.resolve = async (i)=>{\n            if (this.isDevEnv) return \"\";\n            const s = this.getVerifyUrl(i?.verifyUrl);\n            let n;\n            try {\n                n = await this.fetchAttestation(i.attestationId, s);\n            } catch (o) {\n                this.logger.info(`failed to resolve attestation: ${i.attestationId} from url: ${s}`), this.logger.info(o), n = await this.fetchAttestation(i.attestationId, ee);\n            }\n            return n;\n        }, this.fetchAttestation = async (i, s)=>{\n            this.logger.info(`resolving attestation: ${i} from url: ${s}`);\n            const n = this.startAbortTimer(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.ONE_SECOND * 2), o = await fetch(`${s}/attestation/${i}`, {\n                signal: this.abortController.signal\n            });\n            return clearTimeout(n), o.status === 200 ? await o.json() : void 0;\n        }, this.addToQueue = (i)=>{\n            this.queue.push(i);\n        }, this.processQueue = ()=>{\n            this.queue.length !== 0 && (this.queue.forEach((i)=>this.sendPost(i)), this.queue = []);\n        }, this.sendPost = (i)=>{\n            var s;\n            try {\n                if (!this.iframe) return;\n                (s = this.iframe.contentWindow) == null || s.postMessage(i, \"*\"), this.logger.info(`postMessage sent: ${i} ${this.verifyUrl}`);\n            } catch  {}\n        }, this.createIframe = async ()=>{\n            let i;\n            const s = (n)=>{\n                n.data === \"verify_ready\" && (this.initialized = !0, this.processQueue(), window.removeEventListener(\"message\", s), i());\n            };\n            await Promise.race([\n                new Promise((n)=>{\n                    if (document.getElementById(Z)) return n();\n                    window.addEventListener(\"message\", s);\n                    const o = document.createElement(\"iframe\");\n                    o.id = Z, o.src = `${this.verifyUrl}/${this.projectId}`, o.style.display = \"none\", document.body.append(o), this.iframe = o, i = n;\n                }),\n                new Promise((n, o)=>setTimeout(()=>{\n                        window.removeEventListener(\"message\", s), o(\"verify iframe load timeout\");\n                    }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.FIVE_SECONDS)))\n            ]);\n        }, this.removeIframe = ()=>{\n            this.iframe && (this.iframe.remove(), this.iframe = void 0, this.initialized = !1);\n        }, this.getVerifyUrl = (i)=>{\n            let s = i || $;\n            return _t.includes(s) || (this.logger.info(`verify url: ${s}, not included in trusted list, assigning default: ${$}`), s = $), s;\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.verifyUrl = $, this.abortController = new AbortController, this.isDevEnv = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isNode)() && process.env.IS_VITEST;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    startAbortTimer(e) {\n        return this.abortController = new AbortController, setTimeout(()=>this.abortController.abort(), (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_7__.toMiliseconds)(e));\n    }\n}\nclass Gt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IEchoClient {\n    constructor(e, t){\n        super(e, t), this.projectId = e, this.logger = t, this.context = St, this.registerDeviceToken = async (i)=>{\n            const { clientId: s, token: n, notificationType: o, enableEncrypted: a = !1 } = i, h = `${Tt}/${this.projectId}/clients`;\n            await isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_12___default()(h, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    client_id: s,\n                    type: o,\n                    token: n,\n                    always_raw: a\n                })\n            });\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.context);\n    }\n}\nvar Lr = Object.defineProperty, Yt = Object.getOwnPropertySymbols, Fr = Object.prototype.hasOwnProperty, $r = Object.prototype.propertyIsEnumerable, Ht = (r, e, t)=>e in r ? Lr(r, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : r[e] = t, Jt = (r, e)=>{\n    for(var t in e || (e = {}))Fr.call(e, t) && Ht(r, t, e[t]);\n    if (Yt) for (var t of Yt(e))$r.call(e, t) && Ht(r, t, e[t]);\n    return r;\n};\nclass te extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.ICore {\n    constructor(e){\n        super(e), this.protocol = le, this.version = We, this.name = Q, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.initialized = !1, this.on = (i, s)=>this.events.on(i, s), this.once = (i, s)=>this.events.once(i, s), this.off = (i, s)=>this.events.off(i, s), this.removeListener = (i, s)=>this.events.removeListener(i, s), this.projectId = e?.projectId, this.relayUrl = e?.relayUrl || ge, this.customStoragePrefix = e != null && e.customStoragePrefix ? `:${e.customStoragePrefix}` : \"\";\n        const t = typeof e?.logger < \"u\" && typeof e?.logger != \"string\" ? e.logger : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getDefaultLoggerOptions)({\n            level: e?.logger || Qe.logger\n        }));\n        this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.heartbeat = new _walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_2__.HeartBeat, this.crypto = new xt(this, this.logger, e?.keychain), this.history = new Vt(this, this.logger), this.expirer = new jt(this, this.logger), this.storage = e != null && e.storage ? e.storage : new _walletconnect_keyvaluestorage__WEBPACK_IMPORTED_MODULE_1__[\"default\"](Jt(Jt({}, Ze), e?.storageOptions)), this.relayer = new Ft({\n            core: this,\n            logger: this.logger,\n            relayUrl: this.relayUrl,\n            projectId: this.projectId\n        }), this.pairing = new Bt(this, this.logger), this.verify = new qt(this.projectId || \"\", this.logger), this.echoClient = new Gt(this.projectId || \"\", this.logger);\n    }\n    static async init(e) {\n        const t = new te(e);\n        await t.initialize();\n        const i = await t.crypto.getClientId();\n        return await t.storage.setItem(yt, i), t;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    async start() {\n        this.initialized || await this.initialize();\n    }\n    async initialize() {\n        this.logger.trace(\"Initialized\");\n        try {\n            await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.initialized = !0, this.logger.info(\"Core Initialization Success\");\n        } catch (e) {\n            throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e), this.logger.error(e.message), e;\n        }\n    }\n}\nconst Mr = te;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/core/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/environment/dist/cjs/crypto.js":
/*!************************************************************************!*\
  !*** ../../node_modules/@walletconnect/environment/dist/cjs/crypto.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isBrowserCryptoAvailable = exports.getSubtleCrypto = exports.getBrowerCrypto = void 0;\nfunction getBrowerCrypto() {\n    return (global === null || global === void 0 ? void 0 : global.crypto) || (global === null || global === void 0 ? void 0 : global.msCrypto) || {};\n}\nexports.getBrowerCrypto = getBrowerCrypto;\nfunction getSubtleCrypto() {\n    const browserCrypto = getBrowerCrypto();\n    return browserCrypto.subtle || browserCrypto.webkitSubtle;\n}\nexports.getSubtleCrypto = getSubtleCrypto;\nfunction isBrowserCryptoAvailable() {\n    return !!getBrowerCrypto() && !!getSubtleCrypto();\n}\nexports.isBrowserCryptoAvailable = isBrowserCryptoAvailable; //# sourceMappingURL=crypto.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50L2Rpc3QvY2pzL2NyeXB0by5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZ0NBQWdDLEdBQUdBLHVCQUF1QixHQUFHQSx1QkFBdUIsR0FBRyxLQUFLO0FBQzVGLFNBQVNJO0lBQ0wsT0FBTyxDQUFDQyxXQUFXLFFBQVFBLFdBQVcsS0FBSyxJQUFJLEtBQUssSUFBSUEsT0FBT0MsTUFBTSxLQUFNRCxDQUFBQSxXQUFXLFFBQVFBLFdBQVcsS0FBSyxJQUFJLEtBQUssSUFBSUEsT0FBT0UsUUFBUSxLQUFLLENBQUM7QUFDcEo7QUFDQVAsdUJBQXVCLEdBQUdJO0FBQzFCLFNBQVNEO0lBQ0wsTUFBTUssZ0JBQWdCSjtJQUN0QixPQUFPSSxjQUFjQyxNQUFNLElBQUlELGNBQWNFLFlBQVk7QUFDN0Q7QUFDQVYsdUJBQXVCLEdBQUdHO0FBQzFCLFNBQVNEO0lBQ0wsT0FBTyxDQUFDLENBQUNFLHFCQUFxQixDQUFDLENBQUNEO0FBQ3BDO0FBQ0FILGdDQUFnQyxHQUFHRSwwQkFDbkMsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9lbnZpcm9ubWVudC9kaXN0L2Nqcy9jcnlwdG8uanM/YjBjMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNCcm93c2VyQ3J5cHRvQXZhaWxhYmxlID0gZXhwb3J0cy5nZXRTdWJ0bGVDcnlwdG8gPSBleHBvcnRzLmdldEJyb3dlckNyeXB0byA9IHZvaWQgMDtcbmZ1bmN0aW9uIGdldEJyb3dlckNyeXB0bygpIHtcbiAgICByZXR1cm4gKGdsb2JhbCA9PT0gbnVsbCB8fCBnbG9iYWwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGdsb2JhbC5jcnlwdG8pIHx8IChnbG9iYWwgPT09IG51bGwgfHwgZ2xvYmFsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBnbG9iYWwubXNDcnlwdG8pIHx8IHt9O1xufVxuZXhwb3J0cy5nZXRCcm93ZXJDcnlwdG8gPSBnZXRCcm93ZXJDcnlwdG87XG5mdW5jdGlvbiBnZXRTdWJ0bGVDcnlwdG8oKSB7XG4gICAgY29uc3QgYnJvd3NlckNyeXB0byA9IGdldEJyb3dlckNyeXB0bygpO1xuICAgIHJldHVybiBicm93c2VyQ3J5cHRvLnN1YnRsZSB8fCBicm93c2VyQ3J5cHRvLndlYmtpdFN1YnRsZTtcbn1cbmV4cG9ydHMuZ2V0U3VidGxlQ3J5cHRvID0gZ2V0U3VidGxlQ3J5cHRvO1xuZnVuY3Rpb24gaXNCcm93c2VyQ3J5cHRvQXZhaWxhYmxlKCkge1xuICAgIHJldHVybiAhIWdldEJyb3dlckNyeXB0bygpICYmICEhZ2V0U3VidGxlQ3J5cHRvKCk7XG59XG5leHBvcnRzLmlzQnJvd3NlckNyeXB0b0F2YWlsYWJsZSA9IGlzQnJvd3NlckNyeXB0b0F2YWlsYWJsZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyeXB0by5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJpc0Jyb3dzZXJDcnlwdG9BdmFpbGFibGUiLCJnZXRTdWJ0bGVDcnlwdG8iLCJnZXRCcm93ZXJDcnlwdG8iLCJnbG9iYWwiLCJjcnlwdG8iLCJtc0NyeXB0byIsImJyb3dzZXJDcnlwdG8iLCJzdWJ0bGUiLCJ3ZWJraXRTdWJ0bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/environment/dist/cjs/crypto.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/environment/dist/cjs/env.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/@walletconnect/environment/dist/cjs/env.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isBrowser = exports.isNode = exports.isReactNative = void 0;\nfunction isReactNative() {\n    return typeof document === \"undefined\" && typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\";\n}\nexports.isReactNative = isReactNative;\nfunction isNode() {\n    return typeof process !== \"undefined\" && typeof process.versions !== \"undefined\" && typeof process.versions.node !== \"undefined\";\n}\nexports.isNode = isNode;\nfunction isBrowser() {\n    return !isReactNative() && !isNode();\n}\nexports.isBrowser = isBrowser; //# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50L2Rpc3QvY2pzL2Vudi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsaUJBQWlCLEdBQUdBLGNBQWMsR0FBR0EscUJBQXFCLEdBQUcsS0FBSztBQUNsRSxTQUFTSTtJQUNMLE9BQVEsT0FBT0MsYUFBYSxlQUN4QixPQUFPQyxjQUFjLGVBQ3JCQSxVQUFVQyxPQUFPLEtBQUs7QUFDOUI7QUFDQVAscUJBQXFCLEdBQUdJO0FBQ3hCLFNBQVNEO0lBQ0wsT0FBUSxPQUFPSyxZQUFZLGVBQ3ZCLE9BQU9BLFFBQVFDLFFBQVEsS0FBSyxlQUM1QixPQUFPRCxRQUFRQyxRQUFRLENBQUNDLElBQUksS0FBSztBQUN6QztBQUNBVixjQUFjLEdBQUdHO0FBQ2pCLFNBQVNEO0lBQ0wsT0FBTyxDQUFDRSxtQkFBbUIsQ0FBQ0Q7QUFDaEM7QUFDQUgsaUJBQWlCLEdBQUdFLFdBQ3BCLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL2NzYS8uLi8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnQvZGlzdC9janMvZW52LmpzPzBhYjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzQnJvd3NlciA9IGV4cG9ydHMuaXNOb2RlID0gZXhwb3J0cy5pc1JlYWN0TmF0aXZlID0gdm9pZCAwO1xuZnVuY3Rpb24gaXNSZWFjdE5hdGl2ZSgpIHtcbiAgICByZXR1cm4gKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgICAgICB0eXBlb2YgbmF2aWdhdG9yICE9PSBcInVuZGVmaW5lZFwiICYmXG4gICAgICAgIG5hdmlnYXRvci5wcm9kdWN0ID09PSBcIlJlYWN0TmF0aXZlXCIpO1xufVxuZXhwb3J0cy5pc1JlYWN0TmF0aXZlID0gaXNSZWFjdE5hdGl2ZTtcbmZ1bmN0aW9uIGlzTm9kZSgpIHtcbiAgICByZXR1cm4gKHR5cGVvZiBwcm9jZXNzICE9PSBcInVuZGVmaW5lZFwiICYmXG4gICAgICAgIHR5cGVvZiBwcm9jZXNzLnZlcnNpb25zICE9PSBcInVuZGVmaW5lZFwiICYmXG4gICAgICAgIHR5cGVvZiBwcm9jZXNzLnZlcnNpb25zLm5vZGUgIT09IFwidW5kZWZpbmVkXCIpO1xufVxuZXhwb3J0cy5pc05vZGUgPSBpc05vZGU7XG5mdW5jdGlvbiBpc0Jyb3dzZXIoKSB7XG4gICAgcmV0dXJuICFpc1JlYWN0TmF0aXZlKCkgJiYgIWlzTm9kZSgpO1xufVxuZXhwb3J0cy5pc0Jyb3dzZXIgPSBpc0Jyb3dzZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lbnYuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaXNCcm93c2VyIiwiaXNOb2RlIiwiaXNSZWFjdE5hdGl2ZSIsImRvY3VtZW50IiwibmF2aWdhdG9yIiwicHJvZHVjdCIsInByb2Nlc3MiLCJ2ZXJzaW9ucyIsIm5vZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/environment/dist/cjs/env.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/environment/dist/cjs/index.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@walletconnect/environment/dist/cjs/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../../node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./crypto */ \"(ssr)/../../node_modules/@walletconnect/environment/dist/cjs/crypto.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./env */ \"(ssr)/../../node_modules/@walletconnect/environment/dist/cjs/env.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50L2Rpc3QvY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFVBQVVDLG1CQUFPQSxDQUFDLDBEQUFPO0FBQy9CRCxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLHdGQUFVLEdBQUdIO0FBQzFDRSxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLGtGQUFPLEdBQUdILFVBQ3ZDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NzYS8uLi8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnQvZGlzdC9janMvaW5kZXguanM/ODUyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jcnlwdG9cIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZW52XCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiX19leHBvcnRTdGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/environment/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/ethereum-provider/dist/index.es.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/@walletconnect/ethereum-provider/dist/index.es.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EthereumProvider: () => (/* binding */ G),\n/* harmony export */   OPTIONAL_EVENTS: () => (/* binding */ _),\n/* harmony export */   OPTIONAL_METHODS: () => (/* binding */ E),\n/* harmony export */   REQUIRED_EVENTS: () => (/* binding */ m),\n/* harmony export */   REQUIRED_METHODS: () => (/* binding */ u),\n/* harmony export */   \"default\": () => (/* binding */ v)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/../../node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var _walletconnect_universal_provider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/universal-provider */ \"(ssr)/../../node_modules/@walletconnect/universal-provider/dist/index.es.js\");\n\n\n\nconst P = \"wc\", S = \"ethereum_provider\", $ = `${P}@2:${S}:`, j = \"https://rpc.walletconnect.com/v1/\", u = [\n    \"eth_sendTransaction\",\n    \"personal_sign\"\n], E = [\n    \"eth_accounts\",\n    \"eth_requestAccounts\",\n    \"eth_sendRawTransaction\",\n    \"eth_sign\",\n    \"eth_signTransaction\",\n    \"eth_signTypedData\",\n    \"eth_signTypedData_v3\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"personal_sign\",\n    \"wallet_switchEthereumChain\",\n    \"wallet_addEthereumChain\",\n    \"wallet_getPermissions\",\n    \"wallet_requestPermissions\",\n    \"wallet_registerOnboarding\",\n    \"wallet_watchAsset\",\n    \"wallet_scanQRCode\"\n], m = [\n    \"chainChanged\",\n    \"accountsChanged\"\n], _ = [\n    \"chainChanged\",\n    \"accountsChanged\",\n    \"message\",\n    \"disconnect\",\n    \"connect\"\n];\nvar N = Object.defineProperty, q = Object.defineProperties, D = Object.getOwnPropertyDescriptors, y = Object.getOwnPropertySymbols, U = Object.prototype.hasOwnProperty, Q = Object.prototype.propertyIsEnumerable, O = (a, t, s)=>t in a ? N(a, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: s\n    }) : a[t] = s, p = (a, t)=>{\n    for(var s in t || (t = {}))U.call(t, s) && O(a, s, t[s]);\n    if (y) for (var s of y(t))Q.call(t, s) && O(a, s, t[s]);\n    return a;\n}, M = (a, t)=>q(a, D(t));\nfunction g(a) {\n    return Number(a[0].split(\":\")[1]);\n}\nfunction f(a) {\n    return `0x${a.toString(16)}`;\n}\nfunction L(a) {\n    const { chains: t, optionalChains: s, methods: i, optionalMethods: n, events: e, optionalEvents: h, rpcMap: c } = a;\n    if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.isValidArray)(t)) throw new Error(\"Invalid chains\");\n    const o = {\n        chains: t,\n        methods: i || u,\n        events: e || m,\n        rpcMap: p({}, t.length ? {\n            [g(t)]: c[g(t)]\n        } : {})\n    }, r = e?.filter((l)=>!m.includes(l)), d = i?.filter((l)=>!u.includes(l));\n    if (!s && !h && !n && !(r != null && r.length) && !(d != null && d.length)) return {\n        required: t.length ? o : void 0\n    };\n    const C = r?.length && d?.length || !s, I = {\n        chains: [\n            ...new Set(C ? o.chains.concat(s || []) : s)\n        ],\n        methods: [\n            ...new Set(o.methods.concat(n != null && n.length ? n : E))\n        ],\n        events: [\n            ...new Set(o.events.concat(h != null && h.length ? h : _))\n        ],\n        rpcMap: c\n    };\n    return {\n        required: t.length ? o : void 0,\n        optional: s.length ? I : void 0\n    };\n}\nclass v {\n    constructor(){\n        this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.namespace = \"eip155\", this.accounts = [], this.chainId = 1, this.STORAGE_KEY = $, this.on = (t, s)=>(this.events.on(t, s), this), this.once = (t, s)=>(this.events.once(t, s), this), this.removeListener = (t, s)=>(this.events.removeListener(t, s), this), this.off = (t, s)=>(this.events.off(t, s), this), this.parseAccount = (t)=>this.isCompatibleChainId(t) ? this.parseAccountId(t).address : t, this.signer = {}, this.rpc = {};\n    }\n    static async init(t) {\n        const s = new v;\n        return await s.initialize(t), s;\n    }\n    async request(t) {\n        return await this.signer.request(t, this.formatChainId(this.chainId));\n    }\n    sendAsync(t, s) {\n        this.signer.sendAsync(t, s, this.formatChainId(this.chainId));\n    }\n    get connected() {\n        return this.signer.client ? this.signer.client.core.relayer.connected : !1;\n    }\n    get connecting() {\n        return this.signer.client ? this.signer.client.core.relayer.connecting : !1;\n    }\n    async enable() {\n        return this.session || await this.connect(), await this.request({\n            method: \"eth_requestAccounts\"\n        });\n    }\n    async connect(t) {\n        if (!this.signer.client) throw new Error(\"Provider not initialized. Call init() first\");\n        this.loadConnectOpts(t);\n        const { required: s, optional: i } = L(this.rpc);\n        try {\n            const n = await new Promise(async (h, c)=>{\n                var o;\n                this.rpc.showQrModal && ((o = this.modal) == null || o.subscribeModal((r)=>{\n                    !r.open && !this.signer.session && (this.signer.abortPairingAttempt(), c(new Error(\"Connection request reset. Please try again.\")));\n                })), await this.signer.connect(M(p({\n                    namespaces: p({}, s && {\n                        [this.namespace]: s\n                    })\n                }, i && {\n                    optionalNamespaces: {\n                        [this.namespace]: i\n                    }\n                }), {\n                    pairingTopic: t?.pairingTopic\n                })).then((r)=>{\n                    h(r);\n                }).catch((r)=>{\n                    c(new Error(r.message));\n                });\n            });\n            if (!n) return;\n            const e = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.getAccountsFromNamespaces)(n.namespaces, [\n                this.namespace\n            ]);\n            this.setChainIds(this.rpc.chains.length ? this.rpc.chains : e), this.setAccounts(e), this.events.emit(\"connect\", {\n                chainId: f(this.chainId)\n            });\n        } catch (n) {\n            throw this.signer.logger.error(n), n;\n        } finally{\n            this.modal && this.modal.closeModal();\n        }\n    }\n    async disconnect() {\n        this.session && await this.signer.disconnect(), this.reset();\n    }\n    get isWalletConnect() {\n        return !0;\n    }\n    get session() {\n        return this.signer.session;\n    }\n    registerEventListeners() {\n        this.signer.on(\"session_event\", (t)=>{\n            const { params: s } = t, { event: i } = s;\n            i.name === \"accountsChanged\" ? (this.accounts = this.parseAccounts(i.data), this.events.emit(\"accountsChanged\", this.accounts)) : i.name === \"chainChanged\" ? this.setChainId(this.formatChainId(i.data)) : this.events.emit(i.name, i.data), this.events.emit(\"session_event\", t);\n        }), this.signer.on(\"chainChanged\", (t)=>{\n            const s = parseInt(t);\n            this.chainId = s, this.events.emit(\"chainChanged\", f(this.chainId)), this.persist();\n        }), this.signer.on(\"session_update\", (t)=>{\n            this.events.emit(\"session_update\", t);\n        }), this.signer.on(\"session_delete\", (t)=>{\n            this.reset(), this.events.emit(\"session_delete\", t), this.events.emit(\"disconnect\", M(p({}, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.getSdkError)(\"USER_DISCONNECTED\")), {\n                data: t.topic,\n                name: \"USER_DISCONNECTED\"\n            }));\n        }), this.signer.on(\"display_uri\", (t)=>{\n            var s, i;\n            this.rpc.showQrModal && ((s = this.modal) == null || s.closeModal(), (i = this.modal) == null || i.openModal({\n                uri: t\n            })), this.events.emit(\"display_uri\", t);\n        });\n    }\n    switchEthereumChain(t) {\n        this.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [\n                {\n                    chainId: t.toString(16)\n                }\n            ]\n        });\n    }\n    isCompatibleChainId(t) {\n        return typeof t == \"string\" ? t.startsWith(`${this.namespace}:`) : !1;\n    }\n    formatChainId(t) {\n        return `${this.namespace}:${t}`;\n    }\n    parseChainId(t) {\n        return Number(t.split(\":\")[1]);\n    }\n    setChainIds(t) {\n        const s = t.filter((i)=>this.isCompatibleChainId(i)).map((i)=>this.parseChainId(i));\n        s.length && (this.chainId = s[0], this.events.emit(\"chainChanged\", f(this.chainId)), this.persist());\n    }\n    setChainId(t) {\n        if (this.isCompatibleChainId(t)) {\n            const s = this.parseChainId(t);\n            this.chainId = s, this.switchEthereumChain(s);\n        }\n    }\n    parseAccountId(t) {\n        const [s, i, n] = t.split(\":\");\n        return {\n            chainId: `${s}:${i}`,\n            address: n\n        };\n    }\n    setAccounts(t) {\n        this.accounts = t.filter((s)=>this.parseChainId(this.parseAccountId(s).chainId) === this.chainId).map((s)=>this.parseAccountId(s).address), this.events.emit(\"accountsChanged\", this.accounts);\n    }\n    getRpcConfig(t) {\n        var s, i;\n        const n = (s = t?.chains) != null ? s : [], e = (i = t?.optionalChains) != null ? i : [], h = n.concat(e);\n        if (!h.length) throw new Error(\"No chains specified in either `chains` or `optionalChains`\");\n        const c = n.length ? t?.methods || u : [], o = n.length ? t?.events || m : [], r = t?.optionalMethods || [], d = t?.optionalEvents || [], C = t?.rpcMap || this.buildRpcMap(h, t.projectId), I = t?.qrModalOptions || void 0;\n        return {\n            chains: n?.map((l)=>this.formatChainId(l)),\n            optionalChains: e.map((l)=>this.formatChainId(l)),\n            methods: c,\n            events: o,\n            optionalMethods: r,\n            optionalEvents: d,\n            rpcMap: C,\n            showQrModal: !!(t != null && t.showQrModal),\n            qrModalOptions: I,\n            projectId: t.projectId,\n            metadata: t.metadata\n        };\n    }\n    buildRpcMap(t, s) {\n        const i = {};\n        return t.forEach((n)=>{\n            i[n] = this.getRpcUrl(n, s);\n        }), i;\n    }\n    async initialize(t) {\n        if (this.rpc = this.getRpcConfig(t), this.chainId = this.rpc.chains.length ? g(this.rpc.chains) : g(this.rpc.optionalChains), this.signer = await _walletconnect_universal_provider__WEBPACK_IMPORTED_MODULE_1__.UniversalProvider.init({\n            projectId: this.rpc.projectId,\n            metadata: this.rpc.metadata,\n            disableProviderPing: t.disableProviderPing,\n            relayUrl: t.relayUrl,\n            storageOptions: t.storageOptions\n        }), this.registerEventListeners(), await this.loadPersistedSession(), this.rpc.showQrModal) {\n            let s;\n            try {\n                const { WalletConnectModal: i } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@walletconnect\"), __webpack_require__.e(\"vendor-chunks/valtio\"), __webpack_require__.e(\"vendor-chunks/proxy-compare\")]).then(__webpack_require__.bind(__webpack_require__, /*! @walletconnect/modal */ \"(ssr)/../../node_modules/@walletconnect/modal/dist/index.js\"));\n                s = i;\n            } catch  {\n                throw new Error(\"To use QR modal, please install @walletconnect/modal package\");\n            }\n            if (s) try {\n                this.modal = new s(p({\n                    projectId: this.rpc.projectId\n                }, this.rpc.qrModalOptions));\n            } catch (i) {\n                throw this.signer.logger.error(i), new Error(\"Could not generate WalletConnectModal Instance\");\n            }\n        }\n    }\n    loadConnectOpts(t) {\n        if (!t) return;\n        const { chains: s, optionalChains: i, rpcMap: n } = t;\n        s && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.isValidArray)(s) && (this.rpc.chains = s.map((e)=>this.formatChainId(e)), s.forEach((e)=>{\n            this.rpc.rpcMap[e] = n?.[e] || this.getRpcUrl(e);\n        })), i && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.isValidArray)(i) && (this.rpc.optionalChains = [], this.rpc.optionalChains = i?.map((e)=>this.formatChainId(e)), i.forEach((e)=>{\n            this.rpc.rpcMap[e] = n?.[e] || this.getRpcUrl(e);\n        }));\n    }\n    getRpcUrl(t, s) {\n        var i;\n        return ((i = this.rpc.rpcMap) == null ? void 0 : i[t]) || `${j}?chainId=eip155:${t}&projectId=${s || this.rpc.projectId}`;\n    }\n    async loadPersistedSession() {\n        if (!this.session) return;\n        const t = await this.signer.client.core.storage.getItem(`${this.STORAGE_KEY}/chainId`), s = this.session.namespaces[`${this.namespace}:${t}`] ? this.session.namespaces[`${this.namespace}:${t}`] : this.session.namespaces[this.namespace];\n        this.setChainIds(t ? [\n            this.formatChainId(t)\n        ] : s?.accounts), this.setAccounts(s?.accounts);\n    }\n    reset() {\n        this.chainId = 1, this.accounts = [];\n    }\n    persist() {\n        this.session && this.signer.client.core.storage.setItem(`${this.STORAGE_KEY}/chainId`, this.chainId);\n    }\n    parseAccounts(t) {\n        return typeof t == \"string\" || t instanceof String ? [\n            this.parseAccount(t)\n        ] : t.map((s)=>this.parseAccount(s));\n    }\n}\nconst G = v;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/ethereum-provider/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/events/dist/esm/events.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/@walletconnect/events/dist/esm/events.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IEvents: () => (/* binding */ IEvents)\n/* harmony export */ });\nclass IEvents {\n} //# sourceMappingURL=events.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2V2ZW50cy9kaXN0L2VzbS9ldmVudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BO0FBQ2IsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jc2EvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2V2ZW50cy9kaXN0L2VzbS9ldmVudHMuanM/ZDFmNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgSUV2ZW50cyB7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ldmVudHMuanMubWFwIl0sIm5hbWVzIjpbIklFdmVudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/events/dist/esm/events.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/events/dist/esm/index.js":
/*!******************************************************************!*\
  !*** ../../node_modules/@walletconnect/events/dist/esm/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IEvents: () => (/* reexport safe */ _events__WEBPACK_IMPORTED_MODULE_0__.IEvents)\n/* harmony export */ });\n/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events */ \"(ssr)/../../node_modules/@walletconnect/events/dist/esm/events.js\");\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2V2ZW50cy9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5QixDQUN6QixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jc2EvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2V2ZW50cy9kaXN0L2VzbS9pbmRleC5qcz8xODQyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2V2ZW50c1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/events/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.HEARTBEAT_EVENTS = exports.HEARTBEAT_INTERVAL = void 0;\nconst time_1 = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/../../node_modules/@walletconnect/time/dist/cjs/index.js\");\nexports.HEARTBEAT_INTERVAL = time_1.FIVE_SECONDS;\nexports.HEARTBEAT_EVENTS = {\n    pulse: \"heartbeat_pulse\"\n}; //# sourceMappingURL=heartbeat.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2hlYXJ0YmVhdC9kaXN0L2Nqcy9jb25zdGFudHMvaGVhcnRiZWF0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx3QkFBd0IsR0FBR0EsMEJBQTBCLEdBQUcsS0FBSztBQUM3RCxNQUFNSSxTQUFTQyxtQkFBT0EsQ0FBQywyRkFBcUI7QUFDNUNMLDBCQUEwQixHQUFHSSxPQUFPRSxZQUFZO0FBQ2hETix3QkFBd0IsR0FBRztJQUN2Qk8sT0FBTztBQUNYLEdBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9oZWFydGJlYXQvZGlzdC9janMvY29uc3RhbnRzL2hlYXJ0YmVhdC5qcz8wMTQ2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IRUFSVEJFQVRfRVZFTlRTID0gZXhwb3J0cy5IRUFSVEJFQVRfSU5URVJWQUwgPSB2b2lkIDA7XG5jb25zdCB0aW1lXzEgPSByZXF1aXJlKFwiQHdhbGxldGNvbm5lY3QvdGltZVwiKTtcbmV4cG9ydHMuSEVBUlRCRUFUX0lOVEVSVkFMID0gdGltZV8xLkZJVkVfU0VDT05EUztcbmV4cG9ydHMuSEVBUlRCRUFUX0VWRU5UUyA9IHtcbiAgICBwdWxzZTogXCJoZWFydGJlYXRfcHVsc2VcIixcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZWFydGJlYXQuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiSEVBUlRCRUFUX0VWRU5UUyIsIkhFQVJUQkVBVF9JTlRFUlZBTCIsInRpbWVfMSIsInJlcXVpcmUiLCJGSVZFX1NFQ09ORFMiLCJwdWxzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../../node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./heartbeat */ \"(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2hlYXJ0YmVhdC9kaXN0L2Nqcy9jb25zdGFudHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsMERBQU87QUFDL0JELFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsc0dBQWEsR0FBR0gsVUFDN0MsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9oZWFydGJlYXQvZGlzdC9janMvY29uc3RhbnRzL2luZGV4LmpzPzU3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vaGVhcnRiZWF0XCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiX19leHBvcnRTdGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.HeartBeat = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../../node_modules/tslib/tslib.es6.js\");\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst time_1 = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/../../node_modules/@walletconnect/time/dist/cjs/index.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js\");\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js\");\nclass HeartBeat extends types_1.IHeartBeat {\n    constructor(opts){\n        super(opts);\n        this.events = new events_1.EventEmitter();\n        this.interval = constants_1.HEARTBEAT_INTERVAL;\n        this.interval = (opts === null || opts === void 0 ? void 0 : opts.interval) || constants_1.HEARTBEAT_INTERVAL;\n    }\n    static init(opts) {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            const heartbeat = new HeartBeat(opts);\n            yield heartbeat.init();\n            return heartbeat;\n        });\n    }\n    init() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            yield this.initialize();\n        });\n    }\n    stop() {\n        clearInterval(this.intervalRef);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    initialize() {\n        return tslib_1.__awaiter(this, void 0, void 0, function*() {\n            this.intervalRef = setInterval(()=>this.pulse(), time_1.toMiliseconds(this.interval));\n        });\n    }\n    pulse() {\n        this.events.emit(constants_1.HEARTBEAT_EVENTS.pulse);\n    }\n}\nexports.HeartBeat = HeartBeat; //# sourceMappingURL=heartbeat.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2hlYXJ0YmVhdC9kaXN0L2Nqcy9oZWFydGJlYXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlCQUFpQixHQUFHLEtBQUs7QUFDekIsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsMERBQU87QUFDL0IsTUFBTUMsV0FBV0QsbUJBQU9BLENBQUMsc0JBQVE7QUFDakMsTUFBTUUsU0FBU0YsbUJBQU9BLENBQUMsMkZBQXFCO0FBQzVDLE1BQU1HLFVBQVVILG1CQUFPQSxDQUFDLDBGQUFTO0FBQ2pDLE1BQU1JLGNBQWNKLG1CQUFPQSxDQUFDLGtHQUFhO0FBQ3pDLE1BQU1GLGtCQUFrQkssUUFBUUUsVUFBVTtJQUN0Q0MsWUFBWUMsSUFBSSxDQUFFO1FBQ2QsS0FBSyxDQUFDQTtRQUNOLElBQUksQ0FBQ0MsTUFBTSxHQUFHLElBQUlQLFNBQVNRLFlBQVk7UUFDdkMsSUFBSSxDQUFDQyxRQUFRLEdBQUdOLFlBQVlPLGtCQUFrQjtRQUM5QyxJQUFJLENBQUNELFFBQVEsR0FBRyxDQUFDSCxTQUFTLFFBQVFBLFNBQVMsS0FBSyxJQUFJLEtBQUssSUFBSUEsS0FBS0csUUFBUSxLQUFLTixZQUFZTyxrQkFBa0I7SUFDakg7SUFDQSxPQUFPQyxLQUFLTCxJQUFJLEVBQUU7UUFDZCxPQUFPUixRQUFRYyxTQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7WUFDM0MsTUFBTUMsWUFBWSxJQUFJaEIsVUFBVVM7WUFDaEMsTUFBTU8sVUFBVUYsSUFBSTtZQUNwQixPQUFPRTtRQUNYO0lBQ0o7SUFDQUYsT0FBTztRQUNILE9BQU9iLFFBQVFjLFNBQVMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztZQUMzQyxNQUFNLElBQUksQ0FBQ0UsVUFBVTtRQUN6QjtJQUNKO0lBQ0FDLE9BQU87UUFDSEMsY0FBYyxJQUFJLENBQUNDLFdBQVc7SUFDbEM7SUFDQUMsR0FBR0MsS0FBSyxFQUFFQyxRQUFRLEVBQUU7UUFDaEIsSUFBSSxDQUFDYixNQUFNLENBQUNXLEVBQUUsQ0FBQ0MsT0FBT0M7SUFDMUI7SUFDQUMsS0FBS0YsS0FBSyxFQUFFQyxRQUFRLEVBQUU7UUFDbEIsSUFBSSxDQUFDYixNQUFNLENBQUNjLElBQUksQ0FBQ0YsT0FBT0M7SUFDNUI7SUFDQUUsSUFBSUgsS0FBSyxFQUFFQyxRQUFRLEVBQUU7UUFDakIsSUFBSSxDQUFDYixNQUFNLENBQUNlLEdBQUcsQ0FBQ0gsT0FBT0M7SUFDM0I7SUFDQUcsZUFBZUosS0FBSyxFQUFFQyxRQUFRLEVBQUU7UUFDNUIsSUFBSSxDQUFDYixNQUFNLENBQUNnQixjQUFjLENBQUNKLE9BQU9DO0lBQ3RDO0lBQ0FOLGFBQWE7UUFDVCxPQUFPaEIsUUFBUWMsU0FBUyxDQUFDLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQzNDLElBQUksQ0FBQ0ssV0FBVyxHQUFHTyxZQUFZLElBQU0sSUFBSSxDQUFDQyxLQUFLLElBQUl4QixPQUFPeUIsYUFBYSxDQUFDLElBQUksQ0FBQ2pCLFFBQVE7UUFDekY7SUFDSjtJQUNBZ0IsUUFBUTtRQUNKLElBQUksQ0FBQ2xCLE1BQU0sQ0FBQ29CLElBQUksQ0FBQ3hCLFlBQVl5QixnQkFBZ0IsQ0FBQ0gsS0FBSztJQUN2RDtBQUNKO0FBQ0E5QixpQkFBaUIsR0FBR0UsV0FDcEIscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9oZWFydGJlYXQvZGlzdC9janMvaGVhcnRiZWF0LmpzPzlmYzYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkhlYXJ0QmVhdCA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBldmVudHNfMSA9IHJlcXVpcmUoXCJldmVudHNcIik7XG5jb25zdCB0aW1lXzEgPSByZXF1aXJlKFwiQHdhbGxldGNvbm5lY3QvdGltZVwiKTtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuY2xhc3MgSGVhcnRCZWF0IGV4dGVuZHMgdHlwZXNfMS5JSGVhcnRCZWF0IHtcbiAgICBjb25zdHJ1Y3RvcihvcHRzKSB7XG4gICAgICAgIHN1cGVyKG9wdHMpO1xuICAgICAgICB0aGlzLmV2ZW50cyA9IG5ldyBldmVudHNfMS5FdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5pbnRlcnZhbCA9IGNvbnN0YW50c18xLkhFQVJUQkVBVF9JTlRFUlZBTDtcbiAgICAgICAgdGhpcy5pbnRlcnZhbCA9IChvcHRzID09PSBudWxsIHx8IG9wdHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdHMuaW50ZXJ2YWwpIHx8IGNvbnN0YW50c18xLkhFQVJUQkVBVF9JTlRFUlZBTDtcbiAgICB9XG4gICAgc3RhdGljIGluaXQob3B0cykge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBoZWFydGJlYXQgPSBuZXcgSGVhcnRCZWF0KG9wdHMpO1xuICAgICAgICAgICAgeWllbGQgaGVhcnRiZWF0LmluaXQoKTtcbiAgICAgICAgICAgIHJldHVybiBoZWFydGJlYXQ7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBpbml0KCkge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICB5aWVsZCB0aGlzLmluaXRpYWxpemUoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0b3AoKSB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbFJlZik7XG4gICAgfVxuICAgIG9uKGV2ZW50LCBsaXN0ZW5lcikge1xuICAgICAgICB0aGlzLmV2ZW50cy5vbihldmVudCwgbGlzdGVuZXIpO1xuICAgIH1cbiAgICBvbmNlKGV2ZW50LCBsaXN0ZW5lcikge1xuICAgICAgICB0aGlzLmV2ZW50cy5vbmNlKGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgfVxuICAgIG9mZihldmVudCwgbGlzdGVuZXIpIHtcbiAgICAgICAgdGhpcy5ldmVudHMub2ZmKGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgfVxuICAgIHJlbW92ZUxpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lcikge1xuICAgICAgICB0aGlzLmV2ZW50cy5yZW1vdmVMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIpO1xuICAgIH1cbiAgICBpbml0aWFsaXplKCkge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICB0aGlzLmludGVydmFsUmVmID0gc2V0SW50ZXJ2YWwoKCkgPT4gdGhpcy5wdWxzZSgpLCB0aW1lXzEudG9NaWxpc2Vjb25kcyh0aGlzLmludGVydmFsKSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBwdWxzZSgpIHtcbiAgICAgICAgdGhpcy5ldmVudHMuZW1pdChjb25zdGFudHNfMS5IRUFSVEJFQVRfRVZFTlRTLnB1bHNlKTtcbiAgICB9XG59XG5leHBvcnRzLkhlYXJ0QmVhdCA9IEhlYXJ0QmVhdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlYXJ0YmVhdC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJIZWFydEJlYXQiLCJ0c2xpYl8xIiwicmVxdWlyZSIsImV2ZW50c18xIiwidGltZV8xIiwidHlwZXNfMSIsImNvbnN0YW50c18xIiwiSUhlYXJ0QmVhdCIsImNvbnN0cnVjdG9yIiwib3B0cyIsImV2ZW50cyIsIkV2ZW50RW1pdHRlciIsImludGVydmFsIiwiSEVBUlRCRUFUX0lOVEVSVkFMIiwiaW5pdCIsIl9fYXdhaXRlciIsImhlYXJ0YmVhdCIsImluaXRpYWxpemUiLCJzdG9wIiwiY2xlYXJJbnRlcnZhbCIsImludGVydmFsUmVmIiwib24iLCJldmVudCIsImxpc3RlbmVyIiwib25jZSIsIm9mZiIsInJlbW92ZUxpc3RlbmVyIiwic2V0SW50ZXJ2YWwiLCJwdWxzZSIsInRvTWlsaXNlY29uZHMiLCJlbWl0IiwiSEVBUlRCRUFUX0VWRU5UUyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/index.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/@walletconnect/heartbeat/dist/cjs/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../../node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./heartbeat */ \"(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2hlYXJ0YmVhdC9kaXN0L2Nqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQywwREFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyw0RkFBYSxHQUFHSDtBQUM3Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQywwRkFBUyxHQUFHSDtBQUN6Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxrR0FBYSxHQUFHSCxVQUM3QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jc2EvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2hlYXJ0YmVhdC9kaXN0L2Nqcy9pbmRleC5qcz85NTllIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2hlYXJ0YmVhdFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb25zdGFudHNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJfX2V4cG9ydFN0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.IHeartBeat = void 0;\nconst events_1 = __webpack_require__(/*! @walletconnect/events */ \"(ssr)/../../node_modules/@walletconnect/events/dist/esm/index.js\");\nclass IHeartBeat extends events_1.IEvents {\n    constructor(opts){\n        super();\n    }\n}\nexports.IHeartBeat = IHeartBeat; //# sourceMappingURL=heartbeat.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2hlYXJ0YmVhdC9kaXN0L2Nqcy90eXBlcy9oZWFydGJlYXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGtCQUFrQixHQUFHLEtBQUs7QUFDMUIsTUFBTUcsV0FBV0MsbUJBQU9BLENBQUMsK0ZBQXVCO0FBQ2hELE1BQU1GLG1CQUFtQkMsU0FBU0UsT0FBTztJQUNyQ0MsWUFBWUMsSUFBSSxDQUFFO1FBQ2QsS0FBSztJQUNUO0FBQ0o7QUFDQVAsa0JBQWtCLEdBQUdFLFlBQ3JCLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NzYS8uLi8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvaGVhcnRiZWF0L2Rpc3QvY2pzL3R5cGVzL2hlYXJ0YmVhdC5qcz8yOWM5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JSGVhcnRCZWF0ID0gdm9pZCAwO1xuY29uc3QgZXZlbnRzXzEgPSByZXF1aXJlKFwiQHdhbGxldGNvbm5lY3QvZXZlbnRzXCIpO1xuY2xhc3MgSUhlYXJ0QmVhdCBleHRlbmRzIGV2ZW50c18xLklFdmVudHMge1xuICAgIGNvbnN0cnVjdG9yKG9wdHMpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG59XG5leHBvcnRzLklIZWFydEJlYXQgPSBJSGVhcnRCZWF0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVhcnRiZWF0LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIklIZWFydEJlYXQiLCJldmVudHNfMSIsInJlcXVpcmUiLCJJRXZlbnRzIiwiY29uc3RydWN0b3IiLCJvcHRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../../node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./heartbeat */ \"(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2hlYXJ0YmVhdC9kaXN0L2Nqcy90eXBlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQywwREFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxrR0FBYSxHQUFHSCxVQUM3QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jc2EvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2hlYXJ0YmVhdC9kaXN0L2Nqcy90eXBlcy9pbmRleC5qcz8xZmJkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2hlYXJ0YmVhdFwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0c2xpYl8xIiwicmVxdWlyZSIsIl9fZXhwb3J0U3RhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/http.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/http.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpConnection: () => (/* binding */ HttpConnection),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cross-fetch */ \"(ssr)/../../node_modules/cross-fetch/dist/node-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/../../node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\n\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD\n};\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass HttpConnection {\n    constructor(url, disableProviderPing = false){\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    async open(url = this.url) {\n        await this.register(url);\n    }\n    async close() {\n        if (!this.isAvailable) {\n            throw new Error(\"Connection already closed\");\n        }\n        this.onClose();\n    }\n    async send(payload, context) {\n        if (!this.isAvailable) {\n            await this.register();\n        }\n        try {\n            const body = (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonStringify)(payload);\n            const res = await cross_fetch__WEBPACK_IMPORTED_MODULE_1___default()(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), {\n                body\n            }));\n            const data = await res.json();\n            this.onPayload({\n                data\n            });\n        } catch (e) {\n            this.onError(payload.id, e);\n        }\n    }\n    async register(url = this.url) {\n        if (!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        if (this.registering) {\n            const currentMaxListeners = this.events.getMaxListeners();\n            if (this.events.listenerCount(\"register_error\") >= currentMaxListeners || this.events.listenerCount(\"open\") >= currentMaxListeners) {\n                this.events.setMaxListeners(currentMaxListeners + 1);\n            }\n            return new Promise((resolve, reject)=>{\n                this.events.once(\"register_error\", (error)=>{\n                    this.resetMaxListeners();\n                    reject(error);\n                });\n                this.events.once(\"open\", ()=>{\n                    this.resetMaxListeners();\n                    if (typeof this.isAvailable === \"undefined\") {\n                        return reject(new Error(\"HTTP connection is missing or invalid\"));\n                    }\n                    resolve();\n                });\n            });\n        }\n        this.url = url;\n        this.registering = true;\n        try {\n            if (!this.disableProviderPing) {\n                const body = (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonStringify)({\n                    id: 1,\n                    jsonrpc: \"2.0\",\n                    method: \"test\",\n                    params: []\n                });\n                await cross_fetch__WEBPACK_IMPORTED_MODULE_1___default()(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), {\n                    body\n                }));\n            }\n            this.onOpen();\n        } catch (e) {\n            const error = this.parseError(e);\n            this.events.emit(\"register_error\", error);\n            this.onClose();\n            throw error;\n        }\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\") return;\n        const payload = typeof e.data === \"string\" ? (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.parseConnectionError)(e, url, \"HTTP\");\n    }\n    resetMaxListeners() {\n        if (this.events.getMaxListeners() > EVENT_EMITTER_MAX_LISTENERS_DEFAULT) {\n            this.events.setMaxListeners(EVENT_EMITTER_MAX_LISTENERS_DEFAULT);\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HttpConnection); //# sourceMappingURL=http.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtaHR0cC1jb25uZWN0aW9uL2Rpc3QvZXNtL2h0dHAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0M7QUFDTjtBQUM0QztBQUN3QjtBQUNwRyxNQUFNTyx1QkFBdUI7SUFDekJDLFFBQVE7SUFDUixnQkFBZ0I7QUFDcEI7QUFDQSxNQUFNQyxzQkFBc0I7QUFDNUIsTUFBTUMscUJBQXFCO0lBQ3ZCQyxTQUFTSjtJQUNUSyxRQUFRSDtBQUNaO0FBQ0EsTUFBTUksc0NBQXNDO0FBQ3JDLE1BQU1DO0lBQ1RDLFlBQVlDLEdBQUcsRUFBRUMsc0JBQXNCLEtBQUssQ0FBRTtRQUMxQyxJQUFJLENBQUNELEdBQUcsR0FBR0E7UUFDWCxJQUFJLENBQUNDLG1CQUFtQixHQUFHQTtRQUMzQixJQUFJLENBQUNDLE1BQU0sR0FBRyxJQUFJbEIsZ0RBQVlBO1FBQzlCLElBQUksQ0FBQ21CLFdBQVcsR0FBRztRQUNuQixJQUFJLENBQUNDLFdBQVcsR0FBRztRQUNuQixJQUFJLENBQUNmLHVFQUFTQSxDQUFDVyxNQUFNO1lBQ2pCLE1BQU0sSUFBSUssTUFBTSxDQUFDLHFEQUFxRCxFQUFFTCxJQUFJLENBQUM7UUFDakY7UUFDQSxJQUFJLENBQUNBLEdBQUcsR0FBR0E7UUFDWCxJQUFJLENBQUNDLG1CQUFtQixHQUFHQTtJQUMvQjtJQUNBLElBQUlLLFlBQVk7UUFDWixPQUFPLElBQUksQ0FBQ0gsV0FBVztJQUMzQjtJQUNBLElBQUlJLGFBQWE7UUFDYixPQUFPLElBQUksQ0FBQ0gsV0FBVztJQUMzQjtJQUNBSSxHQUFHQyxLQUFLLEVBQUVDLFFBQVEsRUFBRTtRQUNoQixJQUFJLENBQUNSLE1BQU0sQ0FBQ00sRUFBRSxDQUFDQyxPQUFPQztJQUMxQjtJQUNBQyxLQUFLRixLQUFLLEVBQUVDLFFBQVEsRUFBRTtRQUNsQixJQUFJLENBQUNSLE1BQU0sQ0FBQ1MsSUFBSSxDQUFDRixPQUFPQztJQUM1QjtJQUNBRSxJQUFJSCxLQUFLLEVBQUVDLFFBQVEsRUFBRTtRQUNqQixJQUFJLENBQUNSLE1BQU0sQ0FBQ1UsR0FBRyxDQUFDSCxPQUFPQztJQUMzQjtJQUNBRyxlQUFlSixLQUFLLEVBQUVDLFFBQVEsRUFBRTtRQUM1QixJQUFJLENBQUNSLE1BQU0sQ0FBQ1csY0FBYyxDQUFDSixPQUFPQztJQUN0QztJQUNBLE1BQU1JLEtBQUtkLE1BQU0sSUFBSSxDQUFDQSxHQUFHLEVBQUU7UUFDdkIsTUFBTSxJQUFJLENBQUNlLFFBQVEsQ0FBQ2Y7SUFDeEI7SUFDQSxNQUFNZ0IsUUFBUTtRQUNWLElBQUksQ0FBQyxJQUFJLENBQUNiLFdBQVcsRUFBRTtZQUNuQixNQUFNLElBQUlFLE1BQU07UUFDcEI7UUFDQSxJQUFJLENBQUNZLE9BQU87SUFDaEI7SUFDQSxNQUFNQyxLQUFLQyxPQUFPLEVBQUVDLE9BQU8sRUFBRTtRQUN6QixJQUFJLENBQUMsSUFBSSxDQUFDakIsV0FBVyxFQUFFO1lBQ25CLE1BQU0sSUFBSSxDQUFDWSxRQUFRO1FBQ3ZCO1FBQ0EsSUFBSTtZQUNBLE1BQU1NLE9BQU9sQywyRUFBaUJBLENBQUNnQztZQUMvQixNQUFNRyxNQUFNLE1BQU1yQyxrREFBS0EsQ0FBQyxJQUFJLENBQUNlLEdBQUcsRUFBRXVCLE9BQU9DLE1BQU0sQ0FBQ0QsT0FBT0MsTUFBTSxDQUFDLENBQUMsR0FBRzlCLHFCQUFxQjtnQkFBRTJCO1lBQUs7WUFDOUYsTUFBTUksT0FBTyxNQUFNSCxJQUFJSSxJQUFJO1lBQzNCLElBQUksQ0FBQ0MsU0FBUyxDQUFDO2dCQUFFRjtZQUFLO1FBQzFCLEVBQ0EsT0FBT0csR0FBRztZQUNOLElBQUksQ0FBQ0MsT0FBTyxDQUFDVixRQUFRVyxFQUFFLEVBQUVGO1FBQzdCO0lBQ0o7SUFDQSxNQUFNYixTQUFTZixNQUFNLElBQUksQ0FBQ0EsR0FBRyxFQUFFO1FBQzNCLElBQUksQ0FBQ1gsdUVBQVNBLENBQUNXLE1BQU07WUFDakIsTUFBTSxJQUFJSyxNQUFNLENBQUMscURBQXFELEVBQUVMLElBQUksQ0FBQztRQUNqRjtRQUNBLElBQUksSUFBSSxDQUFDSSxXQUFXLEVBQUU7WUFDbEIsTUFBTTJCLHNCQUFzQixJQUFJLENBQUM3QixNQUFNLENBQUM4QixlQUFlO1lBQ3ZELElBQUksSUFBSSxDQUFDOUIsTUFBTSxDQUFDK0IsYUFBYSxDQUFDLHFCQUFxQkYsdUJBQy9DLElBQUksQ0FBQzdCLE1BQU0sQ0FBQytCLGFBQWEsQ0FBQyxXQUFXRixxQkFBcUI7Z0JBQzFELElBQUksQ0FBQzdCLE1BQU0sQ0FBQ2dDLGVBQWUsQ0FBQ0gsc0JBQXNCO1lBQ3REO1lBQ0EsT0FBTyxJQUFJSSxRQUFRLENBQUNDLFNBQVNDO2dCQUN6QixJQUFJLENBQUNuQyxNQUFNLENBQUNTLElBQUksQ0FBQyxrQkFBa0IyQixDQUFBQTtvQkFDL0IsSUFBSSxDQUFDQyxpQkFBaUI7b0JBQ3RCRixPQUFPQztnQkFDWDtnQkFDQSxJQUFJLENBQUNwQyxNQUFNLENBQUNTLElBQUksQ0FBQyxRQUFRO29CQUNyQixJQUFJLENBQUM0QixpQkFBaUI7b0JBQ3RCLElBQUksT0FBTyxJQUFJLENBQUNwQyxXQUFXLEtBQUssYUFBYTt3QkFDekMsT0FBT2tDLE9BQU8sSUFBSWhDLE1BQU07b0JBQzVCO29CQUNBK0I7Z0JBQ0o7WUFDSjtRQUNKO1FBQ0EsSUFBSSxDQUFDcEMsR0FBRyxHQUFHQTtRQUNYLElBQUksQ0FBQ0ksV0FBVyxHQUFHO1FBQ25CLElBQUk7WUFDQSxJQUFJLENBQUMsSUFBSSxDQUFDSCxtQkFBbUIsRUFBRTtnQkFDM0IsTUFBTW9CLE9BQU9sQywyRUFBaUJBLENBQUM7b0JBQUUyQyxJQUFJO29CQUFHVSxTQUFTO29CQUFPNUMsUUFBUTtvQkFBUTZDLFFBQVEsRUFBRTtnQkFBQztnQkFDbkYsTUFBTXhELGtEQUFLQSxDQUFDZSxLQUFLdUIsT0FBT0MsTUFBTSxDQUFDRCxPQUFPQyxNQUFNLENBQUMsQ0FBQyxHQUFHOUIscUJBQXFCO29CQUFFMkI7Z0JBQUs7WUFDakY7WUFDQSxJQUFJLENBQUNxQixNQUFNO1FBQ2YsRUFDQSxPQUFPZCxHQUFHO1lBQ04sTUFBTVUsUUFBUSxJQUFJLENBQUNLLFVBQVUsQ0FBQ2Y7WUFDOUIsSUFBSSxDQUFDMUIsTUFBTSxDQUFDMEMsSUFBSSxDQUFDLGtCQUFrQk47WUFDbkMsSUFBSSxDQUFDckIsT0FBTztZQUNaLE1BQU1xQjtRQUNWO0lBQ0o7SUFDQUksU0FBUztRQUNMLElBQUksQ0FBQ3ZDLFdBQVcsR0FBRztRQUNuQixJQUFJLENBQUNDLFdBQVcsR0FBRztRQUNuQixJQUFJLENBQUNGLE1BQU0sQ0FBQzBDLElBQUksQ0FBQztJQUNyQjtJQUNBM0IsVUFBVTtRQUNOLElBQUksQ0FBQ2QsV0FBVyxHQUFHO1FBQ25CLElBQUksQ0FBQ0MsV0FBVyxHQUFHO1FBQ25CLElBQUksQ0FBQ0YsTUFBTSxDQUFDMEMsSUFBSSxDQUFDO0lBQ3JCO0lBQ0FqQixVQUFVQyxDQUFDLEVBQUU7UUFDVCxJQUFJLE9BQU9BLEVBQUVILElBQUksS0FBSyxhQUNsQjtRQUNKLE1BQU1OLFVBQVUsT0FBT1MsRUFBRUgsSUFBSSxLQUFLLFdBQVd2Qyx1RUFBYUEsQ0FBQzBDLEVBQUVILElBQUksSUFBSUcsRUFBRUgsSUFBSTtRQUMzRSxJQUFJLENBQUN2QixNQUFNLENBQUMwQyxJQUFJLENBQUMsV0FBV3pCO0lBQ2hDO0lBQ0FVLFFBQVFDLEVBQUUsRUFBRUYsQ0FBQyxFQUFFO1FBQ1gsTUFBTVUsUUFBUSxJQUFJLENBQUNLLFVBQVUsQ0FBQ2Y7UUFDOUIsTUFBTWlCLFVBQVVQLE1BQU1PLE9BQU8sSUFBSVAsTUFBTVEsUUFBUTtRQUMvQyxNQUFNM0IsVUFBVS9CLGdGQUFrQkEsQ0FBQzBDLElBQUllO1FBQ3ZDLElBQUksQ0FBQzNDLE1BQU0sQ0FBQzBDLElBQUksQ0FBQyxXQUFXekI7SUFDaEM7SUFDQXdCLFdBQVdmLENBQUMsRUFBRTVCLE1BQU0sSUFBSSxDQUFDQSxHQUFHLEVBQUU7UUFDMUIsT0FBT1Ysa0ZBQW9CQSxDQUFDc0MsR0FBRzVCLEtBQUs7SUFDeEM7SUFDQXVDLG9CQUFvQjtRQUNoQixJQUFJLElBQUksQ0FBQ3JDLE1BQU0sQ0FBQzhCLGVBQWUsS0FBS25DLHFDQUFxQztZQUNyRSxJQUFJLENBQUNLLE1BQU0sQ0FBQ2dDLGVBQWUsQ0FBQ3JDO1FBQ2hDO0lBQ0o7QUFDSjtBQUNBLGlFQUFlQyxjQUFjQSxFQUFDLENBQzlCLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NzYS8uLi8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy1odHRwLWNvbm5lY3Rpb24vZGlzdC9lc20vaHR0cC5qcz9iM2U2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gXCJldmVudHNcIjtcbmltcG9ydCBmZXRjaCBmcm9tIFwiY3Jvc3MtZmV0Y2hcIjtcbmltcG9ydCB7IHNhZmVKc29uUGFyc2UsIHNhZmVKc29uU3RyaW5naWZ5IH0gZnJvbSBcIkB3YWxsZXRjb25uZWN0L3NhZmUtanNvblwiO1xuaW1wb3J0IHsgZm9ybWF0SnNvblJwY0Vycm9yLCBpc0h0dHBVcmwsIHBhcnNlQ29ubmVjdGlvbkVycm9yLCB9IGZyb20gXCJAd2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzXCI7XG5jb25zdCBERUZBVUxUX0hUVFBfSEVBREVSUyA9IHtcbiAgICBBY2NlcHQ6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxufTtcbmNvbnN0IERFRkFVTFRfSFRUUF9NRVRIT0QgPSBcIlBPU1RcIjtcbmNvbnN0IERFRkFVTFRfRkVUQ0hfT1BUUyA9IHtcbiAgICBoZWFkZXJzOiBERUZBVUxUX0hUVFBfSEVBREVSUyxcbiAgICBtZXRob2Q6IERFRkFVTFRfSFRUUF9NRVRIT0QsXG59O1xuY29uc3QgRVZFTlRfRU1JVFRFUl9NQVhfTElTVEVORVJTX0RFRkFVTFQgPSAxMDtcbmV4cG9ydCBjbGFzcyBIdHRwQ29ubmVjdGlvbiB7XG4gICAgY29uc3RydWN0b3IodXJsLCBkaXNhYmxlUHJvdmlkZXJQaW5nID0gZmFsc2UpIHtcbiAgICAgICAgdGhpcy51cmwgPSB1cmw7XG4gICAgICAgIHRoaXMuZGlzYWJsZVByb3ZpZGVyUGluZyA9IGRpc2FibGVQcm92aWRlclBpbmc7XG4gICAgICAgIHRoaXMuZXZlbnRzID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLmlzQXZhaWxhYmxlID0gZmFsc2U7XG4gICAgICAgIHRoaXMucmVnaXN0ZXJpbmcgPSBmYWxzZTtcbiAgICAgICAgaWYgKCFpc0h0dHBVcmwodXJsKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQcm92aWRlZCBVUkwgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBIVFRQIGNvbm5lY3Rpb246ICR7dXJsfWApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudXJsID0gdXJsO1xuICAgICAgICB0aGlzLmRpc2FibGVQcm92aWRlclBpbmcgPSBkaXNhYmxlUHJvdmlkZXJQaW5nO1xuICAgIH1cbiAgICBnZXQgY29ubmVjdGVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pc0F2YWlsYWJsZTtcbiAgICB9XG4gICAgZ2V0IGNvbm5lY3RpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlZ2lzdGVyaW5nO1xuICAgIH1cbiAgICBvbihldmVudCwgbGlzdGVuZXIpIHtcbiAgICAgICAgdGhpcy5ldmVudHMub24oZXZlbnQsIGxpc3RlbmVyKTtcbiAgICB9XG4gICAgb25jZShldmVudCwgbGlzdGVuZXIpIHtcbiAgICAgICAgdGhpcy5ldmVudHMub25jZShldmVudCwgbGlzdGVuZXIpO1xuICAgIH1cbiAgICBvZmYoZXZlbnQsIGxpc3RlbmVyKSB7XG4gICAgICAgIHRoaXMuZXZlbnRzLm9mZihldmVudCwgbGlzdGVuZXIpO1xuICAgIH1cbiAgICByZW1vdmVMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIpIHtcbiAgICAgICAgdGhpcy5ldmVudHMucmVtb3ZlTGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyKTtcbiAgICB9XG4gICAgYXN5bmMgb3Blbih1cmwgPSB0aGlzLnVybCkge1xuICAgICAgICBhd2FpdCB0aGlzLnJlZ2lzdGVyKHVybCk7XG4gICAgfVxuICAgIGFzeW5jIGNsb3NlKCkge1xuICAgICAgICBpZiAoIXRoaXMuaXNBdmFpbGFibGUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvbm5lY3Rpb24gYWxyZWFkeSBjbG9zZWRcIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5vbkNsb3NlKCk7XG4gICAgfVxuICAgIGFzeW5jIHNlbmQocGF5bG9hZCwgY29udGV4dCkge1xuICAgICAgICBpZiAoIXRoaXMuaXNBdmFpbGFibGUpIHtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMucmVnaXN0ZXIoKTtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgYm9keSA9IHNhZmVKc29uU3RyaW5naWZ5KHBheWxvYWQpO1xuICAgICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2godGhpcy51cmwsIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgREVGQVVMVF9GRVRDSF9PUFRTKSwgeyBib2R5IH0pKTtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICAgICAgICAgICAgdGhpcy5vblBheWxvYWQoeyBkYXRhIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICB0aGlzLm9uRXJyb3IocGF5bG9hZC5pZCwgZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXN5bmMgcmVnaXN0ZXIodXJsID0gdGhpcy51cmwpIHtcbiAgICAgICAgaWYgKCFpc0h0dHBVcmwodXJsKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQcm92aWRlZCBVUkwgaXMgbm90IGNvbXBhdGlibGUgd2l0aCBIVFRQIGNvbm5lY3Rpb246ICR7dXJsfWApO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnJlZ2lzdGVyaW5nKSB7XG4gICAgICAgICAgICBjb25zdCBjdXJyZW50TWF4TGlzdGVuZXJzID0gdGhpcy5ldmVudHMuZ2V0TWF4TGlzdGVuZXJzKCk7XG4gICAgICAgICAgICBpZiAodGhpcy5ldmVudHMubGlzdGVuZXJDb3VudChcInJlZ2lzdGVyX2Vycm9yXCIpID49IGN1cnJlbnRNYXhMaXN0ZW5lcnMgfHxcbiAgICAgICAgICAgICAgICB0aGlzLmV2ZW50cy5saXN0ZW5lckNvdW50KFwib3BlblwiKSA+PSBjdXJyZW50TWF4TGlzdGVuZXJzKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudHMuc2V0TWF4TGlzdGVuZXJzKGN1cnJlbnRNYXhMaXN0ZW5lcnMgKyAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudHMub25jZShcInJlZ2lzdGVyX2Vycm9yXCIsIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXNldE1heExpc3RlbmVycygpO1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRzLm9uY2UoXCJvcGVuXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXNldE1heExpc3RlbmVycygpO1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMuaXNBdmFpbGFibGUgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZWplY3QobmV3IEVycm9yKFwiSFRUUCBjb25uZWN0aW9uIGlzIG1pc3Npbmcgb3IgaW52YWxpZFwiKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy51cmwgPSB1cmw7XG4gICAgICAgIHRoaXMucmVnaXN0ZXJpbmcgPSB0cnVlO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKCF0aGlzLmRpc2FibGVQcm92aWRlclBpbmcpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBib2R5ID0gc2FmZUpzb25TdHJpbmdpZnkoeyBpZDogMSwganNvbnJwYzogXCIyLjBcIiwgbWV0aG9kOiBcInRlc3RcIiwgcGFyYW1zOiBbXSB9KTtcbiAgICAgICAgICAgICAgICBhd2FpdCBmZXRjaCh1cmwsIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgREVGQVVMVF9GRVRDSF9PUFRTKSwgeyBib2R5IH0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMub25PcGVuKCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGNvbnN0IGVycm9yID0gdGhpcy5wYXJzZUVycm9yKGUpO1xuICAgICAgICAgICAgdGhpcy5ldmVudHMuZW1pdChcInJlZ2lzdGVyX2Vycm9yXCIsIGVycm9yKTtcbiAgICAgICAgICAgIHRoaXMub25DbG9zZSgpO1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICB9XG4gICAgb25PcGVuKCkge1xuICAgICAgICB0aGlzLmlzQXZhaWxhYmxlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5yZWdpc3RlcmluZyA9IGZhbHNlO1xuICAgICAgICB0aGlzLmV2ZW50cy5lbWl0KFwib3BlblwiKTtcbiAgICB9XG4gICAgb25DbG9zZSgpIHtcbiAgICAgICAgdGhpcy5pc0F2YWlsYWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLnJlZ2lzdGVyaW5nID0gZmFsc2U7XG4gICAgICAgIHRoaXMuZXZlbnRzLmVtaXQoXCJjbG9zZVwiKTtcbiAgICB9XG4gICAgb25QYXlsb2FkKGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBlLmRhdGEgPT09IFwidW5kZWZpbmVkXCIpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IHBheWxvYWQgPSB0eXBlb2YgZS5kYXRhID09PSBcInN0cmluZ1wiID8gc2FmZUpzb25QYXJzZShlLmRhdGEpIDogZS5kYXRhO1xuICAgICAgICB0aGlzLmV2ZW50cy5lbWl0KFwicGF5bG9hZFwiLCBwYXlsb2FkKTtcbiAgICB9XG4gICAgb25FcnJvcihpZCwgZSkge1xuICAgICAgICBjb25zdCBlcnJvciA9IHRoaXMucGFyc2VFcnJvcihlKTtcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IGVycm9yLm1lc3NhZ2UgfHwgZXJyb3IudG9TdHJpbmcoKTtcbiAgICAgICAgY29uc3QgcGF5bG9hZCA9IGZvcm1hdEpzb25ScGNFcnJvcihpZCwgbWVzc2FnZSk7XG4gICAgICAgIHRoaXMuZXZlbnRzLmVtaXQoXCJwYXlsb2FkXCIsIHBheWxvYWQpO1xuICAgIH1cbiAgICBwYXJzZUVycm9yKGUsIHVybCA9IHRoaXMudXJsKSB7XG4gICAgICAgIHJldHVybiBwYXJzZUNvbm5lY3Rpb25FcnJvcihlLCB1cmwsIFwiSFRUUFwiKTtcbiAgICB9XG4gICAgcmVzZXRNYXhMaXN0ZW5lcnMoKSB7XG4gICAgICAgIGlmICh0aGlzLmV2ZW50cy5nZXRNYXhMaXN0ZW5lcnMoKSA+IEVWRU5UX0VNSVRURVJfTUFYX0xJU1RFTkVSU19ERUZBVUxUKSB7XG4gICAgICAgICAgICB0aGlzLmV2ZW50cy5zZXRNYXhMaXN0ZW5lcnMoRVZFTlRfRU1JVFRFUl9NQVhfTElTVEVORVJTX0RFRkFVTFQpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgSHR0cENvbm5lY3Rpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD1odHRwLmpzLm1hcCJdLCJuYW1lcyI6WyJFdmVudEVtaXR0ZXIiLCJmZXRjaCIsInNhZmVKc29uUGFyc2UiLCJzYWZlSnNvblN0cmluZ2lmeSIsImZvcm1hdEpzb25ScGNFcnJvciIsImlzSHR0cFVybCIsInBhcnNlQ29ubmVjdGlvbkVycm9yIiwiREVGQVVMVF9IVFRQX0hFQURFUlMiLCJBY2NlcHQiLCJERUZBVUxUX0hUVFBfTUVUSE9EIiwiREVGQVVMVF9GRVRDSF9PUFRTIiwiaGVhZGVycyIsIm1ldGhvZCIsIkVWRU5UX0VNSVRURVJfTUFYX0xJU1RFTkVSU19ERUZBVUxUIiwiSHR0cENvbm5lY3Rpb24iLCJjb25zdHJ1Y3RvciIsInVybCIsImRpc2FibGVQcm92aWRlclBpbmciLCJldmVudHMiLCJpc0F2YWlsYWJsZSIsInJlZ2lzdGVyaW5nIiwiRXJyb3IiLCJjb25uZWN0ZWQiLCJjb25uZWN0aW5nIiwib24iLCJldmVudCIsImxpc3RlbmVyIiwib25jZSIsIm9mZiIsInJlbW92ZUxpc3RlbmVyIiwib3BlbiIsInJlZ2lzdGVyIiwiY2xvc2UiLCJvbkNsb3NlIiwic2VuZCIsInBheWxvYWQiLCJjb250ZXh0IiwiYm9keSIsInJlcyIsIk9iamVjdCIsImFzc2lnbiIsImRhdGEiLCJqc29uIiwib25QYXlsb2FkIiwiZSIsIm9uRXJyb3IiLCJpZCIsImN1cnJlbnRNYXhMaXN0ZW5lcnMiLCJnZXRNYXhMaXN0ZW5lcnMiLCJsaXN0ZW5lckNvdW50Iiwic2V0TWF4TGlzdGVuZXJzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJlcnJvciIsInJlc2V0TWF4TGlzdGVuZXJzIiwianNvbnJwYyIsInBhcmFtcyIsIm9uT3BlbiIsInBhcnNlRXJyb3IiLCJlbWl0IiwibWVzc2FnZSIsInRvU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/http.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/index.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpConnection: () => (/* reexport safe */ _http__WEBPACK_IMPORTED_MODULE_0__.HttpConnection),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/http.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_http__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtaHR0cC1jb25uZWN0aW9uL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvQztBQUNiO0FBQ3ZCLGlFQUFlQSw2Q0FBY0EsRUFBQyxDQUM5QixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jc2EvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtaHR0cC1jb25uZWN0aW9uL2Rpc3QvZXNtL2luZGV4LmpzPzA0MGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEh0dHBDb25uZWN0aW9uIGZyb20gXCIuL2h0dHBcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2h0dHBcIjtcbmV4cG9ydCBkZWZhdWx0IEh0dHBDb25uZWN0aW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIkh0dHBDb25uZWN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-provider/dist/esm/index.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-provider/dist/esm/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonRpcProvider: () => (/* reexport safe */ _provider__WEBPACK_IMPORTED_MODULE_0__.JsonRpcProvider),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./provider */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_provider__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtcHJvdmlkZXIvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBQ1A7QUFDM0IsaUVBQWVBLGlEQUFRQSxFQUFDLENBQ3hCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NzYS8uLi8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy1wcm92aWRlci9kaXN0L2VzbS9pbmRleC5qcz82MjRiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm92aWRlciBmcm9tIFwiLi9wcm92aWRlclwiO1xuZXhwb3J0ICogZnJvbSBcIi4vcHJvdmlkZXJcIjtcbmV4cG9ydCBkZWZhdWx0IFByb3ZpZGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIlByb3ZpZGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-provider/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonRpcProvider: () => (/* binding */ JsonRpcProvider),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\nclass JsonRpcProvider extends _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.IJsonRpcProvider {\n    constructor(connection){\n        super(connection);\n        this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    async connect(connection = this.connection) {\n        await this.open(connection);\n    }\n    async disconnect() {\n        await this.close();\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    async request(request, context) {\n        return this.requestStrict((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.formatJsonRpcRequest)(request.method, request.params || [], request.id || (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.getBigIntRpcId)().toString()), context);\n    }\n    async requestStrict(request, context) {\n        return new Promise(async (resolve, reject)=>{\n            if (!this.connection.connected) {\n                try {\n                    await this.open();\n                } catch (e) {\n                    reject(e);\n                }\n            }\n            this.events.on(`${request.id}`, (response)=>{\n                if ((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.isJsonRpcError)(response)) {\n                    reject(response.error);\n                } else {\n                    resolve(response.result);\n                }\n            });\n            try {\n                await this.connection.send(request, context);\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        } else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params\n            });\n        }\n    }\n    onClose(event) {\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    async open(connection = this.connection) {\n        if (this.connection === connection && this.connection.connected) return;\n        if (this.connection.connected) this.close();\n        if (typeof connection === \"string\") {\n            await this.connection.open(connection);\n            connection = this.connection;\n        }\n        this.connection = this.setConnection(connection);\n        await this.connection.open();\n        this.registerEventListeners();\n        this.events.emit(\"connect\");\n    }\n    async close() {\n        await this.connection.close();\n    }\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners) return;\n        this.connection.on(\"payload\", (payload)=>this.onPayload(payload));\n        this.connection.on(\"close\", (event)=>this.onClose(event));\n        this.connection.on(\"error\", (error)=>this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (error)=>this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (JsonRpcProvider); //# sourceMappingURL=provider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-types/dist/esm/index.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-types/dist/esm/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IBaseJsonRpcProvider: () => (/* reexport safe */ _provider__WEBPACK_IMPORTED_MODULE_2__.IBaseJsonRpcProvider),\n/* harmony export */   IEvents: () => (/* reexport safe */ _misc__WEBPACK_IMPORTED_MODULE_1__.IEvents),\n/* harmony export */   IJsonRpcConnection: () => (/* reexport safe */ _provider__WEBPACK_IMPORTED_MODULE_2__.IJsonRpcConnection),\n/* harmony export */   IJsonRpcProvider: () => (/* reexport safe */ _provider__WEBPACK_IMPORTED_MODULE_2__.IJsonRpcProvider)\n/* harmony export */ });\n/* harmony import */ var _jsonrpc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./jsonrpc */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-types/dist/esm/jsonrpc.js\");\n/* harmony import */ var _misc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./misc */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-types/dist/esm/misc.js\");\n/* harmony import */ var _provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./provider */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-types/dist/esm/provider.js\");\n/* harmony import */ var _validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validator */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-types/dist/esm/validator.js\");\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdHlwZXMvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBMEI7QUFDSDtBQUNJO0FBQ0MsQ0FDNUIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXR5cGVzL2Rpc3QvZXNtL2luZGV4LmpzPzM1MTYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vanNvbnJwY1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vbWlzY1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcHJvdmlkZXJcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3ZhbGlkYXRvclwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-types/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-types/dist/esm/jsonrpc.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-types/dist/esm/jsonrpc.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=jsonrpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdHlwZXMvZGlzdC9lc20vanNvbnJwYy5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jc2EvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdHlwZXMvZGlzdC9lc20vanNvbnJwYy5qcz83MmE3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWpzb25ycGMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-types/dist/esm/jsonrpc.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-types/dist/esm/misc.js":
/*!************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-types/dist/esm/misc.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IEvents: () => (/* binding */ IEvents)\n/* harmony export */ });\nclass IEvents {\n} //# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdHlwZXMvZGlzdC9lc20vbWlzYy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUE7QUFDYixFQUNBLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NzYS8uLi8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy10eXBlcy9kaXN0L2VzbS9taXNjLmpzP2RiMmQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIElFdmVudHMge1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWlzYy5qcy5tYXAiXSwibmFtZXMiOlsiSUV2ZW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-types/dist/esm/misc.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-types/dist/esm/provider.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-types/dist/esm/provider.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IBaseJsonRpcProvider: () => (/* binding */ IBaseJsonRpcProvider),\n/* harmony export */   IJsonRpcConnection: () => (/* binding */ IJsonRpcConnection),\n/* harmony export */   IJsonRpcProvider: () => (/* binding */ IJsonRpcProvider)\n/* harmony export */ });\n/* harmony import */ var _misc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./misc */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-types/dist/esm/misc.js\");\n\nclass IJsonRpcConnection extends _misc__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(opts){\n        super();\n    }\n}\nclass IBaseJsonRpcProvider extends _misc__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(){\n        super();\n    }\n}\nclass IJsonRpcProvider extends IBaseJsonRpcProvider {\n    constructor(connection){\n        super();\n    }\n} //# sourceMappingURL=provider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdHlwZXMvZGlzdC9lc20vcHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpQztBQUMxQixNQUFNQywyQkFBMkJELDBDQUFPQTtJQUMzQ0UsWUFBWUMsSUFBSSxDQUFFO1FBQ2QsS0FBSztJQUNUO0FBQ0o7QUFDTyxNQUFNQyw2QkFBNkJKLDBDQUFPQTtJQUM3Q0UsYUFBYztRQUNWLEtBQUs7SUFDVDtBQUNKO0FBQ08sTUFBTUcseUJBQXlCRDtJQUNsQ0YsWUFBWUksVUFBVSxDQUFFO1FBQ3BCLEtBQUs7SUFDVDtBQUNKLEVBQ0Esb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXR5cGVzL2Rpc3QvZXNtL3Byb3ZpZGVyLmpzPzRlNjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUV2ZW50cyB9IGZyb20gXCIuL21pc2NcIjtcbmV4cG9ydCBjbGFzcyBJSnNvblJwY0Nvbm5lY3Rpb24gZXh0ZW5kcyBJRXZlbnRzIHtcbiAgICBjb25zdHJ1Y3RvcihvcHRzKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIElCYXNlSnNvblJwY1Byb3ZpZGVyIGV4dGVuZHMgSUV2ZW50cyB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIElKc29uUnBjUHJvdmlkZXIgZXh0ZW5kcyBJQmFzZUpzb25ScGNQcm92aWRlciB7XG4gICAgY29uc3RydWN0b3IoY29ubmVjdGlvbikge1xuICAgICAgICBzdXBlcigpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb3ZpZGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJJRXZlbnRzIiwiSUpzb25ScGNDb25uZWN0aW9uIiwiY29uc3RydWN0b3IiLCJvcHRzIiwiSUJhc2VKc29uUnBjUHJvdmlkZXIiLCJJSnNvblJwY1Byb3ZpZGVyIiwiY29ubmVjdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-types/dist/esm/provider.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-types/dist/esm/validator.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-types/dist/esm/validator.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=validator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdHlwZXMvZGlzdC9lc20vdmFsaWRhdG9yLmpzIiwibWFwcGluZ3MiOiI7QUFBVSxDQUNWLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NzYS8uLi8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy10eXBlcy9kaXN0L2VzbS92YWxpZGF0b3IuanM/YjA5YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YWxpZGF0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-types/dist/esm/validator.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_ERROR: () => (/* binding */ DEFAULT_ERROR),\n/* harmony export */   INTERNAL_ERROR: () => (/* binding */ INTERNAL_ERROR),\n/* harmony export */   INVALID_PARAMS: () => (/* binding */ INVALID_PARAMS),\n/* harmony export */   INVALID_REQUEST: () => (/* binding */ INVALID_REQUEST),\n/* harmony export */   METHOD_NOT_FOUND: () => (/* binding */ METHOD_NOT_FOUND),\n/* harmony export */   PARSE_ERROR: () => (/* binding */ PARSE_ERROR),\n/* harmony export */   RESERVED_ERROR_CODES: () => (/* binding */ RESERVED_ERROR_CODES),\n/* harmony export */   SERVER_ERROR: () => (/* binding */ SERVER_ERROR),\n/* harmony export */   SERVER_ERROR_CODE_RANGE: () => (/* binding */ SERVER_ERROR_CODE_RANGE),\n/* harmony export */   STANDARD_ERROR_MAP: () => (/* binding */ STANDARD_ERROR_MAP)\n/* harmony export */ });\nconst PARSE_ERROR = \"PARSE_ERROR\";\nconst INVALID_REQUEST = \"INVALID_REQUEST\";\nconst METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nconst INVALID_PARAMS = \"INVALID_PARAMS\";\nconst INTERNAL_ERROR = \"INTERNAL_ERROR\";\nconst SERVER_ERROR = \"SERVER_ERROR\";\nconst RESERVED_ERROR_CODES = [\n    -32700,\n    -32600,\n    -32601,\n    -32602,\n    -32603\n];\nconst SERVER_ERROR_CODE_RANGE = [\n    -32000,\n    -32099\n];\nconst STANDARD_ERROR_MAP = {\n    [PARSE_ERROR]: {\n        code: -32700,\n        message: \"Parse error\"\n    },\n    [INVALID_REQUEST]: {\n        code: -32600,\n        message: \"Invalid Request\"\n    },\n    [METHOD_NOT_FOUND]: {\n        code: -32601,\n        message: \"Method not found\"\n    },\n    [INVALID_PARAMS]: {\n        code: -32602,\n        message: \"Invalid params\"\n    },\n    [INTERNAL_ERROR]: {\n        code: -32603,\n        message: \"Internal error\"\n    },\n    [SERVER_ERROR]: {\n        code: -32000,\n        message: \"Server error\"\n    }\n};\nconst DEFAULT_ERROR = SERVER_ERROR; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBTyxNQUFNQSxjQUFjLGNBQWM7QUFDbEMsTUFBTUMsa0JBQWtCLGtCQUFrQjtBQUMxQyxNQUFNQyxtQkFBbUIsbUJBQW1CO0FBQzVDLE1BQU1DLGlCQUFpQixpQkFBaUI7QUFDeEMsTUFBTUMsaUJBQWlCLGlCQUFpQjtBQUN4QyxNQUFNQyxlQUFlLGVBQWU7QUFDcEMsTUFBTUMsdUJBQXVCO0lBQUMsQ0FBQztJQUFPLENBQUM7SUFBTyxDQUFDO0lBQU8sQ0FBQztJQUFPLENBQUM7Q0FBTSxDQUFDO0FBQ3RFLE1BQU1DLDBCQUEwQjtJQUFDLENBQUM7SUFBTyxDQUFDO0NBQU0sQ0FBQztBQUNqRCxNQUFNQyxxQkFBcUI7SUFDOUIsQ0FBQ1IsWUFBWSxFQUFFO1FBQUVTLE1BQU0sQ0FBQztRQUFPQyxTQUFTO0lBQWM7SUFDdEQsQ0FBQ1QsZ0JBQWdCLEVBQUU7UUFBRVEsTUFBTSxDQUFDO1FBQU9DLFNBQVM7SUFBa0I7SUFDOUQsQ0FBQ1IsaUJBQWlCLEVBQUU7UUFBRU8sTUFBTSxDQUFDO1FBQU9DLFNBQVM7SUFBbUI7SUFDaEUsQ0FBQ1AsZUFBZSxFQUFFO1FBQUVNLE1BQU0sQ0FBQztRQUFPQyxTQUFTO0lBQWlCO0lBQzVELENBQUNOLGVBQWUsRUFBRTtRQUFFSyxNQUFNLENBQUM7UUFBT0MsU0FBUztJQUFpQjtJQUM1RCxDQUFDTCxhQUFhLEVBQUU7UUFBRUksTUFBTSxDQUFDO1FBQU9DLFNBQVM7SUFBZTtBQUM1RCxFQUFFO0FBQ0ssTUFBTUMsZ0JBQWdCTixhQUFhLENBQzFDLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NzYS8uLi8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9jb25zdGFudHMuanM/OTZhNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgUEFSU0VfRVJST1IgPSBcIlBBUlNFX0VSUk9SXCI7XG5leHBvcnQgY29uc3QgSU5WQUxJRF9SRVFVRVNUID0gXCJJTlZBTElEX1JFUVVFU1RcIjtcbmV4cG9ydCBjb25zdCBNRVRIT0RfTk9UX0ZPVU5EID0gXCJNRVRIT0RfTk9UX0ZPVU5EXCI7XG5leHBvcnQgY29uc3QgSU5WQUxJRF9QQVJBTVMgPSBcIklOVkFMSURfUEFSQU1TXCI7XG5leHBvcnQgY29uc3QgSU5URVJOQUxfRVJST1IgPSBcIklOVEVSTkFMX0VSUk9SXCI7XG5leHBvcnQgY29uc3QgU0VSVkVSX0VSUk9SID0gXCJTRVJWRVJfRVJST1JcIjtcbmV4cG9ydCBjb25zdCBSRVNFUlZFRF9FUlJPUl9DT0RFUyA9IFstMzI3MDAsIC0zMjYwMCwgLTMyNjAxLCAtMzI2MDIsIC0zMjYwM107XG5leHBvcnQgY29uc3QgU0VSVkVSX0VSUk9SX0NPREVfUkFOR0UgPSBbLTMyMDAwLCAtMzIwOTldO1xuZXhwb3J0IGNvbnN0IFNUQU5EQVJEX0VSUk9SX01BUCA9IHtcbiAgICBbUEFSU0VfRVJST1JdOiB7IGNvZGU6IC0zMjcwMCwgbWVzc2FnZTogXCJQYXJzZSBlcnJvclwiIH0sXG4gICAgW0lOVkFMSURfUkVRVUVTVF06IHsgY29kZTogLTMyNjAwLCBtZXNzYWdlOiBcIkludmFsaWQgUmVxdWVzdFwiIH0sXG4gICAgW01FVEhPRF9OT1RfRk9VTkRdOiB7IGNvZGU6IC0zMjYwMSwgbWVzc2FnZTogXCJNZXRob2Qgbm90IGZvdW5kXCIgfSxcbiAgICBbSU5WQUxJRF9QQVJBTVNdOiB7IGNvZGU6IC0zMjYwMiwgbWVzc2FnZTogXCJJbnZhbGlkIHBhcmFtc1wiIH0sXG4gICAgW0lOVEVSTkFMX0VSUk9SXTogeyBjb2RlOiAtMzI2MDMsIG1lc3NhZ2U6IFwiSW50ZXJuYWwgZXJyb3JcIiB9LFxuICAgIFtTRVJWRVJfRVJST1JdOiB7IGNvZGU6IC0zMjAwMCwgbWVzc2FnZTogXCJTZXJ2ZXIgZXJyb3JcIiB9LFxufTtcbmV4cG9ydCBjb25zdCBERUZBVUxUX0VSUk9SID0gU0VSVkVSX0VSUk9SO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJQQVJTRV9FUlJPUiIsIklOVkFMSURfUkVRVUVTVCIsIk1FVEhPRF9OT1RfRk9VTkQiLCJJTlZBTElEX1BBUkFNUyIsIklOVEVSTkFMX0VSUk9SIiwiU0VSVkVSX0VSUk9SIiwiUkVTRVJWRURfRVJST1JfQ09ERVMiLCJTRVJWRVJfRVJST1JfQ09ERV9SQU5HRSIsIlNUQU5EQVJEX0VSUk9SX01BUCIsImNvZGUiLCJtZXNzYWdlIiwiREVGQVVMVF9FUlJPUiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNodeJs: () => (/* binding */ isNodeJs)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/environment */ \"(ssr)/../../node_modules/@walletconnect/environment/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"isNodeJs\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\nconst isNodeJs = _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__.isNode;\n //# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vZW52LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFvRDtBQUM3QyxNQUFNQyxXQUFXRCw4REFBTUEsQ0FBQztBQUNZLENBQzNDLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL2NzYS8uLi8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9lbnYuanM/MDUyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc05vZGUgfSBmcm9tIFwiQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnRcIjtcbmV4cG9ydCBjb25zdCBpc05vZGVKcyA9IGlzTm9kZTtcbmV4cG9ydCAqIGZyb20gXCJAd2FsbGV0Y29ubmVjdC9lbnZpcm9ubWVudFwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW52LmpzLm1hcCJdLCJuYW1lcyI6WyJpc05vZGUiLCJpc05vZGVKcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getError: () => (/* binding */ getError),\n/* harmony export */   getErrorByCode: () => (/* binding */ getErrorByCode),\n/* harmony export */   isReservedErrorCode: () => (/* binding */ isReservedErrorCode),\n/* harmony export */   isServerErrorCode: () => (/* binding */ isServerErrorCode),\n/* harmony export */   isValidErrorCode: () => (/* binding */ isValidErrorCode),\n/* harmony export */   parseConnectionError: () => (/* binding */ parseConnectionError),\n/* harmony export */   validateJsonRpcError: () => (/* binding */ validateJsonRpcError)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\");\n\nfunction isServerErrorCode(code) {\n    return code <= _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE[0] && code >= _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE[1];\n}\nfunction isReservedErrorCode(code) {\n    return _constants__WEBPACK_IMPORTED_MODULE_0__.RESERVED_ERROR_CODES.includes(code);\n}\nfunction isValidErrorCode(code) {\n    return typeof code === \"number\";\n}\nfunction getError(type) {\n    if (!Object.keys(_constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP).includes(type)) {\n        return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR];\n    }\n    return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(_constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP).find((e)=>e.code === code);\n    if (!match) {\n        return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction validateJsonRpcError(response) {\n    if (typeof response.error.code === \"undefined\") {\n        return {\n            valid: false,\n            error: \"Missing code for JSON-RPC error\"\n        };\n    }\n    if (typeof response.error.message === \"undefined\") {\n        return {\n            valid: false,\n            error: \"Missing message for JSON-RPC error\"\n        };\n    }\n    if (!isValidErrorCode(response.error.code)) {\n        return {\n            valid: false,\n            error: `Invalid error code type for JSON-RPC: ${response.error.code}`\n        };\n    }\n    if (isReservedErrorCode(response.error.code)) {\n        const error = getErrorByCode(response.error.code);\n        if (error.message !== _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR].message && response.error.message === error.message) {\n            return {\n                valid: false,\n                error: `Invalid error code message for JSON-RPC: ${response.error.code}`\n            };\n        }\n    }\n    return {\n        valid: true\n    };\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\") ? new Error(`Unavailable ${type} RPC url at ${url}`) : e;\n} //# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vZXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBZ0g7QUFDekcsU0FBU0ksa0JBQWtCQyxJQUFJO0lBQ2xDLE9BQU9BLFFBQVFMLCtEQUF1QixDQUFDLEVBQUUsSUFBSUssUUFBUUwsK0RBQXVCLENBQUMsRUFBRTtBQUNuRjtBQUNPLFNBQVNNLG9CQUFvQkQsSUFBSTtJQUNwQyxPQUFPSiw0REFBb0JBLENBQUNNLFFBQVEsQ0FBQ0Y7QUFDekM7QUFDTyxTQUFTRyxpQkFBaUJILElBQUk7SUFDakMsT0FBTyxPQUFPQSxTQUFTO0FBQzNCO0FBQ08sU0FBU0ksU0FBU0MsSUFBSTtJQUN6QixJQUFJLENBQUNDLE9BQU9DLElBQUksQ0FBQ1YsMERBQWtCQSxFQUFFSyxRQUFRLENBQUNHLE9BQU87UUFDakQsT0FBT1IsMERBQWtCLENBQUNDLHFEQUFhQSxDQUFDO0lBQzVDO0lBQ0EsT0FBT0QsMERBQWtCLENBQUNRLEtBQUs7QUFDbkM7QUFDTyxTQUFTRyxlQUFlUixJQUFJO0lBQy9CLE1BQU1TLFFBQVFILE9BQU9JLE1BQU0sQ0FBQ2IsMERBQWtCQSxFQUFFYyxJQUFJLENBQUNDLENBQUFBLElBQUtBLEVBQUVaLElBQUksS0FBS0E7SUFDckUsSUFBSSxDQUFDUyxPQUFPO1FBQ1IsT0FBT1osMERBQWtCLENBQUNDLHFEQUFhQSxDQUFDO0lBQzVDO0lBQ0EsT0FBT1c7QUFDWDtBQUNPLFNBQVNJLHFCQUFxQkMsUUFBUTtJQUN6QyxJQUFJLE9BQU9BLFNBQVNDLEtBQUssQ0FBQ2YsSUFBSSxLQUFLLGFBQWE7UUFDNUMsT0FBTztZQUFFZ0IsT0FBTztZQUFPRCxPQUFPO1FBQWtDO0lBQ3BFO0lBQ0EsSUFBSSxPQUFPRCxTQUFTQyxLQUFLLENBQUNFLE9BQU8sS0FBSyxhQUFhO1FBQy9DLE9BQU87WUFBRUQsT0FBTztZQUFPRCxPQUFPO1FBQXFDO0lBQ3ZFO0lBQ0EsSUFBSSxDQUFDWixpQkFBaUJXLFNBQVNDLEtBQUssQ0FBQ2YsSUFBSSxHQUFHO1FBQ3hDLE9BQU87WUFDSGdCLE9BQU87WUFDUEQsT0FBTyxDQUFDLHNDQUFzQyxFQUFFRCxTQUFTQyxLQUFLLENBQUNmLElBQUksQ0FBQyxDQUFDO1FBQ3pFO0lBQ0o7SUFDQSxJQUFJQyxvQkFBb0JhLFNBQVNDLEtBQUssQ0FBQ2YsSUFBSSxHQUFHO1FBQzFDLE1BQU1lLFFBQVFQLGVBQWVNLFNBQVNDLEtBQUssQ0FBQ2YsSUFBSTtRQUNoRCxJQUFJZSxNQUFNRSxPQUFPLEtBQUtwQiwwREFBa0IsQ0FBQ0MscURBQWFBLENBQUMsQ0FBQ21CLE9BQU8sSUFDM0RILFNBQVNDLEtBQUssQ0FBQ0UsT0FBTyxLQUFLRixNQUFNRSxPQUFPLEVBQUU7WUFDMUMsT0FBTztnQkFDSEQsT0FBTztnQkFDUEQsT0FBTyxDQUFDLHlDQUF5QyxFQUFFRCxTQUFTQyxLQUFLLENBQUNmLElBQUksQ0FBQyxDQUFDO1lBQzVFO1FBQ0o7SUFDSjtJQUNBLE9BQU87UUFBRWdCLE9BQU87SUFBSztBQUN6QjtBQUNPLFNBQVNFLHFCQUFxQk4sQ0FBQyxFQUFFTyxHQUFHLEVBQUVkLElBQUk7SUFDN0MsT0FBT08sRUFBRUssT0FBTyxDQUFDZixRQUFRLENBQUMsNEJBQTRCVSxFQUFFSyxPQUFPLENBQUNmLFFBQVEsQ0FBQywwQkFDbkUsSUFBSWtCLE1BQU0sQ0FBQyxZQUFZLEVBQUVmLEtBQUssWUFBWSxFQUFFYyxJQUFJLENBQUMsSUFDakRQO0FBQ1YsRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jc2EvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vZXJyb3IuanM/M2RkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTRVJWRVJfRVJST1JfQ09ERV9SQU5HRSwgUkVTRVJWRURfRVJST1JfQ09ERVMsIFNUQU5EQVJEX0VSUk9SX01BUCwgREVGQVVMVF9FUlJPUiwgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcbmV4cG9ydCBmdW5jdGlvbiBpc1NlcnZlckVycm9yQ29kZShjb2RlKSB7XG4gICAgcmV0dXJuIGNvZGUgPD0gU0VSVkVSX0VSUk9SX0NPREVfUkFOR0VbMF0gJiYgY29kZSA+PSBTRVJWRVJfRVJST1JfQ09ERV9SQU5HRVsxXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1Jlc2VydmVkRXJyb3JDb2RlKGNvZGUpIHtcbiAgICByZXR1cm4gUkVTRVJWRURfRVJST1JfQ09ERVMuaW5jbHVkZXMoY29kZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNWYWxpZEVycm9yQ29kZShjb2RlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBjb2RlID09PSBcIm51bWJlclwiO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEVycm9yKHR5cGUpIHtcbiAgICBpZiAoIU9iamVjdC5rZXlzKFNUQU5EQVJEX0VSUk9SX01BUCkuaW5jbHVkZXModHlwZSkpIHtcbiAgICAgICAgcmV0dXJuIFNUQU5EQVJEX0VSUk9SX01BUFtERUZBVUxUX0VSUk9SXTtcbiAgICB9XG4gICAgcmV0dXJuIFNUQU5EQVJEX0VSUk9SX01BUFt0eXBlXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRFcnJvckJ5Q29kZShjb2RlKSB7XG4gICAgY29uc3QgbWF0Y2ggPSBPYmplY3QudmFsdWVzKFNUQU5EQVJEX0VSUk9SX01BUCkuZmluZChlID0+IGUuY29kZSA9PT0gY29kZSk7XG4gICAgaWYgKCFtYXRjaCkge1xuICAgICAgICByZXR1cm4gU1RBTkRBUkRfRVJST1JfTUFQW0RFRkFVTFRfRVJST1JdO1xuICAgIH1cbiAgICByZXR1cm4gbWF0Y2g7XG59XG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVKc29uUnBjRXJyb3IocmVzcG9uc2UpIHtcbiAgICBpZiAodHlwZW9mIHJlc3BvbnNlLmVycm9yLmNvZGUgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgcmV0dXJuIHsgdmFsaWQ6IGZhbHNlLCBlcnJvcjogXCJNaXNzaW5nIGNvZGUgZm9yIEpTT04tUlBDIGVycm9yXCIgfTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiByZXNwb25zZS5lcnJvci5tZXNzYWdlID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHJldHVybiB7IHZhbGlkOiBmYWxzZSwgZXJyb3I6IFwiTWlzc2luZyBtZXNzYWdlIGZvciBKU09OLVJQQyBlcnJvclwiIH07XG4gICAgfVxuICAgIGlmICghaXNWYWxpZEVycm9yQ29kZShyZXNwb25zZS5lcnJvci5jb2RlKSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdmFsaWQ6IGZhbHNlLFxuICAgICAgICAgICAgZXJyb3I6IGBJbnZhbGlkIGVycm9yIGNvZGUgdHlwZSBmb3IgSlNPTi1SUEM6ICR7cmVzcG9uc2UuZXJyb3IuY29kZX1gLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAoaXNSZXNlcnZlZEVycm9yQ29kZShyZXNwb25zZS5lcnJvci5jb2RlKSkge1xuICAgICAgICBjb25zdCBlcnJvciA9IGdldEVycm9yQnlDb2RlKHJlc3BvbnNlLmVycm9yLmNvZGUpO1xuICAgICAgICBpZiAoZXJyb3IubWVzc2FnZSAhPT0gU1RBTkRBUkRfRVJST1JfTUFQW0RFRkFVTFRfRVJST1JdLm1lc3NhZ2UgJiZcbiAgICAgICAgICAgIHJlc3BvbnNlLmVycm9yLm1lc3NhZ2UgPT09IGVycm9yLm1lc3NhZ2UpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdmFsaWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGVycm9yOiBgSW52YWxpZCBlcnJvciBjb2RlIG1lc3NhZ2UgZm9yIEpTT04tUlBDOiAke3Jlc3BvbnNlLmVycm9yLmNvZGV9YCxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHsgdmFsaWQ6IHRydWUgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUNvbm5lY3Rpb25FcnJvcihlLCB1cmwsIHR5cGUpIHtcbiAgICByZXR1cm4gZS5tZXNzYWdlLmluY2x1ZGVzKFwiZ2V0YWRkcmluZm8gRU5PVEZPVU5EXCIpIHx8IGUubWVzc2FnZS5pbmNsdWRlcyhcImNvbm5lY3QgRUNPTk5SRUZVU0VEXCIpXG4gICAgICAgID8gbmV3IEVycm9yKGBVbmF2YWlsYWJsZSAke3R5cGV9IFJQQyB1cmwgYXQgJHt1cmx9YClcbiAgICAgICAgOiBlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3IuanMubWFwIl0sIm5hbWVzIjpbIlNFUlZFUl9FUlJPUl9DT0RFX1JBTkdFIiwiUkVTRVJWRURfRVJST1JfQ09ERVMiLCJTVEFOREFSRF9FUlJPUl9NQVAiLCJERUZBVUxUX0VSUk9SIiwiaXNTZXJ2ZXJFcnJvckNvZGUiLCJjb2RlIiwiaXNSZXNlcnZlZEVycm9yQ29kZSIsImluY2x1ZGVzIiwiaXNWYWxpZEVycm9yQ29kZSIsImdldEVycm9yIiwidHlwZSIsIk9iamVjdCIsImtleXMiLCJnZXRFcnJvckJ5Q29kZSIsIm1hdGNoIiwidmFsdWVzIiwiZmluZCIsImUiLCJ2YWxpZGF0ZUpzb25ScGNFcnJvciIsInJlc3BvbnNlIiwiZXJyb3IiLCJ2YWxpZCIsIm1lc3NhZ2UiLCJwYXJzZUNvbm5lY3Rpb25FcnJvciIsInVybCIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatErrorMessage: () => (/* binding */ formatErrorMessage),\n/* harmony export */   formatJsonRpcError: () => (/* binding */ formatJsonRpcError),\n/* harmony export */   formatJsonRpcRequest: () => (/* binding */ formatJsonRpcRequest),\n/* harmony export */   formatJsonRpcResult: () => (/* binding */ formatJsonRpcResult),\n/* harmony export */   getBigIntRpcId: () => (/* binding */ getBigIntRpcId),\n/* harmony export */   payloadId: () => (/* binding */ payloadId)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\");\n\n\nfunction payloadId(entropy = 3) {\n    const date = Date.now() * Math.pow(10, entropy);\n    const extra = Math.floor(Math.random() * Math.pow(10, entropy));\n    return date + extra;\n}\nfunction getBigIntRpcId(entropy = 6) {\n    return BigInt(payloadId(entropy));\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data)\n    };\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return (0,_error__WEBPACK_IMPORTED_MODULE_0__.getError)(_constants__WEBPACK_IMPORTED_MODULE_1__.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, (0,_error__WEBPACK_IMPORTED_MODULE_0__.getError)(_constants__WEBPACK_IMPORTED_MODULE_1__.SERVER_ERROR)), {\n            message: error\n        });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if ((0,_error__WEBPACK_IMPORTED_MODULE_0__.isReservedErrorCode)(error.code)) {\n        error = (0,_error__WEBPACK_IMPORTED_MODULE_0__.getErrorByCode)(error.code);\n    }\n    return error;\n} //# sourceMappingURL=format.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vZm9ybWF0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXdFO0FBQ2I7QUFDcEQsU0FBU0ssVUFBVUMsVUFBVSxDQUFDO0lBQ2pDLE1BQU1DLE9BQU9DLEtBQUtDLEdBQUcsS0FBS0MsS0FBS0MsR0FBRyxDQUFDLElBQUlMO0lBQ3ZDLE1BQU1NLFFBQVFGLEtBQUtHLEtBQUssQ0FBQ0gsS0FBS0ksTUFBTSxLQUFLSixLQUFLQyxHQUFHLENBQUMsSUFBSUw7SUFDdEQsT0FBT0MsT0FBT0s7QUFDbEI7QUFDTyxTQUFTRyxlQUFlVCxVQUFVLENBQUM7SUFDdEMsT0FBT1UsT0FBT1gsVUFBVUM7QUFDNUI7QUFDTyxTQUFTVyxxQkFBcUJDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxFQUFFO0lBQ25ELE9BQU87UUFDSEEsSUFBSUEsTUFBTWY7UUFDVmdCLFNBQVM7UUFDVEg7UUFDQUM7SUFDSjtBQUNKO0FBQ08sU0FBU0csb0JBQW9CRixFQUFFLEVBQUVHLE1BQU07SUFDMUMsT0FBTztRQUNISDtRQUNBQyxTQUFTO1FBQ1RFO0lBQ0o7QUFDSjtBQUNPLFNBQVNDLG1CQUFtQkosRUFBRSxFQUFFSyxLQUFLLEVBQUVDLElBQUk7SUFDOUMsT0FBTztRQUNITjtRQUNBQyxTQUFTO1FBQ1RJLE9BQU9FLG1CQUFtQkYsT0FBT0M7SUFDckM7QUFDSjtBQUNPLFNBQVNDLG1CQUFtQkYsS0FBSyxFQUFFQyxJQUFJO0lBQzFDLElBQUksT0FBT0QsVUFBVSxhQUFhO1FBQzlCLE9BQU96QixnREFBUUEsQ0FBQ0csc0RBQWNBO0lBQ2xDO0lBQ0EsSUFBSSxPQUFPc0IsVUFBVSxVQUFVO1FBQzNCQSxRQUFRRyxPQUFPQyxNQUFNLENBQUNELE9BQU9DLE1BQU0sQ0FBQyxDQUFDLEdBQUc3QixnREFBUUEsQ0FBQ0ksb0RBQVlBLElBQUk7WUFBRTBCLFNBQVNMO1FBQU07SUFDdEY7SUFDQSxJQUFJLE9BQU9DLFNBQVMsYUFBYTtRQUM3QkQsTUFBTUMsSUFBSSxHQUFHQTtJQUNqQjtJQUNBLElBQUl4QiwyREFBbUJBLENBQUN1QixNQUFNTSxJQUFJLEdBQUc7UUFDakNOLFFBQVF4QixzREFBY0EsQ0FBQ3dCLE1BQU1NLElBQUk7SUFDckM7SUFDQSxPQUFPTjtBQUNYLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzL2Rpc3QvZXNtL2Zvcm1hdC5qcz82NjcwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEVycm9yLCBnZXRFcnJvckJ5Q29kZSwgaXNSZXNlcnZlZEVycm9yQ29kZSB9IGZyb20gXCIuL2Vycm9yXCI7XG5pbXBvcnQgeyBJTlRFUk5BTF9FUlJPUiwgU0VSVkVSX0VSUk9SIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5leHBvcnQgZnVuY3Rpb24gcGF5bG9hZElkKGVudHJvcHkgPSAzKSB7XG4gICAgY29uc3QgZGF0ZSA9IERhdGUubm93KCkgKiBNYXRoLnBvdygxMCwgZW50cm9weSk7XG4gICAgY29uc3QgZXh0cmEgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBNYXRoLnBvdygxMCwgZW50cm9weSkpO1xuICAgIHJldHVybiBkYXRlICsgZXh0cmE7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0QmlnSW50UnBjSWQoZW50cm9weSA9IDYpIHtcbiAgICByZXR1cm4gQmlnSW50KHBheWxvYWRJZChlbnRyb3B5KSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0SnNvblJwY1JlcXVlc3QobWV0aG9kLCBwYXJhbXMsIGlkKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaWQ6IGlkIHx8IHBheWxvYWRJZCgpLFxuICAgICAgICBqc29ucnBjOiBcIjIuMFwiLFxuICAgICAgICBtZXRob2QsXG4gICAgICAgIHBhcmFtcyxcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdEpzb25ScGNSZXN1bHQoaWQsIHJlc3VsdCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGlkLFxuICAgICAgICBqc29ucnBjOiBcIjIuMFwiLFxuICAgICAgICByZXN1bHQsXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRKc29uUnBjRXJyb3IoaWQsIGVycm9yLCBkYXRhKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaWQsXG4gICAgICAgIGpzb25ycGM6IFwiMi4wXCIsXG4gICAgICAgIGVycm9yOiBmb3JtYXRFcnJvck1lc3NhZ2UoZXJyb3IsIGRhdGEpLFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0RXJyb3JNZXNzYWdlKGVycm9yLCBkYXRhKSB7XG4gICAgaWYgKHR5cGVvZiBlcnJvciA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICByZXR1cm4gZ2V0RXJyb3IoSU5URVJOQUxfRVJST1IpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGVycm9yID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGVycm9yID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBnZXRFcnJvcihTRVJWRVJfRVJST1IpKSwgeyBtZXNzYWdlOiBlcnJvciB9KTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBkYXRhICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGVycm9yLmRhdGEgPSBkYXRhO1xuICAgIH1cbiAgICBpZiAoaXNSZXNlcnZlZEVycm9yQ29kZShlcnJvci5jb2RlKSkge1xuICAgICAgICBlcnJvciA9IGdldEVycm9yQnlDb2RlKGVycm9yLmNvZGUpO1xuICAgIH1cbiAgICByZXR1cm4gZXJyb3I7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mb3JtYXQuanMubWFwIl0sIm5hbWVzIjpbImdldEVycm9yIiwiZ2V0RXJyb3JCeUNvZGUiLCJpc1Jlc2VydmVkRXJyb3JDb2RlIiwiSU5URVJOQUxfRVJST1IiLCJTRVJWRVJfRVJST1IiLCJwYXlsb2FkSWQiLCJlbnRyb3B5IiwiZGF0ZSIsIkRhdGUiLCJub3ciLCJNYXRoIiwicG93IiwiZXh0cmEiLCJmbG9vciIsInJhbmRvbSIsImdldEJpZ0ludFJwY0lkIiwiQmlnSW50IiwiZm9ybWF0SnNvblJwY1JlcXVlc3QiLCJtZXRob2QiLCJwYXJhbXMiLCJpZCIsImpzb25ycGMiLCJmb3JtYXRKc29uUnBjUmVzdWx0IiwicmVzdWx0IiwiZm9ybWF0SnNvblJwY0Vycm9yIiwiZXJyb3IiLCJkYXRhIiwiZm9ybWF0RXJyb3JNZXNzYWdlIiwiT2JqZWN0IiwiYXNzaWduIiwibWVzc2FnZSIsImNvZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR),\n/* harmony export */   IBaseJsonRpcProvider: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IBaseJsonRpcProvider),\n/* harmony export */   IEvents: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IEvents),\n/* harmony export */   IJsonRpcConnection: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IJsonRpcConnection),\n/* harmony export */   IJsonRpcProvider: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IJsonRpcProvider),\n/* harmony export */   INTERNAL_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INTERNAL_ERROR),\n/* harmony export */   INVALID_PARAMS: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INVALID_PARAMS),\n/* harmony export */   INVALID_REQUEST: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INVALID_REQUEST),\n/* harmony export */   METHOD_NOT_FOUND: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.METHOD_NOT_FOUND),\n/* harmony export */   PARSE_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.PARSE_ERROR),\n/* harmony export */   RESERVED_ERROR_CODES: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.RESERVED_ERROR_CODES),\n/* harmony export */   SERVER_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR),\n/* harmony export */   SERVER_ERROR_CODE_RANGE: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE),\n/* harmony export */   STANDARD_ERROR_MAP: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP),\n/* harmony export */   formatErrorMessage: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatErrorMessage),\n/* harmony export */   formatJsonRpcError: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError),\n/* harmony export */   formatJsonRpcRequest: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest),\n/* harmony export */   formatJsonRpcResult: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcResult),\n/* harmony export */   getBigIntRpcId: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId),\n/* harmony export */   getError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.getError),\n/* harmony export */   getErrorByCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.getErrorByCode),\n/* harmony export */   isHttpUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isHttpUrl),\n/* harmony export */   isJsonRpcError: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcError),\n/* harmony export */   isJsonRpcPayload: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcPayload),\n/* harmony export */   isJsonRpcRequest: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcRequest),\n/* harmony export */   isJsonRpcResponse: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResponse),\n/* harmony export */   isJsonRpcResult: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResult),\n/* harmony export */   isJsonRpcValidationInvalid: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcValidationInvalid),\n/* harmony export */   isLocalhostUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isLocalhostUrl),\n/* harmony export */   isReservedErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isReservedErrorCode),\n/* harmony export */   isServerErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isServerErrorCode),\n/* harmony export */   isValidDefaultRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidDefaultRoute),\n/* harmony export */   isValidErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isValidErrorCode),\n/* harmony export */   isValidLeadingWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidLeadingWildcardRoute),\n/* harmony export */   isValidRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidRoute),\n/* harmony export */   isValidTrailingWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidTrailingWildcardRoute),\n/* harmony export */   isValidWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidWildcardRoute),\n/* harmony export */   isWsUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isWsUrl),\n/* harmony export */   parseConnectionError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.parseConnectionError),\n/* harmony export */   payloadId: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.payloadId),\n/* harmony export */   validateJsonRpcError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.validateJsonRpcError)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\");\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js\");\n/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./env */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _env__WEBPACK_IMPORTED_MODULE_2__) if([\"default\",\"DEFAULT_ERROR\",\"INTERNAL_ERROR\",\"INVALID_PARAMS\",\"INVALID_REQUEST\",\"METHOD_NOT_FOUND\",\"PARSE_ERROR\",\"RESERVED_ERROR_CODES\",\"SERVER_ERROR\",\"SERVER_ERROR_CODE_RANGE\",\"STANDARD_ERROR_MAP\",\"getError\",\"getErrorByCode\",\"isReservedErrorCode\",\"isServerErrorCode\",\"isValidErrorCode\",\"parseConnectionError\",\"validateJsonRpcError\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _env__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _format__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./format */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js\");\n/* harmony import */ var _routing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./routing */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js\");\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./url */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js\");\n/* harmony import */ var _validators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./validators */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js\");\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE0QjtBQUNKO0FBQ0Y7QUFDRztBQUNDO0FBQ0Y7QUFDRjtBQUNPLENBQzdCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NzYS8uLi8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9pbmRleC5qcz85ZjVhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2NvbnN0YW50c1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vZXJyb3JcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2VudlwiO1xuZXhwb3J0ICogZnJvbSBcIi4vZm9ybWF0XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yb3V0aW5nXCI7XG5leHBvcnQgKiBmcm9tIFwiLi90eXBlc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXJsXCI7XG5leHBvcnQgKiBmcm9tIFwiLi92YWxpZGF0b3JzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isValidDefaultRoute: () => (/* binding */ isValidDefaultRoute),\n/* harmony export */   isValidLeadingWildcardRoute: () => (/* binding */ isValidLeadingWildcardRoute),\n/* harmony export */   isValidRoute: () => (/* binding */ isValidRoute),\n/* harmony export */   isValidTrailingWildcardRoute: () => (/* binding */ isValidTrailingWildcardRoute),\n/* harmony export */   isValidWildcardRoute: () => (/* binding */ isValidWildcardRoute)\n/* harmony export */ });\nfunction isValidRoute(route) {\n    if (route.includes(\"*\")) {\n        return isValidWildcardRoute(route);\n    }\n    if (/\\W/g.test(route)) {\n        return false;\n    }\n    return true;\n}\nfunction isValidDefaultRoute(route) {\n    return route === \"*\";\n}\nfunction isValidWildcardRoute(route) {\n    if (isValidDefaultRoute(route)) {\n        return true;\n    }\n    if (!route.includes(\"*\")) {\n        return false;\n    }\n    if (route.split(\"*\").length !== 2) {\n        return false;\n    }\n    if (route.split(\"*\").filter((x)=>x.trim() === \"\").length !== 1) {\n        return false;\n    }\n    return true;\n}\nfunction isValidLeadingWildcardRoute(route) {\n    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[0].trim();\n}\nfunction isValidTrailingWildcardRoute(route) {\n    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[1].trim();\n} //# sourceMappingURL=routing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vcm91dGluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFPLFNBQVNBLGFBQWFDLEtBQUs7SUFDOUIsSUFBSUEsTUFBTUMsUUFBUSxDQUFDLE1BQU07UUFDckIsT0FBT0MscUJBQXFCRjtJQUNoQztJQUNBLElBQUksTUFBTUcsSUFBSSxDQUFDSCxRQUFRO1FBQ25CLE9BQU87SUFDWDtJQUNBLE9BQU87QUFDWDtBQUNPLFNBQVNJLG9CQUFvQkosS0FBSztJQUNyQyxPQUFPQSxVQUFVO0FBQ3JCO0FBQ08sU0FBU0UscUJBQXFCRixLQUFLO0lBQ3RDLElBQUlJLG9CQUFvQkosUUFBUTtRQUM1QixPQUFPO0lBQ1g7SUFDQSxJQUFJLENBQUNBLE1BQU1DLFFBQVEsQ0FBQyxNQUFNO1FBQ3RCLE9BQU87SUFDWDtJQUNBLElBQUlELE1BQU1LLEtBQUssQ0FBQyxLQUFLQyxNQUFNLEtBQUssR0FBRztRQUMvQixPQUFPO0lBQ1g7SUFDQSxJQUFJTixNQUFNSyxLQUFLLENBQUMsS0FBS0UsTUFBTSxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxJQUFJLE9BQU8sSUFBSUgsTUFBTSxLQUFLLEdBQUc7UUFDNUQsT0FBTztJQUNYO0lBQ0EsT0FBTztBQUNYO0FBQ08sU0FBU0ksNEJBQTRCVixLQUFLO0lBQzdDLE9BQU8sQ0FBQ0ksb0JBQW9CSixVQUFVRSxxQkFBcUJGLFVBQVUsQ0FBQ0EsTUFBTUssS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUNJLElBQUk7QUFDbEc7QUFDTyxTQUFTRSw2QkFBNkJYLEtBQUs7SUFDOUMsT0FBTyxDQUFDSSxvQkFBb0JKLFVBQVVFLHFCQUFxQkYsVUFBVSxDQUFDQSxNQUFNSyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQ0ksSUFBSTtBQUNsRyxFQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NzYS8uLi8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9yb3V0aW5nLmpzPzQ5ZWIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRSb3V0ZShyb3V0ZSkge1xuICAgIGlmIChyb3V0ZS5pbmNsdWRlcyhcIipcIikpIHtcbiAgICAgICAgcmV0dXJuIGlzVmFsaWRXaWxkY2FyZFJvdXRlKHJvdXRlKTtcbiAgICB9XG4gICAgaWYgKC9cXFcvZy50ZXN0KHJvdXRlKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWREZWZhdWx0Um91dGUocm91dGUpIHtcbiAgICByZXR1cm4gcm91dGUgPT09IFwiKlwiO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRXaWxkY2FyZFJvdXRlKHJvdXRlKSB7XG4gICAgaWYgKGlzVmFsaWREZWZhdWx0Um91dGUocm91dGUpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAoIXJvdXRlLmluY2x1ZGVzKFwiKlwiKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmIChyb3V0ZS5zcGxpdChcIipcIikubGVuZ3RoICE9PSAyKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKHJvdXRlLnNwbGl0KFwiKlwiKS5maWx0ZXIoeCA9PiB4LnRyaW0oKSA9PT0gXCJcIikubGVuZ3RoICE9PSAxKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNWYWxpZExlYWRpbmdXaWxkY2FyZFJvdXRlKHJvdXRlKSB7XG4gICAgcmV0dXJuICFpc1ZhbGlkRGVmYXVsdFJvdXRlKHJvdXRlKSAmJiBpc1ZhbGlkV2lsZGNhcmRSb3V0ZShyb3V0ZSkgJiYgIXJvdXRlLnNwbGl0KFwiKlwiKVswXS50cmltKCk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNWYWxpZFRyYWlsaW5nV2lsZGNhcmRSb3V0ZShyb3V0ZSkge1xuICAgIHJldHVybiAhaXNWYWxpZERlZmF1bHRSb3V0ZShyb3V0ZSkgJiYgaXNWYWxpZFdpbGRjYXJkUm91dGUocm91dGUpICYmICFyb3V0ZS5zcGxpdChcIipcIilbMV0udHJpbSgpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cm91dGluZy5qcy5tYXAiXSwibmFtZXMiOlsiaXNWYWxpZFJvdXRlIiwicm91dGUiLCJpbmNsdWRlcyIsImlzVmFsaWRXaWxkY2FyZFJvdXRlIiwidGVzdCIsImlzVmFsaWREZWZhdWx0Um91dGUiLCJzcGxpdCIsImxlbmd0aCIsImZpbHRlciIsIngiLCJ0cmltIiwiaXNWYWxpZExlYWRpbmdXaWxkY2FyZFJvdXRlIiwiaXNWYWxpZFRyYWlsaW5nV2lsZGNhcmRSb3V0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IBaseJsonRpcProvider: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IBaseJsonRpcProvider),\n/* harmony export */   IEvents: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IEvents),\n/* harmony export */   IJsonRpcConnection: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IJsonRpcConnection),\n/* harmony export */   IJsonRpcProvider: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IJsonRpcProvider)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/jsonrpc-types */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-types/dist/esm/index.js\");\n //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vdHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNkMsQ0FDN0MsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzL2Rpc3QvZXNtL3R5cGVzLmpzPzIwNzciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIkB3YWxsZXRjb25uZWN0L2pzb25ycGMtdHlwZXNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isHttpUrl: () => (/* binding */ isHttpUrl),\n/* harmony export */   isLocalhostUrl: () => (/* binding */ isLocalhostUrl),\n/* harmony export */   isWsUrl: () => (/* binding */ isWsUrl)\n/* harmony export */ });\nconst HTTP_REGEX = \"^https?:\";\nconst WS_REGEX = \"^wss?:\";\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length) return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\") return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, HTTP_REGEX);\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, WS_REGEX);\n}\nfunction isLocalhostUrl(url) {\n    return new RegExp(\"wss?://localhost(:d{2,5})?\").test(url);\n} //# sourceMappingURL=url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vdXJsLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE1BQU1BLGFBQWE7QUFDbkIsTUFBTUMsV0FBVztBQUNqQixTQUFTQyxlQUFlQyxHQUFHO0lBQ3ZCLE1BQU1DLFVBQVVELElBQUlFLEtBQUssQ0FBQyxJQUFJQyxPQUFPLFNBQVM7SUFDOUMsSUFBSSxDQUFDRixXQUFXLENBQUNBLFFBQVFHLE1BQU0sRUFDM0I7SUFDSixPQUFPSCxPQUFPLENBQUMsRUFBRTtBQUNyQjtBQUNBLFNBQVNJLG1CQUFtQkwsR0FBRyxFQUFFTSxLQUFLO0lBQ2xDLE1BQU1DLFdBQVdSLGVBQWVDO0lBQ2hDLElBQUksT0FBT08sYUFBYSxhQUNwQixPQUFPO0lBQ1gsT0FBTyxJQUFJSixPQUFPRyxPQUFPRSxJQUFJLENBQUNEO0FBQ2xDO0FBQ08sU0FBU0UsVUFBVVQsR0FBRztJQUN6QixPQUFPSyxtQkFBbUJMLEtBQUtIO0FBQ25DO0FBQ08sU0FBU2EsUUFBUVYsR0FBRztJQUN2QixPQUFPSyxtQkFBbUJMLEtBQUtGO0FBQ25DO0FBQ08sU0FBU2EsZUFBZVgsR0FBRztJQUM5QixPQUFPLElBQUlHLE9BQU8sOEJBQThCSyxJQUFJLENBQUNSO0FBQ3pELEVBQ0EsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzL2Rpc3QvZXNtL3VybC5qcz8xYmU4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEhUVFBfUkVHRVggPSBcIl5odHRwcz86XCI7XG5jb25zdCBXU19SRUdFWCA9IFwiXndzcz86XCI7XG5mdW5jdGlvbiBnZXRVcmxQcm90b2NvbCh1cmwpIHtcbiAgICBjb25zdCBtYXRjaGVzID0gdXJsLm1hdGNoKG5ldyBSZWdFeHAoL15cXHcrOi8sIFwiZ2lcIikpO1xuICAgIGlmICghbWF0Y2hlcyB8fCAhbWF0Y2hlcy5sZW5ndGgpXG4gICAgICAgIHJldHVybjtcbiAgICByZXR1cm4gbWF0Y2hlc1swXTtcbn1cbmZ1bmN0aW9uIG1hdGNoUmVnZXhQcm90b2NvbCh1cmwsIHJlZ2V4KSB7XG4gICAgY29uc3QgcHJvdG9jb2wgPSBnZXRVcmxQcm90b2NvbCh1cmwpO1xuICAgIGlmICh0eXBlb2YgcHJvdG9jb2wgPT09IFwidW5kZWZpbmVkXCIpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gbmV3IFJlZ0V4cChyZWdleCkudGVzdChwcm90b2NvbCk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNIdHRwVXJsKHVybCkge1xuICAgIHJldHVybiBtYXRjaFJlZ2V4UHJvdG9jb2wodXJsLCBIVFRQX1JFR0VYKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1dzVXJsKHVybCkge1xuICAgIHJldHVybiBtYXRjaFJlZ2V4UHJvdG9jb2wodXJsLCBXU19SRUdFWCk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNMb2NhbGhvc3RVcmwodXJsKSB7XG4gICAgcmV0dXJuIG5ldyBSZWdFeHAoXCJ3c3M/Oi8vbG9jYWxob3N0KDpkezIsNX0pP1wiKS50ZXN0KHVybCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cmwuanMubWFwIl0sIm5hbWVzIjpbIkhUVFBfUkVHRVgiLCJXU19SRUdFWCIsImdldFVybFByb3RvY29sIiwidXJsIiwibWF0Y2hlcyIsIm1hdGNoIiwiUmVnRXhwIiwibGVuZ3RoIiwibWF0Y2hSZWdleFByb3RvY29sIiwicmVnZXgiLCJwcm90b2NvbCIsInRlc3QiLCJpc0h0dHBVcmwiLCJpc1dzVXJsIiwiaXNMb2NhbGhvc3RVcmwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isJsonRpcError: () => (/* binding */ isJsonRpcError),\n/* harmony export */   isJsonRpcPayload: () => (/* binding */ isJsonRpcPayload),\n/* harmony export */   isJsonRpcRequest: () => (/* binding */ isJsonRpcRequest),\n/* harmony export */   isJsonRpcResponse: () => (/* binding */ isJsonRpcResponse),\n/* harmony export */   isJsonRpcResult: () => (/* binding */ isJsonRpcResult),\n/* harmony export */   isJsonRpcValidationInvalid: () => (/* binding */ isJsonRpcValidationInvalid)\n/* harmony export */ });\nfunction isJsonRpcPayload(payload) {\n    return typeof payload === \"object\" && \"id\" in payload && \"jsonrpc\" in payload && payload.jsonrpc === \"2.0\";\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nfunction isJsonRpcValidationInvalid(validation) {\n    return \"error\" in validation && validation.valid === false;\n} //# sourceMappingURL=validators.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vdmFsaWRhdG9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBTyxTQUFTQSxpQkFBaUJDLE9BQU87SUFDcEMsT0FBUSxPQUFPQSxZQUFZLFlBQ3ZCLFFBQVFBLFdBQ1IsYUFBYUEsV0FDYkEsUUFBUUMsT0FBTyxLQUFLO0FBQzVCO0FBQ08sU0FBU0MsaUJBQWlCRixPQUFPO0lBQ3BDLE9BQU9ELGlCQUFpQkMsWUFBWSxZQUFZQTtBQUNwRDtBQUNPLFNBQVNHLGtCQUFrQkgsT0FBTztJQUNyQyxPQUFPRCxpQkFBaUJDLFlBQWFJLENBQUFBLGdCQUFnQkosWUFBWUssZUFBZUwsUUFBTztBQUMzRjtBQUNPLFNBQVNJLGdCQUFnQkosT0FBTztJQUNuQyxPQUFPLFlBQVlBO0FBQ3ZCO0FBQ08sU0FBU0ssZUFBZUwsT0FBTztJQUNsQyxPQUFPLFdBQVdBO0FBQ3RCO0FBQ08sU0FBU00sMkJBQTJCQyxVQUFVO0lBQ2pELE9BQU8sV0FBV0EsY0FBY0EsV0FBV0MsS0FBSyxLQUFLO0FBQ3pELEVBQ0Esc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzL2Rpc3QvZXNtL3ZhbGlkYXRvcnMuanM/Y2I3YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNKc29uUnBjUGF5bG9hZChwYXlsb2FkKSB7XG4gICAgcmV0dXJuICh0eXBlb2YgcGF5bG9hZCA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICBcImlkXCIgaW4gcGF5bG9hZCAmJlxuICAgICAgICBcImpzb25ycGNcIiBpbiBwYXlsb2FkICYmXG4gICAgICAgIHBheWxvYWQuanNvbnJwYyA9PT0gXCIyLjBcIik7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNKc29uUnBjUmVxdWVzdChwYXlsb2FkKSB7XG4gICAgcmV0dXJuIGlzSnNvblJwY1BheWxvYWQocGF5bG9hZCkgJiYgXCJtZXRob2RcIiBpbiBwYXlsb2FkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzSnNvblJwY1Jlc3BvbnNlKHBheWxvYWQpIHtcbiAgICByZXR1cm4gaXNKc29uUnBjUGF5bG9hZChwYXlsb2FkKSAmJiAoaXNKc29uUnBjUmVzdWx0KHBheWxvYWQpIHx8IGlzSnNvblJwY0Vycm9yKHBheWxvYWQpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0pzb25ScGNSZXN1bHQocGF5bG9hZCkge1xuICAgIHJldHVybiBcInJlc3VsdFwiIGluIHBheWxvYWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNKc29uUnBjRXJyb3IocGF5bG9hZCkge1xuICAgIHJldHVybiBcImVycm9yXCIgaW4gcGF5bG9hZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0pzb25ScGNWYWxpZGF0aW9uSW52YWxpZCh2YWxpZGF0aW9uKSB7XG4gICAgcmV0dXJuIFwiZXJyb3JcIiBpbiB2YWxpZGF0aW9uICYmIHZhbGlkYXRpb24udmFsaWQgPT09IGZhbHNlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFsaWRhdG9ycy5qcy5tYXAiXSwibmFtZXMiOlsiaXNKc29uUnBjUGF5bG9hZCIsInBheWxvYWQiLCJqc29ucnBjIiwiaXNKc29uUnBjUmVxdWVzdCIsImlzSnNvblJwY1Jlc3BvbnNlIiwiaXNKc29uUnBjUmVzdWx0IiwiaXNKc29uUnBjRXJyb3IiLCJpc0pzb25ScGNWYWxpZGF0aW9uSW52YWxpZCIsInZhbGlkYXRpb24iLCJ2YWxpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WsConnection: () => (/* binding */ f),\n/* harmony export */   \"default\": () => (/* binding */ f)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/../../node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\nconst w = ()=>typeof WebSocket < \"u\" ? WebSocket : typeof global < \"u\" && typeof global.WebSocket < \"u\" ? global.WebSocket :  false ? 0 : typeof self < \"u\" && typeof self.WebSocket < \"u\" ? self.WebSocket : __webpack_require__(/*! ws */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/index.js\"), b = ()=>typeof WebSocket < \"u\" || typeof global < \"u\" && typeof global.WebSocket < \"u\" ||  false && 0 || typeof self < \"u\" && typeof self.WebSocket < \"u\", a = (c)=>c.split(\"?\")[0], h = 10, S = w();\nclass f {\n    constructor(e){\n        if (this.url = e, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.registering = !1, !(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isWsUrl)(e)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e}`);\n        this.url = e;\n    }\n    get connected() {\n        return typeof this.socket < \"u\";\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(e, t) {\n        this.events.on(e, t);\n    }\n    once(e, t) {\n        this.events.once(e, t);\n    }\n    off(e, t) {\n        this.events.off(e, t);\n    }\n    removeListener(e, t) {\n        this.events.removeListener(e, t);\n    }\n    async open(e = this.url) {\n        await this.register(e);\n    }\n    async close() {\n        return new Promise((e, t)=>{\n            if (typeof this.socket > \"u\") {\n                t(new Error(\"Connection already closed\"));\n                return;\n            }\n            this.socket.onclose = (n)=>{\n                this.onClose(n), e();\n            }, this.socket.close();\n        });\n    }\n    async send(e) {\n        typeof this.socket > \"u\" && (this.socket = await this.register());\n        try {\n            this.socket.send((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify)(e));\n        } catch (t) {\n            this.onError(e.id, t);\n        }\n    }\n    register(e = this.url) {\n        if (!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isWsUrl)(e)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e}`);\n        if (this.registering) {\n            const t = this.events.getMaxListeners();\n            return (this.events.listenerCount(\"register_error\") >= t || this.events.listenerCount(\"open\") >= t) && this.events.setMaxListeners(t + 1), new Promise((n, o)=>{\n                this.events.once(\"register_error\", (s)=>{\n                    this.resetMaxListeners(), o(s);\n                }), this.events.once(\"open\", ()=>{\n                    if (this.resetMaxListeners(), typeof this.socket > \"u\") return o(new Error(\"WebSocket connection is missing or invalid\"));\n                    n(this.socket);\n                });\n            });\n        }\n        return this.url = e, this.registering = !0, new Promise((t, n)=>{\n            const o = new URLSearchParams(e).get(\"origin\"), s = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isReactNative)() ? {\n                headers: {\n                    origin: o\n                }\n            } : {\n                rejectUnauthorized: !(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isLocalhostUrl)(e)\n            }, i = new S(e, [], s);\n            b() ? i.onerror = (r)=>{\n                const l = r;\n                n(this.emitError(l.error));\n            } : i.on(\"error\", (r)=>{\n                n(this.emitError(r));\n            }), i.onopen = ()=>{\n                this.onOpen(i), t(i);\n            };\n        });\n    }\n    onOpen(e) {\n        e.onmessage = (t)=>this.onPayload(t), e.onclose = (t)=>this.onClose(t), this.socket = e, this.registering = !1, this.events.emit(\"open\");\n    }\n    onClose(e) {\n        this.socket = void 0, this.registering = !1, this.events.emit(\"close\", e);\n    }\n    onPayload(e) {\n        if (typeof e.data > \"u\") return;\n        const t = typeof e.data == \"string\" ? (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", t);\n    }\n    onError(e, t) {\n        const n = this.parseError(t), o = n.message || n.toString(), s = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.formatJsonRpcError)(e, o);\n        this.events.emit(\"payload\", s);\n    }\n    parseError(e, t = this.url) {\n        return (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.parseConnectionError)(e, a(t), \"WS\");\n    }\n    resetMaxListeners() {\n        this.events.getMaxListeners() > h && this.events.setMaxListeners(h);\n    }\n    emitError(e) {\n        const t = this.parseError(new Error(e?.message || `WebSocket connection failed for host: ${a(this.url)}`));\n        return this.events.emit(\"register_error\", t), t;\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/index.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/index.js ***!
  \****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst WebSocket = __webpack_require__(/*! ./lib/websocket */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket.js\");\nWebSocket.createWebSocketStream = __webpack_require__(/*! ./lib/stream */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/stream.js\");\nWebSocket.Server = __webpack_require__(/*! ./lib/websocket-server */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket-server.js\");\nWebSocket.Receiver = __webpack_require__(/*! ./lib/receiver */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/receiver.js\");\nWebSocket.Sender = __webpack_require__(/*! ./lib/sender */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/sender.js\");\nmodule.exports = WebSocket;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9ub2RlX21vZHVsZXMvd3MvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxZQUFZQyxtQkFBT0EsQ0FBQztBQUUxQkQsVUFBVUUscUJBQXFCLEdBQUdELG1CQUFPQSxDQUFDO0FBQzFDRCxVQUFVRyxNQUFNLEdBQUdGLG1CQUFPQSxDQUFDO0FBQzNCRCxVQUFVSSxRQUFRLEdBQUdILG1CQUFPQSxDQUFDO0FBQzdCRCxVQUFVSyxNQUFNLEdBQUdKLG1CQUFPQSxDQUFDO0FBRTNCSyxPQUFPQyxPQUFPLEdBQUdQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXdzLWNvbm5lY3Rpb24vbm9kZV9tb2R1bGVzL3dzL2luZGV4LmpzP2U3ZjkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBXZWJTb2NrZXQgPSByZXF1aXJlKCcuL2xpYi93ZWJzb2NrZXQnKTtcblxuV2ViU29ja2V0LmNyZWF0ZVdlYlNvY2tldFN0cmVhbSA9IHJlcXVpcmUoJy4vbGliL3N0cmVhbScpO1xuV2ViU29ja2V0LlNlcnZlciA9IHJlcXVpcmUoJy4vbGliL3dlYnNvY2tldC1zZXJ2ZXInKTtcbldlYlNvY2tldC5SZWNlaXZlciA9IHJlcXVpcmUoJy4vbGliL3JlY2VpdmVyJyk7XG5XZWJTb2NrZXQuU2VuZGVyID0gcmVxdWlyZSgnLi9saWIvc2VuZGVyJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gV2ViU29ja2V0O1xuIl0sIm5hbWVzIjpbIldlYlNvY2tldCIsInJlcXVpcmUiLCJjcmVhdGVXZWJTb2NrZXRTdHJlYW0iLCJTZXJ2ZXIiLCJSZWNlaXZlciIsIlNlbmRlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js":
/*!**************************************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js ***!
  \**************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { EMPTY_BUFFER } = __webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\");\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */ function concat(list, totalLength) {\n    if (list.length === 0) return EMPTY_BUFFER;\n    if (list.length === 1) return list[0];\n    const target = Buffer.allocUnsafe(totalLength);\n    let offset = 0;\n    for(let i = 0; i < list.length; i++){\n        const buf = list[i];\n        target.set(buf, offset);\n        offset += buf.length;\n    }\n    if (offset < totalLength) return target.slice(0, offset);\n    return target;\n}\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */ function _mask(source, mask, output, offset, length) {\n    for(let i = 0; i < length; i++){\n        output[offset + i] = source[i] ^ mask[i & 3];\n    }\n}\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */ function _unmask(buffer, mask) {\n    // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n    const length = buffer.length;\n    for(let i = 0; i < length; i++){\n        buffer[i] ^= mask[i & 3];\n    }\n}\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */ function toArrayBuffer(buf) {\n    if (buf.byteLength === buf.buffer.byteLength) {\n        return buf.buffer;\n    }\n    return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */ function toBuffer(data) {\n    toBuffer.readOnly = true;\n    if (Buffer.isBuffer(data)) return data;\n    let buf;\n    if (data instanceof ArrayBuffer) {\n        buf = Buffer.from(data);\n    } else if (ArrayBuffer.isView(data)) {\n        buf = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n    } else {\n        buf = Buffer.from(data);\n        toBuffer.readOnly = false;\n    }\n    return buf;\n}\ntry {\n    const bufferUtil = __webpack_require__(/*! bufferutil */ \"(ssr)/../../node_modules/bufferutil/index.js\");\n    const bu = bufferUtil.BufferUtil || bufferUtil;\n    module.exports = {\n        concat,\n        mask (source, mask, output, offset, length) {\n            if (length < 48) _mask(source, mask, output, offset, length);\n            else bu.mask(source, mask, output, offset, length);\n        },\n        toArrayBuffer,\n        toBuffer,\n        unmask (buffer, mask) {\n            if (buffer.length < 32) _unmask(buffer, mask);\n            else bu.unmask(buffer, mask);\n        }\n    };\n} catch (e) /* istanbul ignore next */ {\n    module.exports = {\n        concat,\n        mask: _mask,\n        toArrayBuffer,\n        toBuffer,\n        unmask: _unmask\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9ub2RlX21vZHVsZXMvd3MvbGliL2J1ZmZlci11dGlsLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTSxFQUFFQSxZQUFZLEVBQUUsR0FBR0MsbUJBQU9BLENBQUM7QUFFakM7Ozs7Ozs7Q0FPQyxHQUNELFNBQVNDLE9BQU9DLElBQUksRUFBRUMsV0FBVztJQUMvQixJQUFJRCxLQUFLRSxNQUFNLEtBQUssR0FBRyxPQUFPTDtJQUM5QixJQUFJRyxLQUFLRSxNQUFNLEtBQUssR0FBRyxPQUFPRixJQUFJLENBQUMsRUFBRTtJQUVyQyxNQUFNRyxTQUFTQyxPQUFPQyxXQUFXLENBQUNKO0lBQ2xDLElBQUlLLFNBQVM7SUFFYixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSVAsS0FBS0UsTUFBTSxFQUFFSyxJQUFLO1FBQ3BDLE1BQU1DLE1BQU1SLElBQUksQ0FBQ08sRUFBRTtRQUNuQkosT0FBT00sR0FBRyxDQUFDRCxLQUFLRjtRQUNoQkEsVUFBVUUsSUFBSU4sTUFBTTtJQUN0QjtJQUVBLElBQUlJLFNBQVNMLGFBQWEsT0FBT0UsT0FBT08sS0FBSyxDQUFDLEdBQUdKO0lBRWpELE9BQU9IO0FBQ1Q7QUFFQTs7Ozs7Ozs7O0NBU0MsR0FDRCxTQUFTUSxNQUFNQyxNQUFNLEVBQUVDLElBQUksRUFBRUMsTUFBTSxFQUFFUixNQUFNLEVBQUVKLE1BQU07SUFDakQsSUFBSyxJQUFJSyxJQUFJLEdBQUdBLElBQUlMLFFBQVFLLElBQUs7UUFDL0JPLE1BQU0sQ0FBQ1IsU0FBU0MsRUFBRSxHQUFHSyxNQUFNLENBQUNMLEVBQUUsR0FBR00sSUFBSSxDQUFDTixJQUFJLEVBQUU7SUFDOUM7QUFDRjtBQUVBOzs7Ozs7Q0FNQyxHQUNELFNBQVNRLFFBQVFDLE1BQU0sRUFBRUgsSUFBSTtJQUMzQix5RUFBeUU7SUFDekUsTUFBTVgsU0FBU2MsT0FBT2QsTUFBTTtJQUM1QixJQUFLLElBQUlLLElBQUksR0FBR0EsSUFBSUwsUUFBUUssSUFBSztRQUMvQlMsTUFBTSxDQUFDVCxFQUFFLElBQUlNLElBQUksQ0FBQ04sSUFBSSxFQUFFO0lBQzFCO0FBQ0Y7QUFFQTs7Ozs7O0NBTUMsR0FDRCxTQUFTVSxjQUFjVCxHQUFHO0lBQ3hCLElBQUlBLElBQUlVLFVBQVUsS0FBS1YsSUFBSVEsTUFBTSxDQUFDRSxVQUFVLEVBQUU7UUFDNUMsT0FBT1YsSUFBSVEsTUFBTTtJQUNuQjtJQUVBLE9BQU9SLElBQUlRLE1BQU0sQ0FBQ04sS0FBSyxDQUFDRixJQUFJVyxVQUFVLEVBQUVYLElBQUlXLFVBQVUsR0FBR1gsSUFBSVUsVUFBVTtBQUN6RTtBQUVBOzs7Ozs7O0NBT0MsR0FDRCxTQUFTRSxTQUFTQyxJQUFJO0lBQ3BCRCxTQUFTRSxRQUFRLEdBQUc7SUFFcEIsSUFBSWxCLE9BQU9tQixRQUFRLENBQUNGLE9BQU8sT0FBT0E7SUFFbEMsSUFBSWI7SUFFSixJQUFJYSxnQkFBZ0JHLGFBQWE7UUFDL0JoQixNQUFNSixPQUFPcUIsSUFBSSxDQUFDSjtJQUNwQixPQUFPLElBQUlHLFlBQVlFLE1BQU0sQ0FBQ0wsT0FBTztRQUNuQ2IsTUFBTUosT0FBT3FCLElBQUksQ0FBQ0osS0FBS0wsTUFBTSxFQUFFSyxLQUFLRixVQUFVLEVBQUVFLEtBQUtILFVBQVU7SUFDakUsT0FBTztRQUNMVixNQUFNSixPQUFPcUIsSUFBSSxDQUFDSjtRQUNsQkQsU0FBU0UsUUFBUSxHQUFHO0lBQ3RCO0lBRUEsT0FBT2Q7QUFDVDtBQUVBLElBQUk7SUFDRixNQUFNbUIsYUFBYTdCLG1CQUFPQSxDQUFDO0lBQzNCLE1BQU04QixLQUFLRCxXQUFXRSxVQUFVLElBQUlGO0lBRXBDRyxPQUFPQyxPQUFPLEdBQUc7UUFDZmhDO1FBQ0FjLE1BQUtELE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxNQUFNLEVBQUVSLE1BQU0sRUFBRUosTUFBTTtZQUN2QyxJQUFJQSxTQUFTLElBQUlTLE1BQU1DLFFBQVFDLE1BQU1DLFFBQVFSLFFBQVFKO2lCQUNoRDBCLEdBQUdmLElBQUksQ0FBQ0QsUUFBUUMsTUFBTUMsUUFBUVIsUUFBUUo7UUFDN0M7UUFDQWU7UUFDQUc7UUFDQVksUUFBT2hCLE1BQU0sRUFBRUgsSUFBSTtZQUNqQixJQUFJRyxPQUFPZCxNQUFNLEdBQUcsSUFBSWEsUUFBUUMsUUFBUUg7aUJBQ25DZSxHQUFHSSxNQUFNLENBQUNoQixRQUFRSDtRQUN6QjtJQUNGO0FBQ0YsRUFBRSxPQUFPb0IsR0FBRyx3QkFBd0IsR0FBRztJQUNyQ0gsT0FBT0MsT0FBTyxHQUFHO1FBQ2ZoQztRQUNBYyxNQUFNRjtRQUNOTTtRQUNBRztRQUNBWSxRQUFRakI7SUFDVjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXdzLWNvbm5lY3Rpb24vbm9kZV9tb2R1bGVzL3dzL2xpYi9idWZmZXItdXRpbC5qcz9mMmNhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgeyBFTVBUWV9CVUZGRVIgfSA9IHJlcXVpcmUoJy4vY29uc3RhbnRzJyk7XG5cbi8qKlxuICogTWVyZ2VzIGFuIGFycmF5IG9mIGJ1ZmZlcnMgaW50byBhIG5ldyBidWZmZXIuXG4gKlxuICogQHBhcmFtIHtCdWZmZXJbXX0gbGlzdCBUaGUgYXJyYXkgb2YgYnVmZmVycyB0byBjb25jYXRcbiAqIEBwYXJhbSB7TnVtYmVyfSB0b3RhbExlbmd0aCBUaGUgdG90YWwgbGVuZ3RoIG9mIGJ1ZmZlcnMgaW4gdGhlIGxpc3RcbiAqIEByZXR1cm4ge0J1ZmZlcn0gVGhlIHJlc3VsdGluZyBidWZmZXJcbiAqIEBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gY29uY2F0KGxpc3QsIHRvdGFsTGVuZ3RoKSB7XG4gIGlmIChsaXN0Lmxlbmd0aCA9PT0gMCkgcmV0dXJuIEVNUFRZX0JVRkZFUjtcbiAgaWYgKGxpc3QubGVuZ3RoID09PSAxKSByZXR1cm4gbGlzdFswXTtcblxuICBjb25zdCB0YXJnZXQgPSBCdWZmZXIuYWxsb2NVbnNhZmUodG90YWxMZW5ndGgpO1xuICBsZXQgb2Zmc2V0ID0gMDtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBidWYgPSBsaXN0W2ldO1xuICAgIHRhcmdldC5zZXQoYnVmLCBvZmZzZXQpO1xuICAgIG9mZnNldCArPSBidWYubGVuZ3RoO1xuICB9XG5cbiAgaWYgKG9mZnNldCA8IHRvdGFsTGVuZ3RoKSByZXR1cm4gdGFyZ2V0LnNsaWNlKDAsIG9mZnNldCk7XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxuLyoqXG4gKiBNYXNrcyBhIGJ1ZmZlciB1c2luZyB0aGUgZ2l2ZW4gbWFzay5cbiAqXG4gKiBAcGFyYW0ge0J1ZmZlcn0gc291cmNlIFRoZSBidWZmZXIgdG8gbWFza1xuICogQHBhcmFtIHtCdWZmZXJ9IG1hc2sgVGhlIG1hc2sgdG8gdXNlXG4gKiBAcGFyYW0ge0J1ZmZlcn0gb3V0cHV0IFRoZSBidWZmZXIgd2hlcmUgdG8gc3RvcmUgdGhlIHJlc3VsdFxuICogQHBhcmFtIHtOdW1iZXJ9IG9mZnNldCBUaGUgb2Zmc2V0IGF0IHdoaWNoIHRvIHN0YXJ0IHdyaXRpbmdcbiAqIEBwYXJhbSB7TnVtYmVyfSBsZW5ndGggVGhlIG51bWJlciBvZiBieXRlcyB0byBtYXNrLlxuICogQHB1YmxpY1xuICovXG5mdW5jdGlvbiBfbWFzayhzb3VyY2UsIG1hc2ssIG91dHB1dCwgb2Zmc2V0LCBsZW5ndGgpIHtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgIG91dHB1dFtvZmZzZXQgKyBpXSA9IHNvdXJjZVtpXSBeIG1hc2tbaSAmIDNdO1xuICB9XG59XG5cbi8qKlxuICogVW5tYXNrcyBhIGJ1ZmZlciB1c2luZyB0aGUgZ2l2ZW4gbWFzay5cbiAqXG4gKiBAcGFyYW0ge0J1ZmZlcn0gYnVmZmVyIFRoZSBidWZmZXIgdG8gdW5tYXNrXG4gKiBAcGFyYW0ge0J1ZmZlcn0gbWFzayBUaGUgbWFzayB0byB1c2VcbiAqIEBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gX3VubWFzayhidWZmZXIsIG1hc2spIHtcbiAgLy8gUmVxdWlyZWQgdW50aWwgaHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlL2lzc3Vlcy85MDA2IGlzIHJlc29sdmVkLlxuICBjb25zdCBsZW5ndGggPSBidWZmZXIubGVuZ3RoO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgYnVmZmVyW2ldIF49IG1hc2tbaSAmIDNdO1xuICB9XG59XG5cbi8qKlxuICogQ29udmVydHMgYSBidWZmZXIgdG8gYW4gYEFycmF5QnVmZmVyYC5cbiAqXG4gKiBAcGFyYW0ge0J1ZmZlcn0gYnVmIFRoZSBidWZmZXIgdG8gY29udmVydFxuICogQHJldHVybiB7QXJyYXlCdWZmZXJ9IENvbnZlcnRlZCBidWZmZXJcbiAqIEBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gdG9BcnJheUJ1ZmZlcihidWYpIHtcbiAgaWYgKGJ1Zi5ieXRlTGVuZ3RoID09PSBidWYuYnVmZmVyLmJ5dGVMZW5ndGgpIHtcbiAgICByZXR1cm4gYnVmLmJ1ZmZlcjtcbiAgfVxuXG4gIHJldHVybiBidWYuYnVmZmVyLnNsaWNlKGJ1Zi5ieXRlT2Zmc2V0LCBidWYuYnl0ZU9mZnNldCArIGJ1Zi5ieXRlTGVuZ3RoKTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBgZGF0YWAgdG8gYSBgQnVmZmVyYC5cbiAqXG4gKiBAcGFyYW0geyp9IGRhdGEgVGhlIGRhdGEgdG8gY29udmVydFxuICogQHJldHVybiB7QnVmZmVyfSBUaGUgYnVmZmVyXG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9XG4gKiBAcHVibGljXG4gKi9cbmZ1bmN0aW9uIHRvQnVmZmVyKGRhdGEpIHtcbiAgdG9CdWZmZXIucmVhZE9ubHkgPSB0cnVlO1xuXG4gIGlmIChCdWZmZXIuaXNCdWZmZXIoZGF0YSkpIHJldHVybiBkYXRhO1xuXG4gIGxldCBidWY7XG5cbiAgaWYgKGRhdGEgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikge1xuICAgIGJ1ZiA9IEJ1ZmZlci5mcm9tKGRhdGEpO1xuICB9IGVsc2UgaWYgKEFycmF5QnVmZmVyLmlzVmlldyhkYXRhKSkge1xuICAgIGJ1ZiA9IEJ1ZmZlci5mcm9tKGRhdGEuYnVmZmVyLCBkYXRhLmJ5dGVPZmZzZXQsIGRhdGEuYnl0ZUxlbmd0aCk7XG4gIH0gZWxzZSB7XG4gICAgYnVmID0gQnVmZmVyLmZyb20oZGF0YSk7XG4gICAgdG9CdWZmZXIucmVhZE9ubHkgPSBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiBidWY7XG59XG5cbnRyeSB7XG4gIGNvbnN0IGJ1ZmZlclV0aWwgPSByZXF1aXJlKCdidWZmZXJ1dGlsJyk7XG4gIGNvbnN0IGJ1ID0gYnVmZmVyVXRpbC5CdWZmZXJVdGlsIHx8IGJ1ZmZlclV0aWw7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgY29uY2F0LFxuICAgIG1hc2soc291cmNlLCBtYXNrLCBvdXRwdXQsIG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICBpZiAobGVuZ3RoIDwgNDgpIF9tYXNrKHNvdXJjZSwgbWFzaywgb3V0cHV0LCBvZmZzZXQsIGxlbmd0aCk7XG4gICAgICBlbHNlIGJ1Lm1hc2soc291cmNlLCBtYXNrLCBvdXRwdXQsIG9mZnNldCwgbGVuZ3RoKTtcbiAgICB9LFxuICAgIHRvQXJyYXlCdWZmZXIsXG4gICAgdG9CdWZmZXIsXG4gICAgdW5tYXNrKGJ1ZmZlciwgbWFzaykge1xuICAgICAgaWYgKGJ1ZmZlci5sZW5ndGggPCAzMikgX3VubWFzayhidWZmZXIsIG1hc2spO1xuICAgICAgZWxzZSBidS51bm1hc2soYnVmZmVyLCBtYXNrKTtcbiAgICB9XG4gIH07XG59IGNhdGNoIChlKSAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqLyB7XG4gIG1vZHVsZS5leHBvcnRzID0ge1xuICAgIGNvbmNhdCxcbiAgICBtYXNrOiBfbWFzayxcbiAgICB0b0FycmF5QnVmZmVyLFxuICAgIHRvQnVmZmVyLFxuICAgIHVubWFzazogX3VubWFza1xuICB9O1xufVxuIl0sIm5hbWVzIjpbIkVNUFRZX0JVRkZFUiIsInJlcXVpcmUiLCJjb25jYXQiLCJsaXN0IiwidG90YWxMZW5ndGgiLCJsZW5ndGgiLCJ0YXJnZXQiLCJCdWZmZXIiLCJhbGxvY1Vuc2FmZSIsIm9mZnNldCIsImkiLCJidWYiLCJzZXQiLCJzbGljZSIsIl9tYXNrIiwic291cmNlIiwibWFzayIsIm91dHB1dCIsIl91bm1hc2siLCJidWZmZXIiLCJ0b0FycmF5QnVmZmVyIiwiYnl0ZUxlbmd0aCIsImJ5dGVPZmZzZXQiLCJ0b0J1ZmZlciIsImRhdGEiLCJyZWFkT25seSIsImlzQnVmZmVyIiwiQXJyYXlCdWZmZXIiLCJmcm9tIiwiaXNWaWV3IiwiYnVmZmVyVXRpbCIsImJ1IiwiQnVmZmVyVXRpbCIsIm1vZHVsZSIsImV4cG9ydHMiLCJ1bm1hc2siLCJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js":
/*!************************************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js ***!
  \************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = {\n    BINARY_TYPES: [\n        \"nodebuffer\",\n        \"arraybuffer\",\n        \"fragments\"\n    ],\n    GUID: \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\",\n    kStatusCode: Symbol(\"status-code\"),\n    kWebSocket: Symbol(\"websocket\"),\n    EMPTY_BUFFER: Buffer.alloc(0),\n    NOOP: ()=>{}\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9ub2RlX21vZHVsZXMvd3MvbGliL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBQSxPQUFPQyxPQUFPLEdBQUc7SUFDZkMsY0FBYztRQUFDO1FBQWM7UUFBZTtLQUFZO0lBQ3hEQyxNQUFNO0lBQ05DLGFBQWFDLE9BQU87SUFDcEJDLFlBQVlELE9BQU87SUFDbkJFLGNBQWNDLE9BQU9DLEtBQUssQ0FBQztJQUMzQkMsTUFBTSxLQUFPO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jc2EvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9ub2RlX21vZHVsZXMvd3MvbGliL2NvbnN0YW50cy5qcz8xNDliIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIEJJTkFSWV9UWVBFUzogWydub2RlYnVmZmVyJywgJ2FycmF5YnVmZmVyJywgJ2ZyYWdtZW50cyddLFxuICBHVUlEOiAnMjU4RUFGQTUtRTkxNC00N0RBLTk1Q0EtQzVBQjBEQzg1QjExJyxcbiAga1N0YXR1c0NvZGU6IFN5bWJvbCgnc3RhdHVzLWNvZGUnKSxcbiAga1dlYlNvY2tldDogU3ltYm9sKCd3ZWJzb2NrZXQnKSxcbiAgRU1QVFlfQlVGRkVSOiBCdWZmZXIuYWxsb2MoMCksXG4gIE5PT1A6ICgpID0+IHt9XG59O1xuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJCSU5BUllfVFlQRVMiLCJHVUlEIiwia1N0YXR1c0NvZGUiLCJTeW1ib2wiLCJrV2ViU29ja2V0IiwiRU1QVFlfQlVGRkVSIiwiQnVmZmVyIiwiYWxsb2MiLCJOT09QIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/event-target.js":
/*!***************************************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/event-target.js ***!
  \***************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n/**\n * Class representing an event.\n *\n * @private\n */ class Event {\n    /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} target A reference to the target to which the event was\n   *     dispatched\n   */ constructor(type, target){\n        this.target = target;\n        this.type = type;\n    }\n}\n/**\n * Class representing a message event.\n *\n * @extends Event\n * @private\n */ class MessageEvent extends Event {\n    /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The received data\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */ constructor(data, target){\n        super(\"message\", target);\n        this.data = data;\n    }\n}\n/**\n * Class representing a close event.\n *\n * @extends Event\n * @private\n */ class CloseEvent extends Event {\n    /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {Number} code The status code explaining why the connection is being\n   *     closed\n   * @param {String} reason A human-readable string explaining why the\n   *     connection is closing\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */ constructor(code, reason, target){\n        super(\"close\", target);\n        this.wasClean = target._closeFrameReceived && target._closeFrameSent;\n        this.reason = reason;\n        this.code = code;\n    }\n}\n/**\n * Class representing an open event.\n *\n * @extends Event\n * @private\n */ class OpenEvent extends Event {\n    /**\n   * Create a new `OpenEvent`.\n   *\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */ constructor(target){\n        super(\"open\", target);\n    }\n}\n/**\n * Class representing an error event.\n *\n * @extends Event\n * @private\n */ class ErrorEvent extends Event {\n    /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {Object} error The error that generated this event\n   * @param {WebSocket} target A reference to the target to which the event was\n   *     dispatched\n   */ constructor(error, target){\n        super(\"error\", target);\n        this.message = error.message;\n        this.error = error;\n    }\n}\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */ const EventTarget = {\n    /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {Function} listener The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean`` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */ addEventListener (type, listener, options) {\n        if (typeof listener !== \"function\") return;\n        function onMessage(data) {\n            listener.call(this, new MessageEvent(data, this));\n        }\n        function onClose(code, message) {\n            listener.call(this, new CloseEvent(code, message, this));\n        }\n        function onError(error) {\n            listener.call(this, new ErrorEvent(error, this));\n        }\n        function onOpen() {\n            listener.call(this, new OpenEvent(this));\n        }\n        const method = options && options.once ? \"once\" : \"on\";\n        if (type === \"message\") {\n            onMessage._listener = listener;\n            this[method](type, onMessage);\n        } else if (type === \"close\") {\n            onClose._listener = listener;\n            this[method](type, onClose);\n        } else if (type === \"error\") {\n            onError._listener = listener;\n            this[method](type, onError);\n        } else if (type === \"open\") {\n            onOpen._listener = listener;\n            this[method](type, onOpen);\n        } else {\n            this[method](type, listener);\n        }\n    },\n    /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {Function} listener The listener to remove\n   * @public\n   */ removeEventListener (type, listener) {\n        const listeners = this.listeners(type);\n        for(let i = 0; i < listeners.length; i++){\n            if (listeners[i] === listener || listeners[i]._listener === listener) {\n                this.removeListener(type, listeners[i]);\n            }\n        }\n    }\n};\nmodule.exports = EventTarget;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/event-target.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/extension.js":
/*!************************************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/extension.js ***!
  \************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    1,\n    1,\n    0,\n    1,\n    1,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    1,\n    0,\n    1,\n    0 // 112 - 127\n];\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */ function push(dest, name, elem) {\n    if (dest[name] === undefined) dest[name] = [\n        elem\n    ];\n    else dest[name].push(elem);\n}\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */ function parse(header) {\n    const offers = Object.create(null);\n    if (header === undefined || header === \"\") return offers;\n    let params = Object.create(null);\n    let mustUnescape = false;\n    let isEscaping = false;\n    let inQuotes = false;\n    let extensionName;\n    let paramName;\n    let start = -1;\n    let end = -1;\n    let i = 0;\n    for(; i < header.length; i++){\n        const code = header.charCodeAt(i);\n        if (extensionName === undefined) {\n            if (end === -1 && tokenChars[code] === 1) {\n                if (start === -1) start = i;\n            } else if (code === 0x20 /* ' ' */  || code === 0x09 /* '\\t' */ ) {\n                if (end === -1 && start !== -1) end = i;\n            } else if (code === 0x3b /* ';' */  || code === 0x2c /* ',' */ ) {\n                if (start === -1) {\n                    throw new SyntaxError(`Unexpected character at index ${i}`);\n                }\n                if (end === -1) end = i;\n                const name = header.slice(start, end);\n                if (code === 0x2c) {\n                    push(offers, name, params);\n                    params = Object.create(null);\n                } else {\n                    extensionName = name;\n                }\n                start = end = -1;\n            } else {\n                throw new SyntaxError(`Unexpected character at index ${i}`);\n            }\n        } else if (paramName === undefined) {\n            if (end === -1 && tokenChars[code] === 1) {\n                if (start === -1) start = i;\n            } else if (code === 0x20 || code === 0x09) {\n                if (end === -1 && start !== -1) end = i;\n            } else if (code === 0x3b || code === 0x2c) {\n                if (start === -1) {\n                    throw new SyntaxError(`Unexpected character at index ${i}`);\n                }\n                if (end === -1) end = i;\n                push(params, header.slice(start, end), true);\n                if (code === 0x2c) {\n                    push(offers, extensionName, params);\n                    params = Object.create(null);\n                    extensionName = undefined;\n                }\n                start = end = -1;\n            } else if (code === 0x3d /* '=' */  && start !== -1 && end === -1) {\n                paramName = header.slice(start, i);\n                start = end = -1;\n            } else {\n                throw new SyntaxError(`Unexpected character at index ${i}`);\n            }\n        } else {\n            //\n            // The value of a quoted-string after unescaping must conform to the\n            // token ABNF, so only token characters are valid.\n            // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n            //\n            if (isEscaping) {\n                if (tokenChars[code] !== 1) {\n                    throw new SyntaxError(`Unexpected character at index ${i}`);\n                }\n                if (start === -1) start = i;\n                else if (!mustUnescape) mustUnescape = true;\n                isEscaping = false;\n            } else if (inQuotes) {\n                if (tokenChars[code] === 1) {\n                    if (start === -1) start = i;\n                } else if (code === 0x22 /* '\"' */  && start !== -1) {\n                    inQuotes = false;\n                    end = i;\n                } else if (code === 0x5c /* '\\' */ ) {\n                    isEscaping = true;\n                } else {\n                    throw new SyntaxError(`Unexpected character at index ${i}`);\n                }\n            } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n                inQuotes = true;\n            } else if (end === -1 && tokenChars[code] === 1) {\n                if (start === -1) start = i;\n            } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n                if (end === -1) end = i;\n            } else if (code === 0x3b || code === 0x2c) {\n                if (start === -1) {\n                    throw new SyntaxError(`Unexpected character at index ${i}`);\n                }\n                if (end === -1) end = i;\n                let value = header.slice(start, end);\n                if (mustUnescape) {\n                    value = value.replace(/\\\\/g, \"\");\n                    mustUnescape = false;\n                }\n                push(params, paramName, value);\n                if (code === 0x2c) {\n                    push(offers, extensionName, params);\n                    params = Object.create(null);\n                    extensionName = undefined;\n                }\n                paramName = undefined;\n                start = end = -1;\n            } else {\n                throw new SyntaxError(`Unexpected character at index ${i}`);\n            }\n        }\n    }\n    if (start === -1 || inQuotes) {\n        throw new SyntaxError(\"Unexpected end of input\");\n    }\n    if (end === -1) end = i;\n    const token = header.slice(start, end);\n    if (extensionName === undefined) {\n        push(offers, token, params);\n    } else {\n        if (paramName === undefined) {\n            push(params, token, true);\n        } else if (mustUnescape) {\n            push(params, paramName, token.replace(/\\\\/g, \"\"));\n        } else {\n            push(params, paramName, token);\n        }\n        push(offers, extensionName, params);\n    }\n    return offers;\n}\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */ function format(extensions) {\n    return Object.keys(extensions).map((extension)=>{\n        let configurations = extensions[extension];\n        if (!Array.isArray(configurations)) configurations = [\n            configurations\n        ];\n        return configurations.map((params)=>{\n            return [\n                extension\n            ].concat(Object.keys(params).map((k)=>{\n                let values = params[k];\n                if (!Array.isArray(values)) values = [\n                    values\n                ];\n                return values.map((v)=>v === true ? k : `${k}=${v}`).join(\"; \");\n            })).join(\"; \");\n        }).join(\", \");\n    }).join(\", \");\n}\nmodule.exports = {\n    format,\n    parse\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/extension.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/limiter.js":
/*!**********************************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/limiter.js ***!
  \**********************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nconst kDone = Symbol(\"kDone\");\nconst kRun = Symbol(\"kRun\");\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */ class Limiter {\n    /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */ constructor(concurrency){\n        this[kDone] = ()=>{\n            this.pending--;\n            this[kRun]();\n        };\n        this.concurrency = concurrency || Infinity;\n        this.jobs = [];\n        this.pending = 0;\n    }\n    /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */ add(job) {\n        this.jobs.push(job);\n        this[kRun]();\n    }\n    /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */ [kRun]() {\n        if (this.pending === this.concurrency) return;\n        if (this.jobs.length) {\n            const job = this.jobs.shift();\n            this.pending++;\n            job(this[kDone]);\n        }\n    }\n}\nmodule.exports = Limiter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9ub2RlX21vZHVsZXMvd3MvbGliL2xpbWl0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxRQUFRQyxPQUFPO0FBQ3JCLE1BQU1DLE9BQU9ELE9BQU87QUFFcEI7OztDQUdDLEdBQ0QsTUFBTUU7SUFDSjs7Ozs7R0FLQyxHQUNEQyxZQUFZQyxXQUFXLENBQUU7UUFDdkIsSUFBSSxDQUFDTCxNQUFNLEdBQUc7WUFDWixJQUFJLENBQUNNLE9BQU87WUFDWixJQUFJLENBQUNKLEtBQUs7UUFDWjtRQUNBLElBQUksQ0FBQ0csV0FBVyxHQUFHQSxlQUFlRTtRQUNsQyxJQUFJLENBQUNDLElBQUksR0FBRyxFQUFFO1FBQ2QsSUFBSSxDQUFDRixPQUFPLEdBQUc7SUFDakI7SUFFQTs7Ozs7R0FLQyxHQUNERyxJQUFJQyxHQUFHLEVBQUU7UUFDUCxJQUFJLENBQUNGLElBQUksQ0FBQ0csSUFBSSxDQUFDRDtRQUNmLElBQUksQ0FBQ1IsS0FBSztJQUNaO0lBRUE7Ozs7R0FJQyxHQUNELENBQUNBLEtBQUssR0FBRztRQUNQLElBQUksSUFBSSxDQUFDSSxPQUFPLEtBQUssSUFBSSxDQUFDRCxXQUFXLEVBQUU7UUFFdkMsSUFBSSxJQUFJLENBQUNHLElBQUksQ0FBQ0ksTUFBTSxFQUFFO1lBQ3BCLE1BQU1GLE1BQU0sSUFBSSxDQUFDRixJQUFJLENBQUNLLEtBQUs7WUFFM0IsSUFBSSxDQUFDUCxPQUFPO1lBQ1pJLElBQUksSUFBSSxDQUFDVixNQUFNO1FBQ2pCO0lBQ0Y7QUFDRjtBQUVBYyxPQUFPQyxPQUFPLEdBQUdaIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXdzLWNvbm5lY3Rpb24vbm9kZV9tb2R1bGVzL3dzL2xpYi9saW1pdGVyLmpzP2MzMDQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBrRG9uZSA9IFN5bWJvbCgna0RvbmUnKTtcbmNvbnN0IGtSdW4gPSBTeW1ib2woJ2tSdW4nKTtcblxuLyoqXG4gKiBBIHZlcnkgc2ltcGxlIGpvYiBxdWV1ZSB3aXRoIGFkanVzdGFibGUgY29uY3VycmVuY3kuIEFkYXB0ZWQgZnJvbVxuICogaHR0cHM6Ly9naXRodWIuY29tL1NUUk1ML2FzeW5jLWxpbWl0ZXJcbiAqL1xuY2xhc3MgTGltaXRlciB7XG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgbmV3IGBMaW1pdGVyYC5cbiAgICpcbiAgICogQHBhcmFtIHtOdW1iZXJ9IFtjb25jdXJyZW5jeT1JbmZpbml0eV0gVGhlIG1heGltdW0gbnVtYmVyIG9mIGpvYnMgYWxsb3dlZFxuICAgKiAgICAgdG8gcnVuIGNvbmN1cnJlbnRseVxuICAgKi9cbiAgY29uc3RydWN0b3IoY29uY3VycmVuY3kpIHtcbiAgICB0aGlzW2tEb25lXSA9ICgpID0+IHtcbiAgICAgIHRoaXMucGVuZGluZy0tO1xuICAgICAgdGhpc1trUnVuXSgpO1xuICAgIH07XG4gICAgdGhpcy5jb25jdXJyZW5jeSA9IGNvbmN1cnJlbmN5IHx8IEluZmluaXR5O1xuICAgIHRoaXMuam9icyA9IFtdO1xuICAgIHRoaXMucGVuZGluZyA9IDA7XG4gIH1cblxuICAvKipcbiAgICogQWRkcyBhIGpvYiB0byB0aGUgcXVldWUuXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGpvYiBUaGUgam9iIHRvIHJ1blxuICAgKiBAcHVibGljXG4gICAqL1xuICBhZGQoam9iKSB7XG4gICAgdGhpcy5qb2JzLnB1c2goam9iKTtcbiAgICB0aGlzW2tSdW5dKCk7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlcyBhIGpvYiBmcm9tIHRoZSBxdWV1ZSBhbmQgcnVucyBpdCBpZiBwb3NzaWJsZS5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICovXG4gIFtrUnVuXSgpIHtcbiAgICBpZiAodGhpcy5wZW5kaW5nID09PSB0aGlzLmNvbmN1cnJlbmN5KSByZXR1cm47XG5cbiAgICBpZiAodGhpcy5qb2JzLmxlbmd0aCkge1xuICAgICAgY29uc3Qgam9iID0gdGhpcy5qb2JzLnNoaWZ0KCk7XG5cbiAgICAgIHRoaXMucGVuZGluZysrO1xuICAgICAgam9iKHRoaXNba0RvbmVdKTtcbiAgICB9XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBMaW1pdGVyO1xuIl0sIm5hbWVzIjpbImtEb25lIiwiU3ltYm9sIiwia1J1biIsIkxpbWl0ZXIiLCJjb25zdHJ1Y3RvciIsImNvbmN1cnJlbmN5IiwicGVuZGluZyIsIkluZmluaXR5Iiwiam9icyIsImFkZCIsImpvYiIsInB1c2giLCJsZW5ndGgiLCJzaGlmdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/limiter.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js":
/*!*********************************************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js ***!
  \*********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst zlib = __webpack_require__(/*! zlib */ \"zlib\");\nconst bufferUtil = __webpack_require__(/*! ./buffer-util */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js\");\nconst Limiter = __webpack_require__(/*! ./limiter */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/limiter.js\");\nconst { kStatusCode, NOOP } = __webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\");\nconst TRAILER = Buffer.from([\n    0x00,\n    0x00,\n    0xff,\n    0xff\n]);\nconst kPerMessageDeflate = Symbol(\"permessage-deflate\");\nconst kTotalLength = Symbol(\"total-length\");\nconst kCallback = Symbol(\"callback\");\nconst kBuffers = Symbol(\"buffers\");\nconst kError = Symbol(\"error\");\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n/**\n * permessage-deflate implementation.\n */ class PerMessageDeflate {\n    /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */ constructor(options, isServer, maxPayload){\n        this._maxPayload = maxPayload | 0;\n        this._options = options || {};\n        this._threshold = this._options.threshold !== undefined ? this._options.threshold : 1024;\n        this._isServer = !!isServer;\n        this._deflate = null;\n        this._inflate = null;\n        this.params = null;\n        if (!zlibLimiter) {\n            const concurrency = this._options.concurrencyLimit !== undefined ? this._options.concurrencyLimit : 10;\n            zlibLimiter = new Limiter(concurrency);\n        }\n    }\n    /**\n   * @type {String}\n   */ static get extensionName() {\n        return \"permessage-deflate\";\n    }\n    /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */ offer() {\n        const params = {};\n        if (this._options.serverNoContextTakeover) {\n            params.server_no_context_takeover = true;\n        }\n        if (this._options.clientNoContextTakeover) {\n            params.client_no_context_takeover = true;\n        }\n        if (this._options.serverMaxWindowBits) {\n            params.server_max_window_bits = this._options.serverMaxWindowBits;\n        }\n        if (this._options.clientMaxWindowBits) {\n            params.client_max_window_bits = this._options.clientMaxWindowBits;\n        } else if (this._options.clientMaxWindowBits == null) {\n            params.client_max_window_bits = true;\n        }\n        return params;\n    }\n    /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */ accept(configurations) {\n        configurations = this.normalizeParams(configurations);\n        this.params = this._isServer ? this.acceptAsServer(configurations) : this.acceptAsClient(configurations);\n        return this.params;\n    }\n    /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */ cleanup() {\n        if (this._inflate) {\n            this._inflate.close();\n            this._inflate = null;\n        }\n        if (this._deflate) {\n            const callback = this._deflate[kCallback];\n            this._deflate.close();\n            this._deflate = null;\n            if (callback) {\n                callback(new Error(\"The deflate stream was closed while data was being processed\"));\n            }\n        }\n    }\n    /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */ acceptAsServer(offers) {\n        const opts = this._options;\n        const accepted = offers.find((params)=>{\n            if (opts.serverNoContextTakeover === false && params.server_no_context_takeover || params.server_max_window_bits && (opts.serverMaxWindowBits === false || typeof opts.serverMaxWindowBits === \"number\" && opts.serverMaxWindowBits > params.server_max_window_bits) || typeof opts.clientMaxWindowBits === \"number\" && !params.client_max_window_bits) {\n                return false;\n            }\n            return true;\n        });\n        if (!accepted) {\n            throw new Error(\"None of the extension offers can be accepted\");\n        }\n        if (opts.serverNoContextTakeover) {\n            accepted.server_no_context_takeover = true;\n        }\n        if (opts.clientNoContextTakeover) {\n            accepted.client_no_context_takeover = true;\n        }\n        if (typeof opts.serverMaxWindowBits === \"number\") {\n            accepted.server_max_window_bits = opts.serverMaxWindowBits;\n        }\n        if (typeof opts.clientMaxWindowBits === \"number\") {\n            accepted.client_max_window_bits = opts.clientMaxWindowBits;\n        } else if (accepted.client_max_window_bits === true || opts.clientMaxWindowBits === false) {\n            delete accepted.client_max_window_bits;\n        }\n        return accepted;\n    }\n    /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */ acceptAsClient(response) {\n        const params = response[0];\n        if (this._options.clientNoContextTakeover === false && params.client_no_context_takeover) {\n            throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n        }\n        if (!params.client_max_window_bits) {\n            if (typeof this._options.clientMaxWindowBits === \"number\") {\n                params.client_max_window_bits = this._options.clientMaxWindowBits;\n            }\n        } else if (this._options.clientMaxWindowBits === false || typeof this._options.clientMaxWindowBits === \"number\" && params.client_max_window_bits > this._options.clientMaxWindowBits) {\n            throw new Error('Unexpected or invalid parameter \"client_max_window_bits\"');\n        }\n        return params;\n    }\n    /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */ normalizeParams(configurations) {\n        configurations.forEach((params)=>{\n            Object.keys(params).forEach((key)=>{\n                let value = params[key];\n                if (value.length > 1) {\n                    throw new Error(`Parameter \"${key}\" must have only a single value`);\n                }\n                value = value[0];\n                if (key === \"client_max_window_bits\") {\n                    if (value !== true) {\n                        const num = +value;\n                        if (!Number.isInteger(num) || num < 8 || num > 15) {\n                            throw new TypeError(`Invalid value for parameter \"${key}\": ${value}`);\n                        }\n                        value = num;\n                    } else if (!this._isServer) {\n                        throw new TypeError(`Invalid value for parameter \"${key}\": ${value}`);\n                    }\n                } else if (key === \"server_max_window_bits\") {\n                    const num = +value;\n                    if (!Number.isInteger(num) || num < 8 || num > 15) {\n                        throw new TypeError(`Invalid value for parameter \"${key}\": ${value}`);\n                    }\n                    value = num;\n                } else if (key === \"client_no_context_takeover\" || key === \"server_no_context_takeover\") {\n                    if (value !== true) {\n                        throw new TypeError(`Invalid value for parameter \"${key}\": ${value}`);\n                    }\n                } else {\n                    throw new Error(`Unknown parameter \"${key}\"`);\n                }\n                params[key] = value;\n            });\n        });\n        return configurations;\n    }\n    /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */ decompress(data, fin, callback) {\n        zlibLimiter.add((done)=>{\n            this._decompress(data, fin, (err, result)=>{\n                done();\n                callback(err, result);\n            });\n        });\n    }\n    /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */ compress(data, fin, callback) {\n        zlibLimiter.add((done)=>{\n            this._compress(data, fin, (err, result)=>{\n                done();\n                callback(err, result);\n            });\n        });\n    }\n    /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */ _decompress(data, fin, callback) {\n        const endpoint = this._isServer ? \"client\" : \"server\";\n        if (!this._inflate) {\n            const key = `${endpoint}_max_window_bits`;\n            const windowBits = typeof this.params[key] !== \"number\" ? zlib.Z_DEFAULT_WINDOWBITS : this.params[key];\n            this._inflate = zlib.createInflateRaw({\n                ...this._options.zlibInflateOptions,\n                windowBits\n            });\n            this._inflate[kPerMessageDeflate] = this;\n            this._inflate[kTotalLength] = 0;\n            this._inflate[kBuffers] = [];\n            this._inflate.on(\"error\", inflateOnError);\n            this._inflate.on(\"data\", inflateOnData);\n        }\n        this._inflate[kCallback] = callback;\n        this._inflate.write(data);\n        if (fin) this._inflate.write(TRAILER);\n        this._inflate.flush(()=>{\n            const err = this._inflate[kError];\n            if (err) {\n                this._inflate.close();\n                this._inflate = null;\n                callback(err);\n                return;\n            }\n            const data = bufferUtil.concat(this._inflate[kBuffers], this._inflate[kTotalLength]);\n            if (this._inflate._readableState.endEmitted) {\n                this._inflate.close();\n                this._inflate = null;\n            } else {\n                this._inflate[kTotalLength] = 0;\n                this._inflate[kBuffers] = [];\n                if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n                    this._inflate.reset();\n                }\n            }\n            callback(null, data);\n        });\n    }\n    /**\n   * Compress data.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */ _compress(data, fin, callback) {\n        const endpoint = this._isServer ? \"server\" : \"client\";\n        if (!this._deflate) {\n            const key = `${endpoint}_max_window_bits`;\n            const windowBits = typeof this.params[key] !== \"number\" ? zlib.Z_DEFAULT_WINDOWBITS : this.params[key];\n            this._deflate = zlib.createDeflateRaw({\n                ...this._options.zlibDeflateOptions,\n                windowBits\n            });\n            this._deflate[kTotalLength] = 0;\n            this._deflate[kBuffers] = [];\n            //\n            // An `'error'` event is emitted, only on Node.js < 10.0.0, if the\n            // `zlib.DeflateRaw` instance is closed while data is being processed.\n            // This can happen if `PerMessageDeflate#cleanup()` is called at the wrong\n            // time due to an abnormal WebSocket closure.\n            //\n            this._deflate.on(\"error\", NOOP);\n            this._deflate.on(\"data\", deflateOnData);\n        }\n        this._deflate[kCallback] = callback;\n        this._deflate.write(data);\n        this._deflate.flush(zlib.Z_SYNC_FLUSH, ()=>{\n            if (!this._deflate) {\n                //\n                // The deflate stream was closed while data was being processed.\n                //\n                return;\n            }\n            let data = bufferUtil.concat(this._deflate[kBuffers], this._deflate[kTotalLength]);\n            if (fin) data = data.slice(0, data.length - 4);\n            //\n            // Ensure that the callback will not be called again in\n            // `PerMessageDeflate#cleanup()`.\n            //\n            this._deflate[kCallback] = null;\n            this._deflate[kTotalLength] = 0;\n            this._deflate[kBuffers] = [];\n            if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n                this._deflate.reset();\n            }\n            callback(null, data);\n        });\n    }\n}\nmodule.exports = PerMessageDeflate;\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */ function deflateOnData(chunk) {\n    this[kBuffers].push(chunk);\n    this[kTotalLength] += chunk.length;\n}\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */ function inflateOnData(chunk) {\n    this[kTotalLength] += chunk.length;\n    if (this[kPerMessageDeflate]._maxPayload < 1 || this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload) {\n        this[kBuffers].push(chunk);\n        return;\n    }\n    this[kError] = new RangeError(\"Max payload size exceeded\");\n    this[kError].code = \"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH\";\n    this[kError][kStatusCode] = 1009;\n    this.removeListener(\"data\", inflateOnData);\n    this.reset();\n}\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */ function inflateOnError(err) {\n    //\n    // There is no need to call `Zlib#close()` as the handle is automatically\n    // closed when an error is emitted.\n    //\n    this[kPerMessageDeflate]._inflate = null;\n    err[kStatusCode] = 1007;\n    this[kCallback](err);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/receiver.js":
/*!***********************************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/receiver.js ***!
  \***********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { Writable } = __webpack_require__(/*! stream */ \"stream\");\nconst PerMessageDeflate = __webpack_require__(/*! ./permessage-deflate */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js\");\nconst { BINARY_TYPES, EMPTY_BUFFER, kStatusCode, kWebSocket } = __webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\");\nconst { concat, toArrayBuffer, unmask } = __webpack_require__(/*! ./buffer-util */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js\");\nconst { isValidStatusCode, isValidUTF8 } = __webpack_require__(/*! ./validation */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/validation.js\");\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */ class Receiver extends Writable {\n    /**\n   * Creates a Receiver instance.\n   *\n   * @param {String} [binaryType=nodebuffer] The type for binary data\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Boolean} [isServer=false] Specifies whether to operate in client or\n   *     server mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */ constructor(binaryType, extensions, isServer, maxPayload){\n        super();\n        this._binaryType = binaryType || BINARY_TYPES[0];\n        this[kWebSocket] = undefined;\n        this._extensions = extensions || {};\n        this._isServer = !!isServer;\n        this._maxPayload = maxPayload | 0;\n        this._bufferedBytes = 0;\n        this._buffers = [];\n        this._compressed = false;\n        this._payloadLength = 0;\n        this._mask = undefined;\n        this._fragmented = 0;\n        this._masked = false;\n        this._fin = false;\n        this._opcode = 0;\n        this._totalPayloadLength = 0;\n        this._messageLength = 0;\n        this._fragments = [];\n        this._state = GET_INFO;\n        this._loop = false;\n    }\n    /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */ _write(chunk, encoding, cb) {\n        if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n        this._bufferedBytes += chunk.length;\n        this._buffers.push(chunk);\n        this.startLoop(cb);\n    }\n    /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */ consume(n) {\n        this._bufferedBytes -= n;\n        if (n === this._buffers[0].length) return this._buffers.shift();\n        if (n < this._buffers[0].length) {\n            const buf = this._buffers[0];\n            this._buffers[0] = buf.slice(n);\n            return buf.slice(0, n);\n        }\n        const dst = Buffer.allocUnsafe(n);\n        do {\n            const buf = this._buffers[0];\n            const offset = dst.length - n;\n            if (n >= buf.length) {\n                dst.set(this._buffers.shift(), offset);\n            } else {\n                dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n                this._buffers[0] = buf.slice(n);\n            }\n            n -= buf.length;\n        }while (n > 0);\n        return dst;\n    }\n    /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */ startLoop(cb) {\n        let err;\n        this._loop = true;\n        do {\n            switch(this._state){\n                case GET_INFO:\n                    err = this.getInfo();\n                    break;\n                case GET_PAYLOAD_LENGTH_16:\n                    err = this.getPayloadLength16();\n                    break;\n                case GET_PAYLOAD_LENGTH_64:\n                    err = this.getPayloadLength64();\n                    break;\n                case GET_MASK:\n                    this.getMask();\n                    break;\n                case GET_DATA:\n                    err = this.getData(cb);\n                    break;\n                default:\n                    // `INFLATING`\n                    this._loop = false;\n                    return;\n            }\n        }while (this._loop);\n        cb(err);\n    }\n    /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */ getInfo() {\n        if (this._bufferedBytes < 2) {\n            this._loop = false;\n            return;\n        }\n        const buf = this.consume(2);\n        if ((buf[0] & 0x30) !== 0x00) {\n            this._loop = false;\n            return error(RangeError, \"RSV2 and RSV3 must be clear\", true, 1002, \"WS_ERR_UNEXPECTED_RSV_2_3\");\n        }\n        const compressed = (buf[0] & 0x40) === 0x40;\n        if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n            this._loop = false;\n            return error(RangeError, \"RSV1 must be clear\", true, 1002, \"WS_ERR_UNEXPECTED_RSV_1\");\n        }\n        this._fin = (buf[0] & 0x80) === 0x80;\n        this._opcode = buf[0] & 0x0f;\n        this._payloadLength = buf[1] & 0x7f;\n        if (this._opcode === 0x00) {\n            if (compressed) {\n                this._loop = false;\n                return error(RangeError, \"RSV1 must be clear\", true, 1002, \"WS_ERR_UNEXPECTED_RSV_1\");\n            }\n            if (!this._fragmented) {\n                this._loop = false;\n                return error(RangeError, \"invalid opcode 0\", true, 1002, \"WS_ERR_INVALID_OPCODE\");\n            }\n            this._opcode = this._fragmented;\n        } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n            if (this._fragmented) {\n                this._loop = false;\n                return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002, \"WS_ERR_INVALID_OPCODE\");\n            }\n            this._compressed = compressed;\n        } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n            if (!this._fin) {\n                this._loop = false;\n                return error(RangeError, \"FIN must be set\", true, 1002, \"WS_ERR_EXPECTED_FIN\");\n            }\n            if (compressed) {\n                this._loop = false;\n                return error(RangeError, \"RSV1 must be clear\", true, 1002, \"WS_ERR_UNEXPECTED_RSV_1\");\n            }\n            if (this._payloadLength > 0x7d) {\n                this._loop = false;\n                return error(RangeError, `invalid payload length ${this._payloadLength}`, true, 1002, \"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH\");\n            }\n        } else {\n            this._loop = false;\n            return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002, \"WS_ERR_INVALID_OPCODE\");\n        }\n        if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n        this._masked = (buf[1] & 0x80) === 0x80;\n        if (this._isServer) {\n            if (!this._masked) {\n                this._loop = false;\n                return error(RangeError, \"MASK must be set\", true, 1002, \"WS_ERR_EXPECTED_MASK\");\n            }\n        } else if (this._masked) {\n            this._loop = false;\n            return error(RangeError, \"MASK must be clear\", true, 1002, \"WS_ERR_UNEXPECTED_MASK\");\n        }\n        if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n        else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n        else return this.haveLength();\n    }\n    /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */ getPayloadLength16() {\n        if (this._bufferedBytes < 2) {\n            this._loop = false;\n            return;\n        }\n        this._payloadLength = this.consume(2).readUInt16BE(0);\n        return this.haveLength();\n    }\n    /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */ getPayloadLength64() {\n        if (this._bufferedBytes < 8) {\n            this._loop = false;\n            return;\n        }\n        const buf = this.consume(8);\n        const num = buf.readUInt32BE(0);\n        //\n        // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n        // if payload length is greater than this number.\n        //\n        if (num > Math.pow(2, 53 - 32) - 1) {\n            this._loop = false;\n            return error(RangeError, \"Unsupported WebSocket frame: payload length > 2^53 - 1\", false, 1009, \"WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH\");\n        }\n        this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n        return this.haveLength();\n    }\n    /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */ haveLength() {\n        if (this._payloadLength && this._opcode < 0x08) {\n            this._totalPayloadLength += this._payloadLength;\n            if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n                this._loop = false;\n                return error(RangeError, \"Max payload size exceeded\", false, 1009, \"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH\");\n            }\n        }\n        if (this._masked) this._state = GET_MASK;\n        else this._state = GET_DATA;\n    }\n    /**\n   * Reads mask bytes.\n   *\n   * @private\n   */ getMask() {\n        if (this._bufferedBytes < 4) {\n            this._loop = false;\n            return;\n        }\n        this._mask = this.consume(4);\n        this._state = GET_DATA;\n    }\n    /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */ getData(cb) {\n        let data = EMPTY_BUFFER;\n        if (this._payloadLength) {\n            if (this._bufferedBytes < this._payloadLength) {\n                this._loop = false;\n                return;\n            }\n            data = this.consume(this._payloadLength);\n            if (this._masked) unmask(data, this._mask);\n        }\n        if (this._opcode > 0x07) return this.controlMessage(data);\n        if (this._compressed) {\n            this._state = INFLATING;\n            this.decompress(data, cb);\n            return;\n        }\n        if (data.length) {\n            //\n            // This message is not compressed so its lenght is the sum of the payload\n            // length of all fragments.\n            //\n            this._messageLength = this._totalPayloadLength;\n            this._fragments.push(data);\n        }\n        return this.dataMessage();\n    }\n    /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */ decompress(data, cb) {\n        const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n        perMessageDeflate.decompress(data, this._fin, (err, buf)=>{\n            if (err) return cb(err);\n            if (buf.length) {\n                this._messageLength += buf.length;\n                if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n                    return cb(error(RangeError, \"Max payload size exceeded\", false, 1009, \"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH\"));\n                }\n                this._fragments.push(buf);\n            }\n            const er = this.dataMessage();\n            if (er) return cb(er);\n            this.startLoop(cb);\n        });\n    }\n    /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */ dataMessage() {\n        if (this._fin) {\n            const messageLength = this._messageLength;\n            const fragments = this._fragments;\n            this._totalPayloadLength = 0;\n            this._messageLength = 0;\n            this._fragmented = 0;\n            this._fragments = [];\n            if (this._opcode === 2) {\n                let data;\n                if (this._binaryType === \"nodebuffer\") {\n                    data = concat(fragments, messageLength);\n                } else if (this._binaryType === \"arraybuffer\") {\n                    data = toArrayBuffer(concat(fragments, messageLength));\n                } else {\n                    data = fragments;\n                }\n                this.emit(\"message\", data);\n            } else {\n                const buf = concat(fragments, messageLength);\n                if (!isValidUTF8(buf)) {\n                    this._loop = false;\n                    return error(Error, \"invalid UTF-8 sequence\", true, 1007, \"WS_ERR_INVALID_UTF8\");\n                }\n                this.emit(\"message\", buf.toString());\n            }\n        }\n        this._state = GET_INFO;\n    }\n    /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */ controlMessage(data) {\n        if (this._opcode === 0x08) {\n            this._loop = false;\n            if (data.length === 0) {\n                this.emit(\"conclude\", 1005, \"\");\n                this.end();\n            } else if (data.length === 1) {\n                return error(RangeError, \"invalid payload length 1\", true, 1002, \"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH\");\n            } else {\n                const code = data.readUInt16BE(0);\n                if (!isValidStatusCode(code)) {\n                    return error(RangeError, `invalid status code ${code}`, true, 1002, \"WS_ERR_INVALID_CLOSE_CODE\");\n                }\n                const buf = data.slice(2);\n                if (!isValidUTF8(buf)) {\n                    return error(Error, \"invalid UTF-8 sequence\", true, 1007, \"WS_ERR_INVALID_UTF8\");\n                }\n                this.emit(\"conclude\", code, buf.toString());\n                this.end();\n            }\n        } else if (this._opcode === 0x09) {\n            this.emit(\"ping\", data);\n        } else {\n            this.emit(\"pong\", data);\n        }\n        this._state = GET_INFO;\n    }\n}\nmodule.exports = Receiver;\n/**\n * Builds an error object.\n *\n * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @param {String} errorCode The exposed error code\n * @return {(Error|RangeError)} The error\n * @private\n */ function error(ErrorCtor, message, prefix, statusCode, errorCode) {\n    const err = new ErrorCtor(prefix ? `Invalid WebSocket frame: ${message}` : message);\n    Error.captureStackTrace(err, error);\n    err.code = errorCode;\n    err[kStatusCode] = statusCode;\n    return err;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/receiver.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/sender.js":
/*!*********************************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/sender.js ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls$\" }] */ \nconst net = __webpack_require__(/*! net */ \"net\");\nconst tls = __webpack_require__(/*! tls */ \"tls\");\nconst { randomFillSync } = __webpack_require__(/*! crypto */ \"crypto\");\nconst PerMessageDeflate = __webpack_require__(/*! ./permessage-deflate */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js\");\nconst { EMPTY_BUFFER } = __webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\");\nconst { isValidStatusCode } = __webpack_require__(/*! ./validation */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/validation.js\");\nconst { mask: applyMask, toBuffer } = __webpack_require__(/*! ./buffer-util */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js\");\nconst mask = Buffer.alloc(4);\n/**\n * HyBi Sender implementation.\n */ class Sender {\n    /**\n   * Creates a Sender instance.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   */ constructor(socket, extensions){\n        this._extensions = extensions || {};\n        this._socket = socket;\n        this._firstFragment = true;\n        this._compress = false;\n        this._bufferedBytes = 0;\n        this._deflating = false;\n        this._queue = [];\n    }\n    /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {Buffer} data The data to frame\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {Buffer[]} The framed data as a list of `Buffer` instances\n   * @public\n   */ static frame(data, options) {\n        const merge = options.mask && options.readOnly;\n        let offset = options.mask ? 6 : 2;\n        let payloadLength = data.length;\n        if (data.length >= 65536) {\n            offset += 8;\n            payloadLength = 127;\n        } else if (data.length > 125) {\n            offset += 2;\n            payloadLength = 126;\n        }\n        const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);\n        target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n        if (options.rsv1) target[0] |= 0x40;\n        target[1] = payloadLength;\n        if (payloadLength === 126) {\n            target.writeUInt16BE(data.length, 2);\n        } else if (payloadLength === 127) {\n            target.writeUInt32BE(0, 2);\n            target.writeUInt32BE(data.length, 6);\n        }\n        if (!options.mask) return [\n            target,\n            data\n        ];\n        randomFillSync(mask, 0, 4);\n        target[1] |= 0x80;\n        target[offset - 4] = mask[0];\n        target[offset - 3] = mask[1];\n        target[offset - 2] = mask[2];\n        target[offset - 1] = mask[3];\n        if (merge) {\n            applyMask(data, mask, target, offset, data.length);\n            return [\n                target\n            ];\n        }\n        applyMask(data, mask, data, 0, data.length);\n        return [\n            target,\n            data\n        ];\n    }\n    /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {String} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */ close(code, data, mask, cb) {\n        let buf;\n        if (code === undefined) {\n            buf = EMPTY_BUFFER;\n        } else if (typeof code !== \"number\" || !isValidStatusCode(code)) {\n            throw new TypeError(\"First argument must be a valid error code number\");\n        } else if (data === undefined || data === \"\") {\n            buf = Buffer.allocUnsafe(2);\n            buf.writeUInt16BE(code, 0);\n        } else {\n            const length = Buffer.byteLength(data);\n            if (length > 123) {\n                throw new RangeError(\"The message must not be greater than 123 bytes\");\n            }\n            buf = Buffer.allocUnsafe(2 + length);\n            buf.writeUInt16BE(code, 0);\n            buf.write(data, 2);\n        }\n        if (this._deflating) {\n            this.enqueue([\n                this.doClose,\n                buf,\n                mask,\n                cb\n            ]);\n        } else {\n            this.doClose(buf, mask, cb);\n        }\n    }\n    /**\n   * Frames and sends a close message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @private\n   */ doClose(data, mask, cb) {\n        this.sendFrame(Sender.frame(data, {\n            fin: true,\n            rsv1: false,\n            opcode: 0x08,\n            mask,\n            readOnly: false\n        }), cb);\n    }\n    /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */ ping(data, mask, cb) {\n        const buf = toBuffer(data);\n        if (buf.length > 125) {\n            throw new RangeError(\"The data size must not be greater than 125 bytes\");\n        }\n        if (this._deflating) {\n            this.enqueue([\n                this.doPing,\n                buf,\n                mask,\n                toBuffer.readOnly,\n                cb\n            ]);\n        } else {\n            this.doPing(buf, mask, toBuffer.readOnly, cb);\n        }\n    }\n    /**\n   * Frames and sends a ping message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Boolean} [readOnly=false] Specifies whether `data` can be modified\n   * @param {Function} [cb] Callback\n   * @private\n   */ doPing(data, mask, readOnly, cb) {\n        this.sendFrame(Sender.frame(data, {\n            fin: true,\n            rsv1: false,\n            opcode: 0x09,\n            mask,\n            readOnly\n        }), cb);\n    }\n    /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */ pong(data, mask, cb) {\n        const buf = toBuffer(data);\n        if (buf.length > 125) {\n            throw new RangeError(\"The data size must not be greater than 125 bytes\");\n        }\n        if (this._deflating) {\n            this.enqueue([\n                this.doPong,\n                buf,\n                mask,\n                toBuffer.readOnly,\n                cb\n            ]);\n        } else {\n            this.doPong(buf, mask, toBuffer.readOnly, cb);\n        }\n    }\n    /**\n   * Frames and sends a pong message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Boolean} [readOnly=false] Specifies whether `data` can be modified\n   * @param {Function} [cb] Callback\n   * @private\n   */ doPong(data, mask, readOnly, cb) {\n        this.sendFrame(Sender.frame(data, {\n            fin: true,\n            rsv1: false,\n            opcode: 0x0a,\n            mask,\n            readOnly\n        }), cb);\n    }\n    /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */ send(data, options, cb) {\n        const buf = toBuffer(data);\n        const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n        let opcode = options.binary ? 2 : 1;\n        let rsv1 = options.compress;\n        if (this._firstFragment) {\n            this._firstFragment = false;\n            if (rsv1 && perMessageDeflate) {\n                rsv1 = buf.length >= perMessageDeflate._threshold;\n            }\n            this._compress = rsv1;\n        } else {\n            rsv1 = false;\n            opcode = 0;\n        }\n        if (options.fin) this._firstFragment = true;\n        if (perMessageDeflate) {\n            const opts = {\n                fin: options.fin,\n                rsv1,\n                opcode,\n                mask: options.mask,\n                readOnly: toBuffer.readOnly\n            };\n            if (this._deflating) {\n                this.enqueue([\n                    this.dispatch,\n                    buf,\n                    this._compress,\n                    opts,\n                    cb\n                ]);\n            } else {\n                this.dispatch(buf, this._compress, opts, cb);\n            }\n        } else {\n            this.sendFrame(Sender.frame(buf, {\n                fin: options.fin,\n                rsv1: false,\n                opcode,\n                mask: options.mask,\n                readOnly: toBuffer.readOnly\n            }), cb);\n        }\n    }\n    /**\n   * Dispatches a data message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */ dispatch(data, compress, options, cb) {\n        if (!compress) {\n            this.sendFrame(Sender.frame(data, options), cb);\n            return;\n        }\n        const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n        this._bufferedBytes += data.length;\n        this._deflating = true;\n        perMessageDeflate.compress(data, options.fin, (_, buf)=>{\n            if (this._socket.destroyed) {\n                const err = new Error(\"The socket was closed while data was being compressed\");\n                if (typeof cb === \"function\") cb(err);\n                for(let i = 0; i < this._queue.length; i++){\n                    const callback = this._queue[i][4];\n                    if (typeof callback === \"function\") callback(err);\n                }\n                return;\n            }\n            this._bufferedBytes -= data.length;\n            this._deflating = false;\n            options.readOnly = false;\n            this.sendFrame(Sender.frame(buf, options), cb);\n            this.dequeue();\n        });\n    }\n    /**\n   * Executes queued send operations.\n   *\n   * @private\n   */ dequeue() {\n        while(!this._deflating && this._queue.length){\n            const params = this._queue.shift();\n            this._bufferedBytes -= params[1].length;\n            Reflect.apply(params[0], this, params.slice(1));\n        }\n    }\n    /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */ enqueue(params) {\n        this._bufferedBytes += params[1].length;\n        this._queue.push(params);\n    }\n    /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */ sendFrame(list, cb) {\n        if (list.length === 2) {\n            this._socket.cork();\n            this._socket.write(list[0]);\n            this._socket.write(list[1], cb);\n            this._socket.uncork();\n        } else {\n            this._socket.write(list[0], cb);\n        }\n    }\n}\nmodule.exports = Sender;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/sender.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/stream.js":
/*!*********************************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/stream.js ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { Duplex } = __webpack_require__(/*! stream */ \"stream\");\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */ function emitClose(stream) {\n    stream.emit(\"close\");\n}\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */ function duplexOnEnd() {\n    if (!this.destroyed && this._writableState.finished) {\n        this.destroy();\n    }\n}\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */ function duplexOnError(err) {\n    this.removeListener(\"error\", duplexOnError);\n    this.destroy();\n    if (this.listenerCount(\"error\") === 0) {\n        // Do not suppress the throwing behavior.\n        this.emit(\"error\", err);\n    }\n}\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */ function createWebSocketStream(ws, options) {\n    let resumeOnReceiverDrain = true;\n    let terminateOnDestroy = true;\n    function receiverOnDrain() {\n        if (resumeOnReceiverDrain) ws._socket.resume();\n    }\n    if (ws.readyState === ws.CONNECTING) {\n        ws.once(\"open\", function open() {\n            ws._receiver.removeAllListeners(\"drain\");\n            ws._receiver.on(\"drain\", receiverOnDrain);\n        });\n    } else {\n        ws._receiver.removeAllListeners(\"drain\");\n        ws._receiver.on(\"drain\", receiverOnDrain);\n    }\n    const duplex = new Duplex({\n        ...options,\n        autoDestroy: false,\n        emitClose: false,\n        objectMode: false,\n        writableObjectMode: false\n    });\n    ws.on(\"message\", function message(msg) {\n        if (!duplex.push(msg)) {\n            resumeOnReceiverDrain = false;\n            ws._socket.pause();\n        }\n    });\n    ws.once(\"error\", function error(err) {\n        if (duplex.destroyed) return;\n        // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n        //\n        // - If the `'error'` event is emitted before the `'open'` event, then\n        //   `ws.terminate()` is a noop as no socket is assigned.\n        // - Otherwise, the error is re-emitted by the listener of the `'error'`\n        //   event of the `Receiver` object. The listener already closes the\n        //   connection by calling `ws.close()`. This allows a close frame to be\n        //   sent to the other peer. If `ws.terminate()` is called right after this,\n        //   then the close frame might not be sent.\n        terminateOnDestroy = false;\n        duplex.destroy(err);\n    });\n    ws.once(\"close\", function close() {\n        if (duplex.destroyed) return;\n        duplex.push(null);\n    });\n    duplex._destroy = function(err, callback) {\n        if (ws.readyState === ws.CLOSED) {\n            callback(err);\n            process.nextTick(emitClose, duplex);\n            return;\n        }\n        let called = false;\n        ws.once(\"error\", function error(err) {\n            called = true;\n            callback(err);\n        });\n        ws.once(\"close\", function close() {\n            if (!called) callback(err);\n            process.nextTick(emitClose, duplex);\n        });\n        if (terminateOnDestroy) ws.terminate();\n    };\n    duplex._final = function(callback) {\n        if (ws.readyState === ws.CONNECTING) {\n            ws.once(\"open\", function open() {\n                duplex._final(callback);\n            });\n            return;\n        }\n        // If the value of the `_socket` property is `null` it means that `ws` is a\n        // client websocket and the handshake failed. In fact, when this happens, a\n        // socket is never assigned to the websocket. Wait for the `'error'` event\n        // that will be emitted by the websocket.\n        if (ws._socket === null) return;\n        if (ws._socket._writableState.finished) {\n            callback();\n            if (duplex._readableState.endEmitted) duplex.destroy();\n        } else {\n            ws._socket.once(\"finish\", function finish() {\n                // `duplex` is not destroyed here because the `'end'` event will be\n                // emitted on `duplex` after this `'finish'` event. The EOF signaling\n                // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n                callback();\n            });\n            ws.close();\n        }\n    };\n    duplex._read = function() {\n        if ((ws.readyState === ws.OPEN || ws.readyState === ws.CLOSING) && !resumeOnReceiverDrain) {\n            resumeOnReceiverDrain = true;\n            if (!ws._receiver._writableState.needDrain) ws._socket.resume();\n        }\n    };\n    duplex._write = function(chunk, encoding, callback) {\n        if (ws.readyState === ws.CONNECTING) {\n            ws.once(\"open\", function open() {\n                duplex._write(chunk, encoding, callback);\n            });\n            return;\n        }\n        ws.send(chunk, callback);\n    };\n    duplex.on(\"end\", duplexOnEnd);\n    duplex.on(\"error\", duplexOnError);\n    return duplex;\n}\nmodule.exports = createWebSocketStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/stream.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/validation.js":
/*!*************************************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/validation.js ***!
  \*************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */ function isValidStatusCode(code) {\n    return code >= 1000 && code <= 1014 && code !== 1004 && code !== 1005 && code !== 1006 || code >= 3000 && code <= 4999;\n}\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */ function _isValidUTF8(buf) {\n    const len = buf.length;\n    let i = 0;\n    while(i < len){\n        if ((buf[i] & 0x80) === 0) {\n            // 0xxxxxxx\n            i++;\n        } else if ((buf[i] & 0xe0) === 0xc0) {\n            // 110xxxxx 10xxxxxx\n            if (i + 1 === len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i] & 0xfe) === 0xc0 // Overlong\n            ) {\n                return false;\n            }\n            i += 2;\n        } else if ((buf[i] & 0xf0) === 0xe0) {\n            // 1110xxxx 10xxxxxx 10xxxxxx\n            if (i + 2 >= len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i + 2] & 0xc0) !== 0x80 || buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80 || // Overlong\n            buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0 // Surrogate (U+D800 - U+DFFF)\n            ) {\n                return false;\n            }\n            i += 3;\n        } else if ((buf[i] & 0xf8) === 0xf0) {\n            // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n            if (i + 3 >= len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i + 2] & 0xc0) !== 0x80 || (buf[i + 3] & 0xc0) !== 0x80 || buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80 || // Overlong\n            buf[i] === 0xf4 && buf[i + 1] > 0x8f || buf[i] > 0xf4 // > U+10FFFF\n            ) {\n                return false;\n            }\n            i += 4;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}\ntry {\n    let isValidUTF8 = __webpack_require__(/*! utf-8-validate */ \"(ssr)/../../node_modules/utf-8-validate/index.js\");\n    /* istanbul ignore if */ if (typeof isValidUTF8 === \"object\") {\n        isValidUTF8 = isValidUTF8.Validation.isValidUTF8; // utf-8-validate@<3.0.0\n    }\n    module.exports = {\n        isValidStatusCode,\n        isValidUTF8 (buf) {\n            return buf.length < 150 ? _isValidUTF8(buf) : isValidUTF8(buf);\n        }\n    };\n} catch (e) /* istanbul ignore next */ {\n    module.exports = {\n        isValidStatusCode,\n        isValidUTF8: _isValidUTF8\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9ub2RlX21vZHVsZXMvd3MvbGliL3ZhbGlkYXRpb24uanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTs7Ozs7O0NBTUMsR0FDRCxTQUFTQSxrQkFBa0JDLElBQUk7SUFDN0IsT0FDRSxRQUFTLFFBQ1BBLFFBQVEsUUFDUkEsU0FBUyxRQUNUQSxTQUFTLFFBQ1RBLFNBQVMsUUFDVkEsUUFBUSxRQUFRQSxRQUFRO0FBRTdCO0FBRUE7Ozs7Ozs7O0NBUUMsR0FDRCxTQUFTQyxhQUFhQyxHQUFHO0lBQ3ZCLE1BQU1DLE1BQU1ELElBQUlFLE1BQU07SUFDdEIsSUFBSUMsSUFBSTtJQUVSLE1BQU9BLElBQUlGLElBQUs7UUFDZCxJQUFJLENBQUNELEdBQUcsQ0FBQ0csRUFBRSxHQUFHLElBQUcsTUFBTyxHQUFHO1lBQ3pCLFdBQVc7WUFDWEE7UUFDRixPQUFPLElBQUksQ0FBQ0gsR0FBRyxDQUFDRyxFQUFFLEdBQUcsSUFBRyxNQUFPLE1BQU07WUFDbkMsb0JBQW9CO1lBQ3BCLElBQ0VBLElBQUksTUFBTUYsT0FDVixDQUFDRCxHQUFHLENBQUNHLElBQUksRUFBRSxHQUFHLElBQUcsTUFBTyxRQUN4QixDQUFDSCxHQUFHLENBQUNHLEVBQUUsR0FBRyxJQUFHLE1BQU8sS0FBSyxXQUFXO2NBQ3BDO2dCQUNBLE9BQU87WUFDVDtZQUVBQSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUNILEdBQUcsQ0FBQ0csRUFBRSxHQUFHLElBQUcsTUFBTyxNQUFNO1lBQ25DLDZCQUE2QjtZQUM3QixJQUNFQSxJQUFJLEtBQUtGLE9BQ1QsQ0FBQ0QsR0FBRyxDQUFDRyxJQUFJLEVBQUUsR0FBRyxJQUFHLE1BQU8sUUFDeEIsQ0FBQ0gsR0FBRyxDQUFDRyxJQUFJLEVBQUUsR0FBRyxJQUFHLE1BQU8sUUFDdkJILEdBQUcsQ0FBQ0csRUFBRSxLQUFLLFFBQVEsQ0FBQ0gsR0FBRyxDQUFDRyxJQUFJLEVBQUUsR0FBRyxJQUFHLE1BQU8sUUFBUyxXQUFXO1lBQy9ESCxHQUFHLENBQUNHLEVBQUUsS0FBSyxRQUFRLENBQUNILEdBQUcsQ0FBQ0csSUFBSSxFQUFFLEdBQUcsSUFBRyxNQUFPLEtBQU0sOEJBQThCO2NBQ2hGO2dCQUNBLE9BQU87WUFDVDtZQUVBQSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUNILEdBQUcsQ0FBQ0csRUFBRSxHQUFHLElBQUcsTUFBTyxNQUFNO1lBQ25DLHNDQUFzQztZQUN0QyxJQUNFQSxJQUFJLEtBQUtGLE9BQ1QsQ0FBQ0QsR0FBRyxDQUFDRyxJQUFJLEVBQUUsR0FBRyxJQUFHLE1BQU8sUUFDeEIsQ0FBQ0gsR0FBRyxDQUFDRyxJQUFJLEVBQUUsR0FBRyxJQUFHLE1BQU8sUUFDeEIsQ0FBQ0gsR0FBRyxDQUFDRyxJQUFJLEVBQUUsR0FBRyxJQUFHLE1BQU8sUUFDdkJILEdBQUcsQ0FBQ0csRUFBRSxLQUFLLFFBQVEsQ0FBQ0gsR0FBRyxDQUFDRyxJQUFJLEVBQUUsR0FBRyxJQUFHLE1BQU8sUUFBUyxXQUFXO1lBQy9ESCxHQUFHLENBQUNHLEVBQUUsS0FBSyxRQUFRSCxHQUFHLENBQUNHLElBQUksRUFBRSxHQUFHLFFBQ2pDSCxHQUFHLENBQUNHLEVBQUUsR0FBRyxLQUFLLGFBQWE7Y0FDM0I7Z0JBQ0EsT0FBTztZQUNUO1lBRUFBLEtBQUs7UUFDUCxPQUFPO1lBQ0wsT0FBTztRQUNUO0lBQ0Y7SUFFQSxPQUFPO0FBQ1Q7QUFFQSxJQUFJO0lBQ0YsSUFBSUMsY0FBY0MsbUJBQU9BLENBQUM7SUFFMUIsc0JBQXNCLEdBQ3RCLElBQUksT0FBT0QsZ0JBQWdCLFVBQVU7UUFDbkNBLGNBQWNBLFlBQVlFLFVBQVUsQ0FBQ0YsV0FBVyxFQUFFLHdCQUF3QjtJQUM1RTtJQUVBRyxPQUFPQyxPQUFPLEdBQUc7UUFDZlg7UUFDQU8sYUFBWUosR0FBRztZQUNiLE9BQU9BLElBQUlFLE1BQU0sR0FBRyxNQUFNSCxhQUFhQyxPQUFPSSxZQUFZSjtRQUM1RDtJQUNGO0FBQ0YsRUFBRSxPQUFPUyxHQUFHLHdCQUF3QixHQUFHO0lBQ3JDRixPQUFPQyxPQUFPLEdBQUc7UUFDZlg7UUFDQU8sYUFBYUw7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXdzLWNvbm5lY3Rpb24vbm9kZV9tb2R1bGVzL3dzL2xpYi92YWxpZGF0aW9uLmpzP2E0OTgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENoZWNrcyBpZiBhIHN0YXR1cyBjb2RlIGlzIGFsbG93ZWQgaW4gYSBjbG9zZSBmcmFtZS5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gY29kZSBUaGUgc3RhdHVzIGNvZGVcbiAqIEByZXR1cm4ge0Jvb2xlYW59IGB0cnVlYCBpZiB0aGUgc3RhdHVzIGNvZGUgaXMgdmFsaWQsIGVsc2UgYGZhbHNlYFxuICogQHB1YmxpY1xuICovXG5mdW5jdGlvbiBpc1ZhbGlkU3RhdHVzQ29kZShjb2RlKSB7XG4gIHJldHVybiAoXG4gICAgKGNvZGUgPj0gMTAwMCAmJlxuICAgICAgY29kZSA8PSAxMDE0ICYmXG4gICAgICBjb2RlICE9PSAxMDA0ICYmXG4gICAgICBjb2RlICE9PSAxMDA1ICYmXG4gICAgICBjb2RlICE9PSAxMDA2KSB8fFxuICAgIChjb2RlID49IDMwMDAgJiYgY29kZSA8PSA0OTk5KVxuICApO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBhIGdpdmVuIGJ1ZmZlciBjb250YWlucyBvbmx5IGNvcnJlY3QgVVRGLTguXG4gKiBQb3J0ZWQgZnJvbSBodHRwczovL3d3dy5jbC5jYW0uYWMudWsvJTdFbWdrMjUvdWNzL3V0ZjhfY2hlY2suYyBieVxuICogTWFya3VzIEt1aG4uXG4gKlxuICogQHBhcmFtIHtCdWZmZXJ9IGJ1ZiBUaGUgYnVmZmVyIHRvIGNoZWNrXG4gKiBAcmV0dXJuIHtCb29sZWFufSBgdHJ1ZWAgaWYgYGJ1ZmAgY29udGFpbnMgb25seSBjb3JyZWN0IFVURi04LCBlbHNlIGBmYWxzZWBcbiAqIEBwdWJsaWNcbiAqL1xuZnVuY3Rpb24gX2lzVmFsaWRVVEY4KGJ1Zikge1xuICBjb25zdCBsZW4gPSBidWYubGVuZ3RoO1xuICBsZXQgaSA9IDA7XG5cbiAgd2hpbGUgKGkgPCBsZW4pIHtcbiAgICBpZiAoKGJ1ZltpXSAmIDB4ODApID09PSAwKSB7XG4gICAgICAvLyAweHh4eHh4eFxuICAgICAgaSsrO1xuICAgIH0gZWxzZSBpZiAoKGJ1ZltpXSAmIDB4ZTApID09PSAweGMwKSB7XG4gICAgICAvLyAxMTB4eHh4eCAxMHh4eHh4eFxuICAgICAgaWYgKFxuICAgICAgICBpICsgMSA9PT0gbGVuIHx8XG4gICAgICAgIChidWZbaSArIDFdICYgMHhjMCkgIT09IDB4ODAgfHxcbiAgICAgICAgKGJ1ZltpXSAmIDB4ZmUpID09PSAweGMwIC8vIE92ZXJsb25nXG4gICAgICApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBpICs9IDI7XG4gICAgfSBlbHNlIGlmICgoYnVmW2ldICYgMHhmMCkgPT09IDB4ZTApIHtcbiAgICAgIC8vIDExMTB4eHh4IDEweHh4eHh4IDEweHh4eHh4XG4gICAgICBpZiAoXG4gICAgICAgIGkgKyAyID49IGxlbiB8fFxuICAgICAgICAoYnVmW2kgKyAxXSAmIDB4YzApICE9PSAweDgwIHx8XG4gICAgICAgIChidWZbaSArIDJdICYgMHhjMCkgIT09IDB4ODAgfHxcbiAgICAgICAgKGJ1ZltpXSA9PT0gMHhlMCAmJiAoYnVmW2kgKyAxXSAmIDB4ZTApID09PSAweDgwKSB8fCAvLyBPdmVybG9uZ1xuICAgICAgICAoYnVmW2ldID09PSAweGVkICYmIChidWZbaSArIDFdICYgMHhlMCkgPT09IDB4YTApIC8vIFN1cnJvZ2F0ZSAoVStEODAwIC0gVStERkZGKVxuICAgICAgKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgaSArPSAzO1xuICAgIH0gZWxzZSBpZiAoKGJ1ZltpXSAmIDB4ZjgpID09PSAweGYwKSB7XG4gICAgICAvLyAxMTExMHh4eCAxMHh4eHh4eCAxMHh4eHh4eCAxMHh4eHh4eFxuICAgICAgaWYgKFxuICAgICAgICBpICsgMyA+PSBsZW4gfHxcbiAgICAgICAgKGJ1ZltpICsgMV0gJiAweGMwKSAhPT0gMHg4MCB8fFxuICAgICAgICAoYnVmW2kgKyAyXSAmIDB4YzApICE9PSAweDgwIHx8XG4gICAgICAgIChidWZbaSArIDNdICYgMHhjMCkgIT09IDB4ODAgfHxcbiAgICAgICAgKGJ1ZltpXSA9PT0gMHhmMCAmJiAoYnVmW2kgKyAxXSAmIDB4ZjApID09PSAweDgwKSB8fCAvLyBPdmVybG9uZ1xuICAgICAgICAoYnVmW2ldID09PSAweGY0ICYmIGJ1ZltpICsgMV0gPiAweDhmKSB8fFxuICAgICAgICBidWZbaV0gPiAweGY0IC8vID4gVSsxMEZGRkZcbiAgICAgICkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGkgKz0gNDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG50cnkge1xuICBsZXQgaXNWYWxpZFVURjggPSByZXF1aXJlKCd1dGYtOC12YWxpZGF0ZScpO1xuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICBpZiAodHlwZW9mIGlzVmFsaWRVVEY4ID09PSAnb2JqZWN0Jykge1xuICAgIGlzVmFsaWRVVEY4ID0gaXNWYWxpZFVURjguVmFsaWRhdGlvbi5pc1ZhbGlkVVRGODsgLy8gdXRmLTgtdmFsaWRhdGVAPDMuMC4wXG4gIH1cblxuICBtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBpc1ZhbGlkU3RhdHVzQ29kZSxcbiAgICBpc1ZhbGlkVVRGOChidWYpIHtcbiAgICAgIHJldHVybiBidWYubGVuZ3RoIDwgMTUwID8gX2lzVmFsaWRVVEY4KGJ1ZikgOiBpc1ZhbGlkVVRGOChidWYpO1xuICAgIH1cbiAgfTtcbn0gY2F0Y2ggKGUpIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgaXNWYWxpZFN0YXR1c0NvZGUsXG4gICAgaXNWYWxpZFVURjg6IF9pc1ZhbGlkVVRGOFxuICB9O1xufVxuIl0sIm5hbWVzIjpbImlzVmFsaWRTdGF0dXNDb2RlIiwiY29kZSIsIl9pc1ZhbGlkVVRGOCIsImJ1ZiIsImxlbiIsImxlbmd0aCIsImkiLCJpc1ZhbGlkVVRGOCIsInJlcXVpcmUiLCJWYWxpZGF0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyIsImUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/validation.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket-server.js":
/*!*******************************************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket-server.js ***!
  \*******************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls|https$\" }] */ \nconst EventEmitter = __webpack_require__(/*! events */ \"events\");\nconst http = __webpack_require__(/*! http */ \"http\");\nconst https = __webpack_require__(/*! https */ \"https\");\nconst net = __webpack_require__(/*! net */ \"net\");\nconst tls = __webpack_require__(/*! tls */ \"tls\");\nconst { createHash } = __webpack_require__(/*! crypto */ \"crypto\");\nconst PerMessageDeflate = __webpack_require__(/*! ./permessage-deflate */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js\");\nconst WebSocket = __webpack_require__(/*! ./websocket */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket.js\");\nconst { format, parse } = __webpack_require__(/*! ./extension */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/extension.js\");\nconst { GUID, kWebSocket } = __webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\");\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */ class WebSocketServer extends EventEmitter {\n    /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [callback] A listener for the `listening` event\n   */ constructor(options, callback){\n        super();\n        options = {\n            maxPayload: 100 * 1024 * 1024,\n            perMessageDeflate: false,\n            handleProtocols: null,\n            clientTracking: true,\n            verifyClient: null,\n            noServer: false,\n            backlog: null,\n            server: null,\n            host: null,\n            path: null,\n            port: null,\n            ...options\n        };\n        if (options.port == null && !options.server && !options.noServer || options.port != null && (options.server || options.noServer) || options.server && options.noServer) {\n            throw new TypeError('One and only one of the \"port\", \"server\", or \"noServer\" options ' + \"must be specified\");\n        }\n        if (options.port != null) {\n            this._server = http.createServer((req, res)=>{\n                const body = http.STATUS_CODES[426];\n                res.writeHead(426, {\n                    \"Content-Length\": body.length,\n                    \"Content-Type\": \"text/plain\"\n                });\n                res.end(body);\n            });\n            this._server.listen(options.port, options.host, options.backlog, callback);\n        } else if (options.server) {\n            this._server = options.server;\n        }\n        if (this._server) {\n            const emitConnection = this.emit.bind(this, \"connection\");\n            this._removeListeners = addListeners(this._server, {\n                listening: this.emit.bind(this, \"listening\"),\n                error: this.emit.bind(this, \"error\"),\n                upgrade: (req, socket, head)=>{\n                    this.handleUpgrade(req, socket, head, emitConnection);\n                }\n            });\n        }\n        if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n        if (options.clientTracking) this.clients = new Set();\n        this.options = options;\n        this._state = RUNNING;\n    }\n    /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */ address() {\n        if (this.options.noServer) {\n            throw new Error('The server is operating in \"noServer\" mode');\n        }\n        if (!this._server) return null;\n        return this._server.address();\n    }\n    /**\n   * Close the server.\n   *\n   * @param {Function} [cb] Callback\n   * @public\n   */ close(cb) {\n        if (cb) this.once(\"close\", cb);\n        if (this._state === CLOSED) {\n            process.nextTick(emitClose, this);\n            return;\n        }\n        if (this._state === CLOSING) return;\n        this._state = CLOSING;\n        //\n        // Terminate all associated clients.\n        //\n        if (this.clients) {\n            for (const client of this.clients)client.terminate();\n        }\n        const server = this._server;\n        if (server) {\n            this._removeListeners();\n            this._removeListeners = this._server = null;\n            //\n            // Close the http server if it was internally created.\n            //\n            if (this.options.port != null) {\n                server.close(emitClose.bind(undefined, this));\n                return;\n            }\n        }\n        process.nextTick(emitClose, this);\n    }\n    /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */ shouldHandle(req) {\n        if (this.options.path) {\n            const index = req.url.indexOf(\"?\");\n            const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n            if (pathname !== this.options.path) return false;\n        }\n        return true;\n    }\n    /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */ handleUpgrade(req, socket, head, cb) {\n        socket.on(\"error\", socketOnError);\n        const key = req.headers[\"sec-websocket-key\"] !== undefined ? req.headers[\"sec-websocket-key\"].trim() : false;\n        const version = +req.headers[\"sec-websocket-version\"];\n        const extensions = {};\n        if (req.method !== \"GET\" || req.headers.upgrade.toLowerCase() !== \"websocket\" || !key || !keyRegex.test(key) || version !== 8 && version !== 13 || !this.shouldHandle(req)) {\n            return abortHandshake(socket, 400);\n        }\n        if (this.options.perMessageDeflate) {\n            const perMessageDeflate = new PerMessageDeflate(this.options.perMessageDeflate, true, this.options.maxPayload);\n            try {\n                const offers = parse(req.headers[\"sec-websocket-extensions\"]);\n                if (offers[PerMessageDeflate.extensionName]) {\n                    perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n                    extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n                }\n            } catch (err) {\n                return abortHandshake(socket, 400);\n            }\n        }\n        //\n        // Optionally call external client verification handler.\n        //\n        if (this.options.verifyClient) {\n            const info = {\n                origin: req.headers[`${version === 8 ? \"sec-websocket-origin\" : \"origin\"}`],\n                secure: !!(req.socket.authorized || req.socket.encrypted),\n                req\n            };\n            if (this.options.verifyClient.length === 2) {\n                this.options.verifyClient(info, (verified, code, message, headers)=>{\n                    if (!verified) {\n                        return abortHandshake(socket, code || 401, message, headers);\n                    }\n                    this.completeUpgrade(key, extensions, req, socket, head, cb);\n                });\n                return;\n            }\n            if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n        }\n        this.completeUpgrade(key, extensions, req, socket, head, cb);\n    }\n    /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Object} extensions The accepted extensions\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */ completeUpgrade(key, extensions, req, socket, head, cb) {\n        //\n        // Destroy the socket if the client has already sent a FIN packet.\n        //\n        if (!socket.readable || !socket.writable) return socket.destroy();\n        if (socket[kWebSocket]) {\n            throw new Error(\"server.handleUpgrade() was called more than once with the same \" + \"socket, possibly due to a misconfiguration\");\n        }\n        if (this._state > RUNNING) return abortHandshake(socket, 503);\n        const digest = createHash(\"sha1\").update(key + GUID).digest(\"base64\");\n        const headers = [\n            \"HTTP/1.1 101 Switching Protocols\",\n            \"Upgrade: websocket\",\n            \"Connection: Upgrade\",\n            `Sec-WebSocket-Accept: ${digest}`\n        ];\n        const ws = new WebSocket(null);\n        let protocol = req.headers[\"sec-websocket-protocol\"];\n        if (protocol) {\n            protocol = protocol.split(\",\").map(trim);\n            //\n            // Optionally call external protocol selection handler.\n            //\n            if (this.options.handleProtocols) {\n                protocol = this.options.handleProtocols(protocol, req);\n            } else {\n                protocol = protocol[0];\n            }\n            if (protocol) {\n                headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n                ws._protocol = protocol;\n            }\n        }\n        if (extensions[PerMessageDeflate.extensionName]) {\n            const params = extensions[PerMessageDeflate.extensionName].params;\n            const value = format({\n                [PerMessageDeflate.extensionName]: [\n                    params\n                ]\n            });\n            headers.push(`Sec-WebSocket-Extensions: ${value}`);\n            ws._extensions = extensions;\n        }\n        //\n        // Allow external modification/inspection of handshake headers.\n        //\n        this.emit(\"headers\", headers, req);\n        socket.write(headers.concat(\"\\r\\n\").join(\"\\r\\n\"));\n        socket.removeListener(\"error\", socketOnError);\n        ws.setSocket(socket, head, this.options.maxPayload);\n        if (this.clients) {\n            this.clients.add(ws);\n            ws.on(\"close\", ()=>this.clients.delete(ws));\n        }\n        cb(ws, req);\n    }\n}\nmodule.exports = WebSocketServer;\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */ function addListeners(server, map) {\n    for (const event of Object.keys(map))server.on(event, map[event]);\n    return function removeListeners() {\n        for (const event of Object.keys(map)){\n            server.removeListener(event, map[event]);\n        }\n    };\n}\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */ function emitClose(server) {\n    server._state = CLOSED;\n    server.emit(\"close\");\n}\n/**\n * Handle premature socket errors.\n *\n * @private\n */ function socketOnError() {\n    this.destroy();\n}\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */ function abortHandshake(socket, code, message, headers) {\n    if (socket.writable) {\n        message = message || http.STATUS_CODES[code];\n        headers = {\n            Connection: \"close\",\n            \"Content-Type\": \"text/html\",\n            \"Content-Length\": Buffer.byteLength(message),\n            ...headers\n        };\n        socket.write(`HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` + Object.keys(headers).map((h)=>`${h}: ${headers[h]}`).join(\"\\r\\n\") + \"\\r\\n\\r\\n\" + message);\n    }\n    socket.removeListener(\"error\", socketOnError);\n    socket.destroy();\n}\n/**\n * Remove whitespace characters from both ends of a string.\n *\n * @param {String} str The string\n * @return {String} A new string representing `str` stripped of whitespace\n *     characters from both its beginning and end\n * @private\n */ function trim(str) {\n    return str.trim();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket-server.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket.js":
/*!************************************************************************************************!*\
  !*** ../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket.js ***!
  \************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Readable$\" }] */ \nconst EventEmitter = __webpack_require__(/*! events */ \"events\");\nconst https = __webpack_require__(/*! https */ \"https\");\nconst http = __webpack_require__(/*! http */ \"http\");\nconst net = __webpack_require__(/*! net */ \"net\");\nconst tls = __webpack_require__(/*! tls */ \"tls\");\nconst { randomBytes, createHash } = __webpack_require__(/*! crypto */ \"crypto\");\nconst { Readable } = __webpack_require__(/*! stream */ \"stream\");\nconst { URL } = __webpack_require__(/*! url */ \"url\");\nconst PerMessageDeflate = __webpack_require__(/*! ./permessage-deflate */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/permessage-deflate.js\");\nconst Receiver = __webpack_require__(/*! ./receiver */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/receiver.js\");\nconst Sender = __webpack_require__(/*! ./sender */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/sender.js\");\nconst { BINARY_TYPES, EMPTY_BUFFER, GUID, kStatusCode, kWebSocket, NOOP } = __webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/constants.js\");\nconst { addEventListener, removeEventListener } = __webpack_require__(/*! ./event-target */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/event-target.js\");\nconst { format, parse } = __webpack_require__(/*! ./extension */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/extension.js\");\nconst { toBuffer } = __webpack_require__(/*! ./buffer-util */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/buffer-util.js\");\nconst readyStates = [\n    \"CONNECTING\",\n    \"OPEN\",\n    \"CLOSING\",\n    \"CLOSED\"\n];\nconst protocolVersions = [\n    8,\n    13\n];\nconst closeTimeout = 30 * 1000;\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */ class WebSocket extends EventEmitter {\n    /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */ constructor(address, protocols, options){\n        super();\n        this._binaryType = BINARY_TYPES[0];\n        this._closeCode = 1006;\n        this._closeFrameReceived = false;\n        this._closeFrameSent = false;\n        this._closeMessage = \"\";\n        this._closeTimer = null;\n        this._extensions = {};\n        this._protocol = \"\";\n        this._readyState = WebSocket.CONNECTING;\n        this._receiver = null;\n        this._sender = null;\n        this._socket = null;\n        if (address !== null) {\n            this._bufferedAmount = 0;\n            this._isServer = false;\n            this._redirects = 0;\n            if (Array.isArray(protocols)) {\n                protocols = protocols.join(\", \");\n            } else if (typeof protocols === \"object\" && protocols !== null) {\n                options = protocols;\n                protocols = undefined;\n            }\n            initAsClient(this, address, protocols, options);\n        } else {\n            this._isServer = true;\n        }\n    }\n    /**\n   * This deviates from the WHATWG interface since ws doesn't support the\n   * required default \"blob\" type (instead we define a custom \"nodebuffer\"\n   * type).\n   *\n   * @type {String}\n   */ get binaryType() {\n        return this._binaryType;\n    }\n    set binaryType(type) {\n        if (!BINARY_TYPES.includes(type)) return;\n        this._binaryType = type;\n        //\n        // Allow to change `binaryType` on the fly.\n        //\n        if (this._receiver) this._receiver._binaryType = type;\n    }\n    /**\n   * @type {Number}\n   */ get bufferedAmount() {\n        if (!this._socket) return this._bufferedAmount;\n        return this._socket._writableState.length + this._sender._bufferedBytes;\n    }\n    /**\n   * @type {String}\n   */ get extensions() {\n        return Object.keys(this._extensions).join();\n    }\n    /**\n   * @type {Function}\n   */ /* istanbul ignore next */ get onclose() {\n        return undefined;\n    }\n    /* istanbul ignore next */ set onclose(listener) {}\n    /**\n   * @type {Function}\n   */ /* istanbul ignore next */ get onerror() {\n        return undefined;\n    }\n    /* istanbul ignore next */ set onerror(listener) {}\n    /**\n   * @type {Function}\n   */ /* istanbul ignore next */ get onopen() {\n        return undefined;\n    }\n    /* istanbul ignore next */ set onopen(listener) {}\n    /**\n   * @type {Function}\n   */ /* istanbul ignore next */ get onmessage() {\n        return undefined;\n    }\n    /* istanbul ignore next */ set onmessage(listener) {}\n    /**\n   * @type {String}\n   */ get protocol() {\n        return this._protocol;\n    }\n    /**\n   * @type {Number}\n   */ get readyState() {\n        return this._readyState;\n    }\n    /**\n   * @type {String}\n   */ get url() {\n        return this._url;\n    }\n    /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Number} [maxPayload=0] The maximum allowed message size\n   * @private\n   */ setSocket(socket, head, maxPayload) {\n        const receiver = new Receiver(this.binaryType, this._extensions, this._isServer, maxPayload);\n        this._sender = new Sender(socket, this._extensions);\n        this._receiver = receiver;\n        this._socket = socket;\n        receiver[kWebSocket] = this;\n        socket[kWebSocket] = this;\n        receiver.on(\"conclude\", receiverOnConclude);\n        receiver.on(\"drain\", receiverOnDrain);\n        receiver.on(\"error\", receiverOnError);\n        receiver.on(\"message\", receiverOnMessage);\n        receiver.on(\"ping\", receiverOnPing);\n        receiver.on(\"pong\", receiverOnPong);\n        socket.setTimeout(0);\n        socket.setNoDelay();\n        if (head.length > 0) socket.unshift(head);\n        socket.on(\"close\", socketOnClose);\n        socket.on(\"data\", socketOnData);\n        socket.on(\"end\", socketOnEnd);\n        socket.on(\"error\", socketOnError);\n        this._readyState = WebSocket.OPEN;\n        this.emit(\"open\");\n    }\n    /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */ emitClose() {\n        if (!this._socket) {\n            this._readyState = WebSocket.CLOSED;\n            this.emit(\"close\", this._closeCode, this._closeMessage);\n            return;\n        }\n        if (this._extensions[PerMessageDeflate.extensionName]) {\n            this._extensions[PerMessageDeflate.extensionName].cleanup();\n        }\n        this._receiver.removeAllListeners();\n        this._readyState = WebSocket.CLOSED;\n        this.emit(\"close\", this._closeCode, this._closeMessage);\n    }\n    /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {String} [data] A string explaining why the connection is closing\n   * @public\n   */ close(code, data) {\n        if (this.readyState === WebSocket.CLOSED) return;\n        if (this.readyState === WebSocket.CONNECTING) {\n            const msg = \"WebSocket was closed before the connection was established\";\n            return abortHandshake(this, this._req, msg);\n        }\n        if (this.readyState === WebSocket.CLOSING) {\n            if (this._closeFrameSent && (this._closeFrameReceived || this._receiver._writableState.errorEmitted)) {\n                this._socket.end();\n            }\n            return;\n        }\n        this._readyState = WebSocket.CLOSING;\n        this._sender.close(code, data, !this._isServer, (err)=>{\n            //\n            // This error is handled by the `'error'` listener on the socket. We only\n            // want to know if the close frame has been sent here.\n            //\n            if (err) return;\n            this._closeFrameSent = true;\n            if (this._closeFrameReceived || this._receiver._writableState.errorEmitted) {\n                this._socket.end();\n            }\n        });\n        //\n        // Specify a timeout for the closing handshake to complete.\n        //\n        this._closeTimer = setTimeout(this._socket.destroy.bind(this._socket), closeTimeout);\n    }\n    /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */ ping(data, mask, cb) {\n        if (this.readyState === WebSocket.CONNECTING) {\n            throw new Error(\"WebSocket is not open: readyState 0 (CONNECTING)\");\n        }\n        if (typeof data === \"function\") {\n            cb = data;\n            data = mask = undefined;\n        } else if (typeof mask === \"function\") {\n            cb = mask;\n            mask = undefined;\n        }\n        if (typeof data === \"number\") data = data.toString();\n        if (this.readyState !== WebSocket.OPEN) {\n            sendAfterClose(this, data, cb);\n            return;\n        }\n        if (mask === undefined) mask = !this._isServer;\n        this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n    }\n    /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */ pong(data, mask, cb) {\n        if (this.readyState === WebSocket.CONNECTING) {\n            throw new Error(\"WebSocket is not open: readyState 0 (CONNECTING)\");\n        }\n        if (typeof data === \"function\") {\n            cb = data;\n            data = mask = undefined;\n        } else if (typeof mask === \"function\") {\n            cb = mask;\n            mask = undefined;\n        }\n        if (typeof data === \"number\") data = data.toString();\n        if (this.readyState !== WebSocket.OPEN) {\n            sendAfterClose(this, data, cb);\n            return;\n        }\n        if (mask === undefined) mask = !this._isServer;\n        this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n    }\n    /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */ send(data, options, cb) {\n        if (this.readyState === WebSocket.CONNECTING) {\n            throw new Error(\"WebSocket is not open: readyState 0 (CONNECTING)\");\n        }\n        if (typeof options === \"function\") {\n            cb = options;\n            options = {};\n        }\n        if (typeof data === \"number\") data = data.toString();\n        if (this.readyState !== WebSocket.OPEN) {\n            sendAfterClose(this, data, cb);\n            return;\n        }\n        const opts = {\n            binary: typeof data !== \"string\",\n            mask: !this._isServer,\n            compress: true,\n            fin: true,\n            ...options\n        };\n        if (!this._extensions[PerMessageDeflate.extensionName]) {\n            opts.compress = false;\n        }\n        this._sender.send(data || EMPTY_BUFFER, opts, cb);\n    }\n    /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */ terminate() {\n        if (this.readyState === WebSocket.CLOSED) return;\n        if (this.readyState === WebSocket.CONNECTING) {\n            const msg = \"WebSocket was closed before the connection was established\";\n            return abortHandshake(this, this._req, msg);\n        }\n        if (this._socket) {\n            this._readyState = WebSocket.CLOSING;\n            this._socket.destroy();\n        }\n    }\n}\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */ Object.defineProperty(WebSocket, \"CONNECTING\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"CONNECTING\")\n});\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */ Object.defineProperty(WebSocket.prototype, \"CONNECTING\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"CONNECTING\")\n});\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */ Object.defineProperty(WebSocket, \"OPEN\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"OPEN\")\n});\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */ Object.defineProperty(WebSocket.prototype, \"OPEN\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"OPEN\")\n});\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */ Object.defineProperty(WebSocket, \"CLOSING\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"CLOSING\")\n});\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */ Object.defineProperty(WebSocket.prototype, \"CLOSING\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"CLOSING\")\n});\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */ Object.defineProperty(WebSocket, \"CLOSED\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"CLOSED\")\n});\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */ Object.defineProperty(WebSocket.prototype, \"CLOSED\", {\n    enumerable: true,\n    value: readyStates.indexOf(\"CLOSED\")\n});\n[\n    \"binaryType\",\n    \"bufferedAmount\",\n    \"extensions\",\n    \"protocol\",\n    \"readyState\",\n    \"url\"\n].forEach((property)=>{\n    Object.defineProperty(WebSocket.prototype, property, {\n        enumerable: true\n    });\n});\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n[\n    \"open\",\n    \"error\",\n    \"close\",\n    \"message\"\n].forEach((method)=>{\n    Object.defineProperty(WebSocket.prototype, `on${method}`, {\n        enumerable: true,\n        get () {\n            const listeners = this.listeners(method);\n            for(let i = 0; i < listeners.length; i++){\n                if (listeners[i]._listener) return listeners[i]._listener;\n            }\n            return undefined;\n        },\n        set (listener) {\n            const listeners = this.listeners(method);\n            for(let i = 0; i < listeners.length; i++){\n                //\n                // Remove only the listeners added via `addEventListener`.\n                //\n                if (listeners[i]._listener) this.removeListener(method, listeners[i]);\n            }\n            this.addEventListener(method, listener);\n        }\n    });\n});\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\nmodule.exports = WebSocket;\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {String} [protocols] The subprotocols\n * @param {Object} [options] Connection options\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @private\n */ function initAsClient(websocket, address, protocols, options) {\n    const opts = {\n        protocolVersion: protocolVersions[1],\n        maxPayload: 100 * 1024 * 1024,\n        perMessageDeflate: true,\n        followRedirects: false,\n        maxRedirects: 10,\n        ...options,\n        createConnection: undefined,\n        socketPath: undefined,\n        hostname: undefined,\n        protocol: undefined,\n        timeout: undefined,\n        method: undefined,\n        host: undefined,\n        path: undefined,\n        port: undefined\n    };\n    if (!protocolVersions.includes(opts.protocolVersion)) {\n        throw new RangeError(`Unsupported protocol version: ${opts.protocolVersion} ` + `(supported versions: ${protocolVersions.join(\", \")})`);\n    }\n    let parsedUrl;\n    if (address instanceof URL) {\n        parsedUrl = address;\n        websocket._url = address.href;\n    } else {\n        parsedUrl = new URL(address);\n        websocket._url = address;\n    }\n    const isUnixSocket = parsedUrl.protocol === \"ws+unix:\";\n    if (!parsedUrl.host && (!isUnixSocket || !parsedUrl.pathname)) {\n        const err = new Error(`Invalid URL: ${websocket.url}`);\n        if (websocket._redirects === 0) {\n            throw err;\n        } else {\n            emitErrorAndClose(websocket, err);\n            return;\n        }\n    }\n    const isSecure = parsedUrl.protocol === \"wss:\" || parsedUrl.protocol === \"https:\";\n    const defaultPort = isSecure ? 443 : 80;\n    const key = randomBytes(16).toString(\"base64\");\n    const get = isSecure ? https.get : http.get;\n    let perMessageDeflate;\n    opts.createConnection = isSecure ? tlsConnect : netConnect;\n    opts.defaultPort = opts.defaultPort || defaultPort;\n    opts.port = parsedUrl.port || defaultPort;\n    opts.host = parsedUrl.hostname.startsWith(\"[\") ? parsedUrl.hostname.slice(1, -1) : parsedUrl.hostname;\n    opts.headers = {\n        \"Sec-WebSocket-Version\": opts.protocolVersion,\n        \"Sec-WebSocket-Key\": key,\n        Connection: \"Upgrade\",\n        Upgrade: \"websocket\",\n        ...opts.headers\n    };\n    opts.path = parsedUrl.pathname + parsedUrl.search;\n    opts.timeout = opts.handshakeTimeout;\n    if (opts.perMessageDeflate) {\n        perMessageDeflate = new PerMessageDeflate(opts.perMessageDeflate !== true ? opts.perMessageDeflate : {}, false, opts.maxPayload);\n        opts.headers[\"Sec-WebSocket-Extensions\"] = format({\n            [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n        });\n    }\n    if (protocols) {\n        opts.headers[\"Sec-WebSocket-Protocol\"] = protocols;\n    }\n    if (opts.origin) {\n        if (opts.protocolVersion < 13) {\n            opts.headers[\"Sec-WebSocket-Origin\"] = opts.origin;\n        } else {\n            opts.headers.Origin = opts.origin;\n        }\n    }\n    if (parsedUrl.username || parsedUrl.password) {\n        opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n    }\n    if (isUnixSocket) {\n        const parts = opts.path.split(\":\");\n        opts.socketPath = parts[0];\n        opts.path = parts[1];\n    }\n    if (opts.followRedirects) {\n        if (websocket._redirects === 0) {\n            websocket._originalUnixSocket = isUnixSocket;\n            websocket._originalSecure = isSecure;\n            websocket._originalHostOrSocketPath = isUnixSocket ? opts.socketPath : parsedUrl.host;\n            const headers = options && options.headers;\n            //\n            // Shallow copy the user provided options so that headers can be changed\n            // without mutating the original object.\n            //\n            options = {\n                ...options,\n                headers: {}\n            };\n            if (headers) {\n                for (const [key, value] of Object.entries(headers)){\n                    options.headers[key.toLowerCase()] = value;\n                }\n            }\n        } else {\n            const isSameHost = isUnixSocket ? websocket._originalUnixSocket ? opts.socketPath === websocket._originalHostOrSocketPath : false : websocket._originalUnixSocket ? false : parsedUrl.host === websocket._originalHostOrSocketPath;\n            if (!isSameHost || websocket._originalSecure && !isSecure) {\n                //\n                // Match curl 7.77.0 behavior and drop the following headers. These\n                // headers are also dropped when following a redirect to a subdomain.\n                //\n                delete opts.headers.authorization;\n                delete opts.headers.cookie;\n                if (!isSameHost) delete opts.headers.host;\n                opts.auth = undefined;\n            }\n        }\n        //\n        // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n        // If the `Authorization` header is set, then there is nothing to do as it\n        // will take precedence.\n        //\n        if (opts.auth && !options.headers.authorization) {\n            options.headers.authorization = \"Basic \" + Buffer.from(opts.auth).toString(\"base64\");\n        }\n    }\n    let req = websocket._req = get(opts);\n    if (opts.timeout) {\n        req.on(\"timeout\", ()=>{\n            abortHandshake(websocket, req, \"Opening handshake has timed out\");\n        });\n    }\n    req.on(\"error\", (err)=>{\n        if (req === null || req.aborted) return;\n        req = websocket._req = null;\n        emitErrorAndClose(websocket, err);\n    });\n    req.on(\"response\", (res)=>{\n        const location = res.headers.location;\n        const statusCode = res.statusCode;\n        if (location && opts.followRedirects && statusCode >= 300 && statusCode < 400) {\n            if (++websocket._redirects > opts.maxRedirects) {\n                abortHandshake(websocket, req, \"Maximum redirects exceeded\");\n                return;\n            }\n            req.abort();\n            let addr;\n            try {\n                addr = new URL(location, address);\n            } catch (err) {\n                emitErrorAndClose(websocket, err);\n                return;\n            }\n            initAsClient(websocket, addr, protocols, options);\n        } else if (!websocket.emit(\"unexpected-response\", req, res)) {\n            abortHandshake(websocket, req, `Unexpected server response: ${res.statusCode}`);\n        }\n    });\n    req.on(\"upgrade\", (res, socket, head)=>{\n        websocket.emit(\"upgrade\", res);\n        //\n        // The user may have closed the connection from a listener of the `upgrade`\n        // event.\n        //\n        if (websocket.readyState !== WebSocket.CONNECTING) return;\n        req = websocket._req = null;\n        if (res.headers.upgrade.toLowerCase() !== \"websocket\") {\n            abortHandshake(websocket, socket, \"Invalid Upgrade header\");\n            return;\n        }\n        const digest = createHash(\"sha1\").update(key + GUID).digest(\"base64\");\n        if (res.headers[\"sec-websocket-accept\"] !== digest) {\n            abortHandshake(websocket, socket, \"Invalid Sec-WebSocket-Accept header\");\n            return;\n        }\n        const serverProt = res.headers[\"sec-websocket-protocol\"];\n        const protList = (protocols || \"\").split(/, */);\n        let protError;\n        if (!protocols && serverProt) {\n            protError = \"Server sent a subprotocol but none was requested\";\n        } else if (protocols && !serverProt) {\n            protError = \"Server sent no subprotocol\";\n        } else if (serverProt && !protList.includes(serverProt)) {\n            protError = \"Server sent an invalid subprotocol\";\n        }\n        if (protError) {\n            abortHandshake(websocket, socket, protError);\n            return;\n        }\n        if (serverProt) websocket._protocol = serverProt;\n        const secWebSocketExtensions = res.headers[\"sec-websocket-extensions\"];\n        if (secWebSocketExtensions !== undefined) {\n            if (!perMessageDeflate) {\n                const message = \"Server sent a Sec-WebSocket-Extensions header but no extension \" + \"was requested\";\n                abortHandshake(websocket, socket, message);\n                return;\n            }\n            let extensions;\n            try {\n                extensions = parse(secWebSocketExtensions);\n            } catch (err) {\n                const message = \"Invalid Sec-WebSocket-Extensions header\";\n                abortHandshake(websocket, socket, message);\n                return;\n            }\n            const extensionNames = Object.keys(extensions);\n            if (extensionNames.length) {\n                if (extensionNames.length !== 1 || extensionNames[0] !== PerMessageDeflate.extensionName) {\n                    const message = \"Server indicated an extension that was not requested\";\n                    abortHandshake(websocket, socket, message);\n                    return;\n                }\n                try {\n                    perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n                } catch (err) {\n                    const message = \"Invalid Sec-WebSocket-Extensions header\";\n                    abortHandshake(websocket, socket, message);\n                    return;\n                }\n                websocket._extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n            }\n        }\n        websocket.setSocket(socket, head, opts.maxPayload);\n    });\n}\n/**\n * Emit the `'error'` and `'close'` event.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */ function emitErrorAndClose(websocket, err) {\n    websocket._readyState = WebSocket.CLOSING;\n    websocket.emit(\"error\", err);\n    websocket.emitClose();\n}\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */ function netConnect(options) {\n    options.path = options.socketPath;\n    return net.connect(options);\n}\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */ function tlsConnect(options) {\n    options.path = undefined;\n    if (!options.servername && options.servername !== \"\") {\n        options.servername = net.isIP(options.host) ? \"\" : options.host;\n    }\n    return tls.connect(options);\n}\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */ function abortHandshake(websocket, stream, message) {\n    websocket._readyState = WebSocket.CLOSING;\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshake);\n    if (stream.setHeader) {\n        stream.abort();\n        if (stream.socket && !stream.socket.destroyed) {\n            //\n            // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n            // called after the request completed. See\n            // https://github.com/websockets/ws/issues/1869.\n            //\n            stream.socket.destroy();\n        }\n        stream.once(\"abort\", websocket.emitClose.bind(websocket));\n        websocket.emit(\"error\", err);\n    } else {\n        stream.destroy(err);\n        stream.once(\"error\", websocket.emit.bind(websocket, \"error\"));\n        stream.once(\"close\", websocket.emitClose.bind(websocket));\n    }\n}\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */ function sendAfterClose(websocket, data, cb) {\n    if (data) {\n        const length = toBuffer(data).length;\n        //\n        // The `_bufferedAmount` property is used only when the peer is a client and\n        // the opening handshake fails. Under these circumstances, in fact, the\n        // `setSocket()` method is not called, so the `_socket` and `_sender`\n        // properties are set to `null`.\n        //\n        if (websocket._socket) websocket._sender._bufferedBytes += length;\n        else websocket._bufferedAmount += length;\n    }\n    if (cb) {\n        const err = new Error(`WebSocket is not open: readyState ${websocket.readyState} ` + `(${readyStates[websocket.readyState]})`);\n        cb(err);\n    }\n}\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {String} reason The reason for closing\n * @private\n */ function receiverOnConclude(code, reason) {\n    const websocket = this[kWebSocket];\n    websocket._closeFrameReceived = true;\n    websocket._closeMessage = reason;\n    websocket._closeCode = code;\n    if (websocket._socket[kWebSocket] === undefined) return;\n    websocket._socket.removeListener(\"data\", socketOnData);\n    process.nextTick(resume, websocket._socket);\n    if (code === 1005) websocket.close();\n    else websocket.close(code, reason);\n}\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */ function receiverOnDrain() {\n    this[kWebSocket]._socket.resume();\n}\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */ function receiverOnError(err) {\n    const websocket = this[kWebSocket];\n    if (websocket._socket[kWebSocket] !== undefined) {\n        websocket._socket.removeListener(\"data\", socketOnData);\n        //\n        // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n        // https://github.com/websockets/ws/issues/1940.\n        //\n        process.nextTick(resume, websocket._socket);\n        websocket.close(err[kStatusCode]);\n    }\n    websocket.emit(\"error\", err);\n}\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */ function receiverOnFinish() {\n    this[kWebSocket].emitClose();\n}\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The message\n * @private\n */ function receiverOnMessage(data) {\n    this[kWebSocket].emit(\"message\", data);\n}\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */ function receiverOnPing(data) {\n    const websocket = this[kWebSocket];\n    websocket.pong(data, !websocket._isServer, NOOP);\n    websocket.emit(\"ping\", data);\n}\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */ function receiverOnPong(data) {\n    this[kWebSocket].emit(\"pong\", data);\n}\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */ function resume(stream) {\n    stream.resume();\n}\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */ function socketOnClose() {\n    const websocket = this[kWebSocket];\n    this.removeListener(\"close\", socketOnClose);\n    this.removeListener(\"data\", socketOnData);\n    this.removeListener(\"end\", socketOnEnd);\n    websocket._readyState = WebSocket.CLOSING;\n    let chunk;\n    //\n    // The close frame might not have been received or the `'end'` event emitted,\n    // for example, if the socket was destroyed due to an error. Ensure that the\n    // `receiver` stream is closed after writing any remaining buffered data to\n    // it. If the readable side of the socket is in flowing mode then there is no\n    // buffered data as everything has been already written and `readable.read()`\n    // will return `null`. If instead, the socket is paused, any possible buffered\n    // data will be read as a single chunk.\n    //\n    if (!this._readableState.endEmitted && !websocket._closeFrameReceived && !websocket._receiver._writableState.errorEmitted && (chunk = websocket._socket.read()) !== null) {\n        websocket._receiver.write(chunk);\n    }\n    websocket._receiver.end();\n    this[kWebSocket] = undefined;\n    clearTimeout(websocket._closeTimer);\n    if (websocket._receiver._writableState.finished || websocket._receiver._writableState.errorEmitted) {\n        websocket.emitClose();\n    } else {\n        websocket._receiver.on(\"error\", receiverOnFinish);\n        websocket._receiver.on(\"finish\", receiverOnFinish);\n    }\n}\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */ function socketOnData(chunk) {\n    if (!this[kWebSocket]._receiver.write(chunk)) {\n        this.pause();\n    }\n}\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */ function socketOnEnd() {\n    const websocket = this[kWebSocket];\n    websocket._readyState = WebSocket.CLOSING;\n    websocket._receiver.end();\n    this.end();\n}\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */ function socketOnError() {\n    const websocket = this[kWebSocket];\n    this.removeListener(\"error\", socketOnError);\n    this.on(\"error\", NOOP);\n    if (websocket) {\n        websocket._readyState = WebSocket.CLOSING;\n        this.destroy();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9ub2RlX21vZHVsZXMvd3MvbGliL3dlYnNvY2tldC5qcyIsIm1hcHBpbmdzIjoiQUFBQSwyRUFBMkUsR0FFM0U7QUFFQSxNQUFNQSxlQUFlQyxtQkFBT0EsQ0FBQztBQUM3QixNQUFNQyxRQUFRRCxtQkFBT0EsQ0FBQztBQUN0QixNQUFNRSxPQUFPRixtQkFBT0EsQ0FBQztBQUNyQixNQUFNRyxNQUFNSCxtQkFBT0EsQ0FBQztBQUNwQixNQUFNSSxNQUFNSixtQkFBT0EsQ0FBQztBQUNwQixNQUFNLEVBQUVLLFdBQVcsRUFBRUMsVUFBVSxFQUFFLEdBQUdOLG1CQUFPQSxDQUFDO0FBQzVDLE1BQU0sRUFBRU8sUUFBUSxFQUFFLEdBQUdQLG1CQUFPQSxDQUFDO0FBQzdCLE1BQU0sRUFBRVEsR0FBRyxFQUFFLEdBQUdSLG1CQUFPQSxDQUFDO0FBRXhCLE1BQU1TLG9CQUFvQlQsbUJBQU9BLENBQUM7QUFDbEMsTUFBTVUsV0FBV1YsbUJBQU9BLENBQUM7QUFDekIsTUFBTVcsU0FBU1gsbUJBQU9BLENBQUM7QUFDdkIsTUFBTSxFQUNKWSxZQUFZLEVBQ1pDLFlBQVksRUFDWkMsSUFBSSxFQUNKQyxXQUFXLEVBQ1hDLFVBQVUsRUFDVkMsSUFBSSxFQUNMLEdBQUdqQixtQkFBT0EsQ0FBQztBQUNaLE1BQU0sRUFBRWtCLGdCQUFnQixFQUFFQyxtQkFBbUIsRUFBRSxHQUFHbkIsbUJBQU9BLENBQUM7QUFDMUQsTUFBTSxFQUFFb0IsTUFBTSxFQUFFQyxLQUFLLEVBQUUsR0FBR3JCLG1CQUFPQSxDQUFDO0FBQ2xDLE1BQU0sRUFBRXNCLFFBQVEsRUFBRSxHQUFHdEIsbUJBQU9BLENBQUM7QUFFN0IsTUFBTXVCLGNBQWM7SUFBQztJQUFjO0lBQVE7SUFBVztDQUFTO0FBQy9ELE1BQU1DLG1CQUFtQjtJQUFDO0lBQUc7Q0FBRztBQUNoQyxNQUFNQyxlQUFlLEtBQUs7QUFFMUI7Ozs7Q0FJQyxHQUNELE1BQU1DLGtCQUFrQjNCO0lBQ3RCOzs7Ozs7R0FNQyxHQUNENEIsWUFBWUMsT0FBTyxFQUFFQyxTQUFTLEVBQUVDLE9BQU8sQ0FBRTtRQUN2QyxLQUFLO1FBRUwsSUFBSSxDQUFDQyxXQUFXLEdBQUduQixZQUFZLENBQUMsRUFBRTtRQUNsQyxJQUFJLENBQUNvQixVQUFVLEdBQUc7UUFDbEIsSUFBSSxDQUFDQyxtQkFBbUIsR0FBRztRQUMzQixJQUFJLENBQUNDLGVBQWUsR0FBRztRQUN2QixJQUFJLENBQUNDLGFBQWEsR0FBRztRQUNyQixJQUFJLENBQUNDLFdBQVcsR0FBRztRQUNuQixJQUFJLENBQUNDLFdBQVcsR0FBRyxDQUFDO1FBQ3BCLElBQUksQ0FBQ0MsU0FBUyxHQUFHO1FBQ2pCLElBQUksQ0FBQ0MsV0FBVyxHQUFHYixVQUFVYyxVQUFVO1FBQ3ZDLElBQUksQ0FBQ0MsU0FBUyxHQUFHO1FBQ2pCLElBQUksQ0FBQ0MsT0FBTyxHQUFHO1FBQ2YsSUFBSSxDQUFDQyxPQUFPLEdBQUc7UUFFZixJQUFJZixZQUFZLE1BQU07WUFDcEIsSUFBSSxDQUFDZ0IsZUFBZSxHQUFHO1lBQ3ZCLElBQUksQ0FBQ0MsU0FBUyxHQUFHO1lBQ2pCLElBQUksQ0FBQ0MsVUFBVSxHQUFHO1lBRWxCLElBQUlDLE1BQU1DLE9BQU8sQ0FBQ25CLFlBQVk7Z0JBQzVCQSxZQUFZQSxVQUFVb0IsSUFBSSxDQUFDO1lBQzdCLE9BQU8sSUFBSSxPQUFPcEIsY0FBYyxZQUFZQSxjQUFjLE1BQU07Z0JBQzlEQyxVQUFVRDtnQkFDVkEsWUFBWXFCO1lBQ2Q7WUFFQUMsYUFBYSxJQUFJLEVBQUV2QixTQUFTQyxXQUFXQztRQUN6QyxPQUFPO1lBQ0wsSUFBSSxDQUFDZSxTQUFTLEdBQUc7UUFDbkI7SUFDRjtJQUVBOzs7Ozs7R0FNQyxHQUNELElBQUlPLGFBQWE7UUFDZixPQUFPLElBQUksQ0FBQ3JCLFdBQVc7SUFDekI7SUFFQSxJQUFJcUIsV0FBV0MsSUFBSSxFQUFFO1FBQ25CLElBQUksQ0FBQ3pDLGFBQWEwQyxRQUFRLENBQUNELE9BQU87UUFFbEMsSUFBSSxDQUFDdEIsV0FBVyxHQUFHc0I7UUFFbkIsRUFBRTtRQUNGLDJDQUEyQztRQUMzQyxFQUFFO1FBQ0YsSUFBSSxJQUFJLENBQUNaLFNBQVMsRUFBRSxJQUFJLENBQUNBLFNBQVMsQ0FBQ1YsV0FBVyxHQUFHc0I7SUFDbkQ7SUFFQTs7R0FFQyxHQUNELElBQUlFLGlCQUFpQjtRQUNuQixJQUFJLENBQUMsSUFBSSxDQUFDWixPQUFPLEVBQUUsT0FBTyxJQUFJLENBQUNDLGVBQWU7UUFFOUMsT0FBTyxJQUFJLENBQUNELE9BQU8sQ0FBQ2EsY0FBYyxDQUFDQyxNQUFNLEdBQUcsSUFBSSxDQUFDZixPQUFPLENBQUNnQixjQUFjO0lBQ3pFO0lBRUE7O0dBRUMsR0FDRCxJQUFJQyxhQUFhO1FBQ2YsT0FBT0MsT0FBT0MsSUFBSSxDQUFDLElBQUksQ0FBQ3hCLFdBQVcsRUFBRVksSUFBSTtJQUMzQztJQUVBOztHQUVDLEdBQ0Qsd0JBQXdCLEdBQ3hCLElBQUlhLFVBQVU7UUFDWixPQUFPWjtJQUNUO0lBRUEsd0JBQXdCLEdBQ3hCLElBQUlZLFFBQVFDLFFBQVEsRUFBRSxDQUFDO0lBRXZCOztHQUVDLEdBQ0Qsd0JBQXdCLEdBQ3hCLElBQUlDLFVBQVU7UUFDWixPQUFPZDtJQUNUO0lBRUEsd0JBQXdCLEdBQ3hCLElBQUljLFFBQVFELFFBQVEsRUFBRSxDQUFDO0lBRXZCOztHQUVDLEdBQ0Qsd0JBQXdCLEdBQ3hCLElBQUlFLFNBQVM7UUFDWCxPQUFPZjtJQUNUO0lBRUEsd0JBQXdCLEdBQ3hCLElBQUllLE9BQU9GLFFBQVEsRUFBRSxDQUFDO0lBRXRCOztHQUVDLEdBQ0Qsd0JBQXdCLEdBQ3hCLElBQUlHLFlBQVk7UUFDZCxPQUFPaEI7SUFDVDtJQUVBLHdCQUF3QixHQUN4QixJQUFJZ0IsVUFBVUgsUUFBUSxFQUFFLENBQUM7SUFFekI7O0dBRUMsR0FDRCxJQUFJSSxXQUFXO1FBQ2IsT0FBTyxJQUFJLENBQUM3QixTQUFTO0lBQ3ZCO0lBRUE7O0dBRUMsR0FDRCxJQUFJOEIsYUFBYTtRQUNmLE9BQU8sSUFBSSxDQUFDN0IsV0FBVztJQUN6QjtJQUVBOztHQUVDLEdBQ0QsSUFBSThCLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQ0MsSUFBSTtJQUNsQjtJQUVBOzs7Ozs7OztHQVFDLEdBQ0RDLFVBQVVDLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxVQUFVLEVBQUU7UUFDbEMsTUFBTUMsV0FBVyxJQUFJakUsU0FDbkIsSUFBSSxDQUFDMEMsVUFBVSxFQUNmLElBQUksQ0FBQ2YsV0FBVyxFQUNoQixJQUFJLENBQUNRLFNBQVMsRUFDZDZCO1FBR0YsSUFBSSxDQUFDaEMsT0FBTyxHQUFHLElBQUkvQixPQUFPNkQsUUFBUSxJQUFJLENBQUNuQyxXQUFXO1FBQ2xELElBQUksQ0FBQ0ksU0FBUyxHQUFHa0M7UUFDakIsSUFBSSxDQUFDaEMsT0FBTyxHQUFHNkI7UUFFZkcsUUFBUSxDQUFDM0QsV0FBVyxHQUFHLElBQUk7UUFDM0J3RCxNQUFNLENBQUN4RCxXQUFXLEdBQUcsSUFBSTtRQUV6QjJELFNBQVNDLEVBQUUsQ0FBQyxZQUFZQztRQUN4QkYsU0FBU0MsRUFBRSxDQUFDLFNBQVNFO1FBQ3JCSCxTQUFTQyxFQUFFLENBQUMsU0FBU0c7UUFDckJKLFNBQVNDLEVBQUUsQ0FBQyxXQUFXSTtRQUN2QkwsU0FBU0MsRUFBRSxDQUFDLFFBQVFLO1FBQ3BCTixTQUFTQyxFQUFFLENBQUMsUUFBUU07UUFFcEJWLE9BQU9XLFVBQVUsQ0FBQztRQUNsQlgsT0FBT1ksVUFBVTtRQUVqQixJQUFJWCxLQUFLaEIsTUFBTSxHQUFHLEdBQUdlLE9BQU9hLE9BQU8sQ0FBQ1o7UUFFcENELE9BQU9JLEVBQUUsQ0FBQyxTQUFTVTtRQUNuQmQsT0FBT0ksRUFBRSxDQUFDLFFBQVFXO1FBQ2xCZixPQUFPSSxFQUFFLENBQUMsT0FBT1k7UUFDakJoQixPQUFPSSxFQUFFLENBQUMsU0FBU2E7UUFFbkIsSUFBSSxDQUFDbEQsV0FBVyxHQUFHYixVQUFVZ0UsSUFBSTtRQUNqQyxJQUFJLENBQUNDLElBQUksQ0FBQztJQUNaO0lBRUE7Ozs7R0FJQyxHQUNEQyxZQUFZO1FBQ1YsSUFBSSxDQUFDLElBQUksQ0FBQ2pELE9BQU8sRUFBRTtZQUNqQixJQUFJLENBQUNKLFdBQVcsR0FBR2IsVUFBVW1FLE1BQU07WUFDbkMsSUFBSSxDQUFDRixJQUFJLENBQUMsU0FBUyxJQUFJLENBQUMzRCxVQUFVLEVBQUUsSUFBSSxDQUFDRyxhQUFhO1lBQ3REO1FBQ0Y7UUFFQSxJQUFJLElBQUksQ0FBQ0UsV0FBVyxDQUFDNUIsa0JBQWtCcUYsYUFBYSxDQUFDLEVBQUU7WUFDckQsSUFBSSxDQUFDekQsV0FBVyxDQUFDNUIsa0JBQWtCcUYsYUFBYSxDQUFDLENBQUNDLE9BQU87UUFDM0Q7UUFFQSxJQUFJLENBQUN0RCxTQUFTLENBQUN1RCxrQkFBa0I7UUFDakMsSUFBSSxDQUFDekQsV0FBVyxHQUFHYixVQUFVbUUsTUFBTTtRQUNuQyxJQUFJLENBQUNGLElBQUksQ0FBQyxTQUFTLElBQUksQ0FBQzNELFVBQVUsRUFBRSxJQUFJLENBQUNHLGFBQWE7SUFDeEQ7SUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBa0JDLEdBQ0Q4RCxNQUFNQyxJQUFJLEVBQUVDLElBQUksRUFBRTtRQUNoQixJQUFJLElBQUksQ0FBQy9CLFVBQVUsS0FBSzFDLFVBQVVtRSxNQUFNLEVBQUU7UUFDMUMsSUFBSSxJQUFJLENBQUN6QixVQUFVLEtBQUsxQyxVQUFVYyxVQUFVLEVBQUU7WUFDNUMsTUFBTTRELE1BQU07WUFDWixPQUFPQyxlQUFlLElBQUksRUFBRSxJQUFJLENBQUNDLElBQUksRUFBRUY7UUFDekM7UUFFQSxJQUFJLElBQUksQ0FBQ2hDLFVBQVUsS0FBSzFDLFVBQVU2RSxPQUFPLEVBQUU7WUFDekMsSUFDRSxJQUFJLENBQUNyRSxlQUFlLElBQ25CLEtBQUksQ0FBQ0QsbUJBQW1CLElBQUksSUFBSSxDQUFDUSxTQUFTLENBQUNlLGNBQWMsQ0FBQ2dELFlBQVksR0FDdkU7Z0JBQ0EsSUFBSSxDQUFDN0QsT0FBTyxDQUFDOEQsR0FBRztZQUNsQjtZQUVBO1FBQ0Y7UUFFQSxJQUFJLENBQUNsRSxXQUFXLEdBQUdiLFVBQVU2RSxPQUFPO1FBQ3BDLElBQUksQ0FBQzdELE9BQU8sQ0FBQ3VELEtBQUssQ0FBQ0MsTUFBTUMsTUFBTSxDQUFDLElBQUksQ0FBQ3RELFNBQVMsRUFBRSxDQUFDNkQ7WUFDL0MsRUFBRTtZQUNGLHlFQUF5RTtZQUN6RSxzREFBc0Q7WUFDdEQsRUFBRTtZQUNGLElBQUlBLEtBQUs7WUFFVCxJQUFJLENBQUN4RSxlQUFlLEdBQUc7WUFFdkIsSUFDRSxJQUFJLENBQUNELG1CQUFtQixJQUN4QixJQUFJLENBQUNRLFNBQVMsQ0FBQ2UsY0FBYyxDQUFDZ0QsWUFBWSxFQUMxQztnQkFDQSxJQUFJLENBQUM3RCxPQUFPLENBQUM4RCxHQUFHO1lBQ2xCO1FBQ0Y7UUFFQSxFQUFFO1FBQ0YsMkRBQTJEO1FBQzNELEVBQUU7UUFDRixJQUFJLENBQUNyRSxXQUFXLEdBQUcrQyxXQUNqQixJQUFJLENBQUN4QyxPQUFPLENBQUNnRSxPQUFPLENBQUNDLElBQUksQ0FBQyxJQUFJLENBQUNqRSxPQUFPLEdBQ3RDbEI7SUFFSjtJQUVBOzs7Ozs7O0dBT0MsR0FDRG9GLEtBQUtWLElBQUksRUFBRVcsSUFBSSxFQUFFQyxFQUFFLEVBQUU7UUFDbkIsSUFBSSxJQUFJLENBQUMzQyxVQUFVLEtBQUsxQyxVQUFVYyxVQUFVLEVBQUU7WUFDNUMsTUFBTSxJQUFJd0UsTUFBTTtRQUNsQjtRQUVBLElBQUksT0FBT2IsU0FBUyxZQUFZO1lBQzlCWSxLQUFLWjtZQUNMQSxPQUFPVyxPQUFPNUQ7UUFDaEIsT0FBTyxJQUFJLE9BQU80RCxTQUFTLFlBQVk7WUFDckNDLEtBQUtEO1lBQ0xBLE9BQU81RDtRQUNUO1FBRUEsSUFBSSxPQUFPaUQsU0FBUyxVQUFVQSxPQUFPQSxLQUFLYyxRQUFRO1FBRWxELElBQUksSUFBSSxDQUFDN0MsVUFBVSxLQUFLMUMsVUFBVWdFLElBQUksRUFBRTtZQUN0Q3dCLGVBQWUsSUFBSSxFQUFFZixNQUFNWTtZQUMzQjtRQUNGO1FBRUEsSUFBSUQsU0FBUzVELFdBQVc0RCxPQUFPLENBQUMsSUFBSSxDQUFDakUsU0FBUztRQUM5QyxJQUFJLENBQUNILE9BQU8sQ0FBQ21FLElBQUksQ0FBQ1YsUUFBUXRGLGNBQWNpRyxNQUFNQztJQUNoRDtJQUVBOzs7Ozs7O0dBT0MsR0FDREksS0FBS2hCLElBQUksRUFBRVcsSUFBSSxFQUFFQyxFQUFFLEVBQUU7UUFDbkIsSUFBSSxJQUFJLENBQUMzQyxVQUFVLEtBQUsxQyxVQUFVYyxVQUFVLEVBQUU7WUFDNUMsTUFBTSxJQUFJd0UsTUFBTTtRQUNsQjtRQUVBLElBQUksT0FBT2IsU0FBUyxZQUFZO1lBQzlCWSxLQUFLWjtZQUNMQSxPQUFPVyxPQUFPNUQ7UUFDaEIsT0FBTyxJQUFJLE9BQU80RCxTQUFTLFlBQVk7WUFDckNDLEtBQUtEO1lBQ0xBLE9BQU81RDtRQUNUO1FBRUEsSUFBSSxPQUFPaUQsU0FBUyxVQUFVQSxPQUFPQSxLQUFLYyxRQUFRO1FBRWxELElBQUksSUFBSSxDQUFDN0MsVUFBVSxLQUFLMUMsVUFBVWdFLElBQUksRUFBRTtZQUN0Q3dCLGVBQWUsSUFBSSxFQUFFZixNQUFNWTtZQUMzQjtRQUNGO1FBRUEsSUFBSUQsU0FBUzVELFdBQVc0RCxPQUFPLENBQUMsSUFBSSxDQUFDakUsU0FBUztRQUM5QyxJQUFJLENBQUNILE9BQU8sQ0FBQ3lFLElBQUksQ0FBQ2hCLFFBQVF0RixjQUFjaUcsTUFBTUM7SUFDaEQ7SUFFQTs7Ozs7Ozs7Ozs7Ozs7R0FjQyxHQUNESyxLQUFLakIsSUFBSSxFQUFFckUsT0FBTyxFQUFFaUYsRUFBRSxFQUFFO1FBQ3RCLElBQUksSUFBSSxDQUFDM0MsVUFBVSxLQUFLMUMsVUFBVWMsVUFBVSxFQUFFO1lBQzVDLE1BQU0sSUFBSXdFLE1BQU07UUFDbEI7UUFFQSxJQUFJLE9BQU9sRixZQUFZLFlBQVk7WUFDakNpRixLQUFLakY7WUFDTEEsVUFBVSxDQUFDO1FBQ2I7UUFFQSxJQUFJLE9BQU9xRSxTQUFTLFVBQVVBLE9BQU9BLEtBQUtjLFFBQVE7UUFFbEQsSUFBSSxJQUFJLENBQUM3QyxVQUFVLEtBQUsxQyxVQUFVZ0UsSUFBSSxFQUFFO1lBQ3RDd0IsZUFBZSxJQUFJLEVBQUVmLE1BQU1ZO1lBQzNCO1FBQ0Y7UUFFQSxNQUFNTSxPQUFPO1lBQ1hDLFFBQVEsT0FBT25CLFNBQVM7WUFDeEJXLE1BQU0sQ0FBQyxJQUFJLENBQUNqRSxTQUFTO1lBQ3JCMEUsVUFBVTtZQUNWQyxLQUFLO1lBQ0wsR0FBRzFGLE9BQU87UUFDWjtRQUVBLElBQUksQ0FBQyxJQUFJLENBQUNPLFdBQVcsQ0FBQzVCLGtCQUFrQnFGLGFBQWEsQ0FBQyxFQUFFO1lBQ3REdUIsS0FBS0UsUUFBUSxHQUFHO1FBQ2xCO1FBRUEsSUFBSSxDQUFDN0UsT0FBTyxDQUFDMEUsSUFBSSxDQUFDakIsUUFBUXRGLGNBQWN3RyxNQUFNTjtJQUNoRDtJQUVBOzs7O0dBSUMsR0FDRFUsWUFBWTtRQUNWLElBQUksSUFBSSxDQUFDckQsVUFBVSxLQUFLMUMsVUFBVW1FLE1BQU0sRUFBRTtRQUMxQyxJQUFJLElBQUksQ0FBQ3pCLFVBQVUsS0FBSzFDLFVBQVVjLFVBQVUsRUFBRTtZQUM1QyxNQUFNNEQsTUFBTTtZQUNaLE9BQU9DLGVBQWUsSUFBSSxFQUFFLElBQUksQ0FBQ0MsSUFBSSxFQUFFRjtRQUN6QztRQUVBLElBQUksSUFBSSxDQUFDekQsT0FBTyxFQUFFO1lBQ2hCLElBQUksQ0FBQ0osV0FBVyxHQUFHYixVQUFVNkUsT0FBTztZQUNwQyxJQUFJLENBQUM1RCxPQUFPLENBQUNnRSxPQUFPO1FBQ3RCO0lBQ0Y7QUFDRjtBQUVBOzs7Q0FHQyxHQUNEL0MsT0FBTzhELGNBQWMsQ0FBQ2hHLFdBQVcsY0FBYztJQUM3Q2lHLFlBQVk7SUFDWkMsT0FBT3JHLFlBQVlzRyxPQUFPLENBQUM7QUFDN0I7QUFFQTs7O0NBR0MsR0FDRGpFLE9BQU84RCxjQUFjLENBQUNoRyxVQUFVb0csU0FBUyxFQUFFLGNBQWM7SUFDdkRILFlBQVk7SUFDWkMsT0FBT3JHLFlBQVlzRyxPQUFPLENBQUM7QUFDN0I7QUFFQTs7O0NBR0MsR0FDRGpFLE9BQU84RCxjQUFjLENBQUNoRyxXQUFXLFFBQVE7SUFDdkNpRyxZQUFZO0lBQ1pDLE9BQU9yRyxZQUFZc0csT0FBTyxDQUFDO0FBQzdCO0FBRUE7OztDQUdDLEdBQ0RqRSxPQUFPOEQsY0FBYyxDQUFDaEcsVUFBVW9HLFNBQVMsRUFBRSxRQUFRO0lBQ2pESCxZQUFZO0lBQ1pDLE9BQU9yRyxZQUFZc0csT0FBTyxDQUFDO0FBQzdCO0FBRUE7OztDQUdDLEdBQ0RqRSxPQUFPOEQsY0FBYyxDQUFDaEcsV0FBVyxXQUFXO0lBQzFDaUcsWUFBWTtJQUNaQyxPQUFPckcsWUFBWXNHLE9BQU8sQ0FBQztBQUM3QjtBQUVBOzs7Q0FHQyxHQUNEakUsT0FBTzhELGNBQWMsQ0FBQ2hHLFVBQVVvRyxTQUFTLEVBQUUsV0FBVztJQUNwREgsWUFBWTtJQUNaQyxPQUFPckcsWUFBWXNHLE9BQU8sQ0FBQztBQUM3QjtBQUVBOzs7Q0FHQyxHQUNEakUsT0FBTzhELGNBQWMsQ0FBQ2hHLFdBQVcsVUFBVTtJQUN6Q2lHLFlBQVk7SUFDWkMsT0FBT3JHLFlBQVlzRyxPQUFPLENBQUM7QUFDN0I7QUFFQTs7O0NBR0MsR0FDRGpFLE9BQU84RCxjQUFjLENBQUNoRyxVQUFVb0csU0FBUyxFQUFFLFVBQVU7SUFDbkRILFlBQVk7SUFDWkMsT0FBT3JHLFlBQVlzRyxPQUFPLENBQUM7QUFDN0I7QUFFQTtJQUNFO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtDQUNELENBQUNFLE9BQU8sQ0FBQyxDQUFDQztJQUNUcEUsT0FBTzhELGNBQWMsQ0FBQ2hHLFVBQVVvRyxTQUFTLEVBQUVFLFVBQVU7UUFBRUwsWUFBWTtJQUFLO0FBQzFFO0FBRUEsRUFBRTtBQUNGLHNFQUFzRTtBQUN0RSxnRkFBZ0Y7QUFDaEYsRUFBRTtBQUNGO0lBQUM7SUFBUTtJQUFTO0lBQVM7Q0FBVSxDQUFDSSxPQUFPLENBQUMsQ0FBQ0U7SUFDN0NyRSxPQUFPOEQsY0FBYyxDQUFDaEcsVUFBVW9HLFNBQVMsRUFBRSxDQUFDLEVBQUUsRUFBRUcsT0FBTyxDQUFDLEVBQUU7UUFDeEROLFlBQVk7UUFDWk87WUFDRSxNQUFNQyxZQUFZLElBQUksQ0FBQ0EsU0FBUyxDQUFDRjtZQUNqQyxJQUFLLElBQUlHLElBQUksR0FBR0EsSUFBSUQsVUFBVTFFLE1BQU0sRUFBRTJFLElBQUs7Z0JBQ3pDLElBQUlELFNBQVMsQ0FBQ0MsRUFBRSxDQUFDQyxTQUFTLEVBQUUsT0FBT0YsU0FBUyxDQUFDQyxFQUFFLENBQUNDLFNBQVM7WUFDM0Q7WUFFQSxPQUFPbkY7UUFDVDtRQUNBb0YsS0FBSXZFLFFBQVE7WUFDVixNQUFNb0UsWUFBWSxJQUFJLENBQUNBLFNBQVMsQ0FBQ0Y7WUFDakMsSUFBSyxJQUFJRyxJQUFJLEdBQUdBLElBQUlELFVBQVUxRSxNQUFNLEVBQUUyRSxJQUFLO2dCQUN6QyxFQUFFO2dCQUNGLDBEQUEwRDtnQkFDMUQsRUFBRTtnQkFDRixJQUFJRCxTQUFTLENBQUNDLEVBQUUsQ0FBQ0MsU0FBUyxFQUFFLElBQUksQ0FBQ0UsY0FBYyxDQUFDTixRQUFRRSxTQUFTLENBQUNDLEVBQUU7WUFDdEU7WUFDQSxJQUFJLENBQUNsSCxnQkFBZ0IsQ0FBQytHLFFBQVFsRTtRQUNoQztJQUNGO0FBQ0Y7QUFFQXJDLFVBQVVvRyxTQUFTLENBQUM1RyxnQkFBZ0IsR0FBR0E7QUFDdkNRLFVBQVVvRyxTQUFTLENBQUMzRyxtQkFBbUIsR0FBR0E7QUFFMUNxSCxPQUFPQyxPQUFPLEdBQUcvRztBQUVqQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXNCQyxHQUNELFNBQVN5QixhQUFhdUYsU0FBUyxFQUFFOUcsT0FBTyxFQUFFQyxTQUFTLEVBQUVDLE9BQU87SUFDMUQsTUFBTXVGLE9BQU87UUFDWHNCLGlCQUFpQm5ILGdCQUFnQixDQUFDLEVBQUU7UUFDcENrRCxZQUFZLE1BQU0sT0FBTztRQUN6QmtFLG1CQUFtQjtRQUNuQkMsaUJBQWlCO1FBQ2pCQyxjQUFjO1FBQ2QsR0FBR2hILE9BQU87UUFDVmlILGtCQUFrQjdGO1FBQ2xCOEYsWUFBWTlGO1FBQ1orRixVQUFVL0Y7UUFDVmlCLFVBQVVqQjtRQUNWZ0csU0FBU2hHO1FBQ1QrRSxRQUFRL0U7UUFDUmlHLE1BQU1qRztRQUNOa0csTUFBTWxHO1FBQ05tRyxNQUFNbkc7SUFDUjtJQUVBLElBQUksQ0FBQzFCLGlCQUFpQjhCLFFBQVEsQ0FBQytELEtBQUtzQixlQUFlLEdBQUc7UUFDcEQsTUFBTSxJQUFJVyxXQUNSLENBQUMsOEJBQThCLEVBQUVqQyxLQUFLc0IsZUFBZSxDQUFDLENBQUMsQ0FBQyxHQUN0RCxDQUFDLHFCQUFxQixFQUFFbkgsaUJBQWlCeUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRTVEO0lBRUEsSUFBSXNHO0lBRUosSUFBSTNILG1CQUFtQnBCLEtBQUs7UUFDMUIrSSxZQUFZM0g7UUFDWjhHLFVBQVVwRSxJQUFJLEdBQUcxQyxRQUFRNEgsSUFBSTtJQUMvQixPQUFPO1FBQ0xELFlBQVksSUFBSS9JLElBQUlvQjtRQUNwQjhHLFVBQVVwRSxJQUFJLEdBQUcxQztJQUNuQjtJQUVBLE1BQU02SCxlQUFlRixVQUFVcEYsUUFBUSxLQUFLO0lBRTVDLElBQUksQ0FBQ29GLFVBQVVKLElBQUksSUFBSyxFQUFDTSxnQkFBZ0IsQ0FBQ0YsVUFBVUcsUUFBUSxHQUFHO1FBQzdELE1BQU1oRCxNQUFNLElBQUlNLE1BQU0sQ0FBQyxhQUFhLEVBQUUwQixVQUFVckUsR0FBRyxDQUFDLENBQUM7UUFFckQsSUFBSXFFLFVBQVU1RixVQUFVLEtBQUssR0FBRztZQUM5QixNQUFNNEQ7UUFDUixPQUFPO1lBQ0xpRCxrQkFBa0JqQixXQUFXaEM7WUFDN0I7UUFDRjtJQUNGO0lBRUEsTUFBTWtELFdBQ0pMLFVBQVVwRixRQUFRLEtBQUssVUFBVW9GLFVBQVVwRixRQUFRLEtBQUs7SUFDMUQsTUFBTTBGLGNBQWNELFdBQVcsTUFBTTtJQUNyQyxNQUFNRSxNQUFNekosWUFBWSxJQUFJNEcsUUFBUSxDQUFDO0lBQ3JDLE1BQU1pQixNQUFNMEIsV0FBVzNKLE1BQU1pSSxHQUFHLEdBQUdoSSxLQUFLZ0ksR0FBRztJQUMzQyxJQUFJVTtJQUVKdkIsS0FBSzBCLGdCQUFnQixHQUFHYSxXQUFXRyxhQUFhQztJQUNoRDNDLEtBQUt3QyxXQUFXLEdBQUd4QyxLQUFLd0MsV0FBVyxJQUFJQTtJQUN2Q3hDLEtBQUtnQyxJQUFJLEdBQUdFLFVBQVVGLElBQUksSUFBSVE7SUFDOUJ4QyxLQUFLOEIsSUFBSSxHQUFHSSxVQUFVTixRQUFRLENBQUNnQixVQUFVLENBQUMsT0FDdENWLFVBQVVOLFFBQVEsQ0FBQ2lCLEtBQUssQ0FBQyxHQUFHLENBQUMsS0FDN0JYLFVBQVVOLFFBQVE7SUFDdEI1QixLQUFLOEMsT0FBTyxHQUFHO1FBQ2IseUJBQXlCOUMsS0FBS3NCLGVBQWU7UUFDN0MscUJBQXFCbUI7UUFDckJNLFlBQVk7UUFDWkMsU0FBUztRQUNULEdBQUdoRCxLQUFLOEMsT0FBTztJQUNqQjtJQUNBOUMsS0FBSytCLElBQUksR0FBR0csVUFBVUcsUUFBUSxHQUFHSCxVQUFVZSxNQUFNO0lBQ2pEakQsS0FBSzZCLE9BQU8sR0FBRzdCLEtBQUtrRCxnQkFBZ0I7SUFFcEMsSUFBSWxELEtBQUt1QixpQkFBaUIsRUFBRTtRQUMxQkEsb0JBQW9CLElBQUluSSxrQkFDdEI0RyxLQUFLdUIsaUJBQWlCLEtBQUssT0FBT3ZCLEtBQUt1QixpQkFBaUIsR0FBRyxDQUFDLEdBQzVELE9BQ0F2QixLQUFLM0MsVUFBVTtRQUVqQjJDLEtBQUs4QyxPQUFPLENBQUMsMkJBQTJCLEdBQUcvSSxPQUFPO1lBQ2hELENBQUNYLGtCQUFrQnFGLGFBQWEsQ0FBQyxFQUFFOEMsa0JBQWtCNEIsS0FBSztRQUM1RDtJQUNGO0lBQ0EsSUFBSTNJLFdBQVc7UUFDYndGLEtBQUs4QyxPQUFPLENBQUMseUJBQXlCLEdBQUd0STtJQUMzQztJQUNBLElBQUl3RixLQUFLb0QsTUFBTSxFQUFFO1FBQ2YsSUFBSXBELEtBQUtzQixlQUFlLEdBQUcsSUFBSTtZQUM3QnRCLEtBQUs4QyxPQUFPLENBQUMsdUJBQXVCLEdBQUc5QyxLQUFLb0QsTUFBTTtRQUNwRCxPQUFPO1lBQ0xwRCxLQUFLOEMsT0FBTyxDQUFDTyxNQUFNLEdBQUdyRCxLQUFLb0QsTUFBTTtRQUNuQztJQUNGO0lBQ0EsSUFBSWxCLFVBQVVvQixRQUFRLElBQUlwQixVQUFVcUIsUUFBUSxFQUFFO1FBQzVDdkQsS0FBS3dELElBQUksR0FBRyxDQUFDLEVBQUV0QixVQUFVb0IsUUFBUSxDQUFDLENBQUMsRUFBRXBCLFVBQVVxQixRQUFRLENBQUMsQ0FBQztJQUMzRDtJQUVBLElBQUluQixjQUFjO1FBQ2hCLE1BQU1xQixRQUFRekQsS0FBSytCLElBQUksQ0FBQzJCLEtBQUssQ0FBQztRQUU5QjFELEtBQUsyQixVQUFVLEdBQUc4QixLQUFLLENBQUMsRUFBRTtRQUMxQnpELEtBQUsrQixJQUFJLEdBQUcwQixLQUFLLENBQUMsRUFBRTtJQUN0QjtJQUVBLElBQUl6RCxLQUFLd0IsZUFBZSxFQUFFO1FBQ3hCLElBQUlILFVBQVU1RixVQUFVLEtBQUssR0FBRztZQUM5QjRGLFVBQVVzQyxtQkFBbUIsR0FBR3ZCO1lBQ2hDZixVQUFVdUMsZUFBZSxHQUFHckI7WUFDNUJsQixVQUFVd0MseUJBQXlCLEdBQUd6QixlQUNsQ3BDLEtBQUsyQixVQUFVLEdBQ2ZPLFVBQVVKLElBQUk7WUFFbEIsTUFBTWdCLFVBQVVySSxXQUFXQSxRQUFRcUksT0FBTztZQUUxQyxFQUFFO1lBQ0Ysd0VBQXdFO1lBQ3hFLHdDQUF3QztZQUN4QyxFQUFFO1lBQ0ZySSxVQUFVO2dCQUFFLEdBQUdBLE9BQU87Z0JBQUVxSSxTQUFTLENBQUM7WUFBRTtZQUVwQyxJQUFJQSxTQUFTO2dCQUNYLEtBQUssTUFBTSxDQUFDTCxLQUFLbEMsTUFBTSxJQUFJaEUsT0FBT3VILE9BQU8sQ0FBQ2hCLFNBQVU7b0JBQ2xEckksUUFBUXFJLE9BQU8sQ0FBQ0wsSUFBSXNCLFdBQVcsR0FBRyxHQUFHeEQ7Z0JBQ3ZDO1lBQ0Y7UUFDRixPQUFPO1lBQ0wsTUFBTXlELGFBQWE1QixlQUNmZixVQUFVc0MsbUJBQW1CLEdBQzNCM0QsS0FBSzJCLFVBQVUsS0FBS04sVUFBVXdDLHlCQUF5QixHQUN2RCxRQUNGeEMsVUFBVXNDLG1CQUFtQixHQUM3QixRQUNBekIsVUFBVUosSUFBSSxLQUFLVCxVQUFVd0MseUJBQXlCO1lBRTFELElBQUksQ0FBQ0csY0FBZTNDLFVBQVV1QyxlQUFlLElBQUksQ0FBQ3JCLFVBQVc7Z0JBQzNELEVBQUU7Z0JBQ0YsbUVBQW1FO2dCQUNuRSxxRUFBcUU7Z0JBQ3JFLEVBQUU7Z0JBQ0YsT0FBT3ZDLEtBQUs4QyxPQUFPLENBQUNtQixhQUFhO2dCQUNqQyxPQUFPakUsS0FBSzhDLE9BQU8sQ0FBQ29CLE1BQU07Z0JBRTFCLElBQUksQ0FBQ0YsWUFBWSxPQUFPaEUsS0FBSzhDLE9BQU8sQ0FBQ2hCLElBQUk7Z0JBRXpDOUIsS0FBS3dELElBQUksR0FBRzNIO1lBQ2Q7UUFDRjtRQUVBLEVBQUU7UUFDRiw0RUFBNEU7UUFDNUUsMEVBQTBFO1FBQzFFLHdCQUF3QjtRQUN4QixFQUFFO1FBQ0YsSUFBSW1FLEtBQUt3RCxJQUFJLElBQUksQ0FBQy9JLFFBQVFxSSxPQUFPLENBQUNtQixhQUFhLEVBQUU7WUFDL0N4SixRQUFRcUksT0FBTyxDQUFDbUIsYUFBYSxHQUMzQixXQUFXRSxPQUFPQyxJQUFJLENBQUNwRSxLQUFLd0QsSUFBSSxFQUFFNUQsUUFBUSxDQUFDO1FBQy9DO0lBQ0Y7SUFFQSxJQUFJeUUsTUFBT2hELFVBQVVwQyxJQUFJLEdBQUc0QixJQUFJYjtJQUVoQyxJQUFJQSxLQUFLNkIsT0FBTyxFQUFFO1FBQ2hCd0MsSUFBSTlHLEVBQUUsQ0FBQyxXQUFXO1lBQ2hCeUIsZUFBZXFDLFdBQVdnRCxLQUFLO1FBQ2pDO0lBQ0Y7SUFFQUEsSUFBSTlHLEVBQUUsQ0FBQyxTQUFTLENBQUM4QjtRQUNmLElBQUlnRixRQUFRLFFBQVFBLElBQUlDLE9BQU8sRUFBRTtRQUVqQ0QsTUFBTWhELFVBQVVwQyxJQUFJLEdBQUc7UUFDdkJxRCxrQkFBa0JqQixXQUFXaEM7SUFDL0I7SUFFQWdGLElBQUk5RyxFQUFFLENBQUMsWUFBWSxDQUFDZ0g7UUFDbEIsTUFBTUMsV0FBV0QsSUFBSXpCLE9BQU8sQ0FBQzBCLFFBQVE7UUFDckMsTUFBTUMsYUFBYUYsSUFBSUUsVUFBVTtRQUVqQyxJQUNFRCxZQUNBeEUsS0FBS3dCLGVBQWUsSUFDcEJpRCxjQUFjLE9BQ2RBLGFBQWEsS0FDYjtZQUNBLElBQUksRUFBRXBELFVBQVU1RixVQUFVLEdBQUd1RSxLQUFLeUIsWUFBWSxFQUFFO2dCQUM5Q3pDLGVBQWVxQyxXQUFXZ0QsS0FBSztnQkFDL0I7WUFDRjtZQUVBQSxJQUFJSyxLQUFLO1lBRVQsSUFBSUM7WUFFSixJQUFJO2dCQUNGQSxPQUFPLElBQUl4TCxJQUFJcUwsVUFBVWpLO1lBQzNCLEVBQUUsT0FBTzhFLEtBQUs7Z0JBQ1ppRCxrQkFBa0JqQixXQUFXaEM7Z0JBQzdCO1lBQ0Y7WUFFQXZELGFBQWF1RixXQUFXc0QsTUFBTW5LLFdBQVdDO1FBQzNDLE9BQU8sSUFBSSxDQUFDNEcsVUFBVS9DLElBQUksQ0FBQyx1QkFBdUIrRixLQUFLRSxNQUFNO1lBQzNEdkYsZUFDRXFDLFdBQ0FnRCxLQUNBLENBQUMsNEJBQTRCLEVBQUVFLElBQUlFLFVBQVUsQ0FBQyxDQUFDO1FBRW5EO0lBQ0Y7SUFFQUosSUFBSTlHLEVBQUUsQ0FBQyxXQUFXLENBQUNnSCxLQUFLcEgsUUFBUUM7UUFDOUJpRSxVQUFVL0MsSUFBSSxDQUFDLFdBQVdpRztRQUUxQixFQUFFO1FBQ0YsMkVBQTJFO1FBQzNFLFNBQVM7UUFDVCxFQUFFO1FBQ0YsSUFBSWxELFVBQVV0RSxVQUFVLEtBQUsxQyxVQUFVYyxVQUFVLEVBQUU7UUFFbkRrSixNQUFNaEQsVUFBVXBDLElBQUksR0FBRztRQUV2QixJQUFJc0YsSUFBSXpCLE9BQU8sQ0FBQzhCLE9BQU8sQ0FBQ2IsV0FBVyxPQUFPLGFBQWE7WUFDckQvRSxlQUFlcUMsV0FBV2xFLFFBQVE7WUFDbEM7UUFDRjtRQUVBLE1BQU0wSCxTQUFTNUwsV0FBVyxRQUN2QjZMLE1BQU0sQ0FBQ3JDLE1BQU1oSixNQUNib0wsTUFBTSxDQUFDO1FBRVYsSUFBSU4sSUFBSXpCLE9BQU8sQ0FBQyx1QkFBdUIsS0FBSytCLFFBQVE7WUFDbEQ3RixlQUFlcUMsV0FBV2xFLFFBQVE7WUFDbEM7UUFDRjtRQUVBLE1BQU00SCxhQUFhUixJQUFJekIsT0FBTyxDQUFDLHlCQUF5QjtRQUN4RCxNQUFNa0MsV0FBVyxDQUFDeEssYUFBYSxFQUFDLEVBQUdrSixLQUFLLENBQUM7UUFDekMsSUFBSXVCO1FBRUosSUFBSSxDQUFDekssYUFBYXVLLFlBQVk7WUFDNUJFLFlBQVk7UUFDZCxPQUFPLElBQUl6SyxhQUFhLENBQUN1SyxZQUFZO1lBQ25DRSxZQUFZO1FBQ2QsT0FBTyxJQUFJRixjQUFjLENBQUNDLFNBQVMvSSxRQUFRLENBQUM4SSxhQUFhO1lBQ3ZERSxZQUFZO1FBQ2Q7UUFFQSxJQUFJQSxXQUFXO1lBQ2JqRyxlQUFlcUMsV0FBV2xFLFFBQVE4SDtZQUNsQztRQUNGO1FBRUEsSUFBSUYsWUFBWTFELFVBQVVwRyxTQUFTLEdBQUc4SjtRQUV0QyxNQUFNRyx5QkFBeUJYLElBQUl6QixPQUFPLENBQUMsMkJBQTJCO1FBRXRFLElBQUlvQywyQkFBMkJySixXQUFXO1lBQ3hDLElBQUksQ0FBQzBGLG1CQUFtQjtnQkFDdEIsTUFBTTRELFVBQ0osb0VBQ0E7Z0JBQ0ZuRyxlQUFlcUMsV0FBV2xFLFFBQVFnSTtnQkFDbEM7WUFDRjtZQUVBLElBQUk3STtZQUVKLElBQUk7Z0JBQ0ZBLGFBQWF0QyxNQUFNa0w7WUFDckIsRUFBRSxPQUFPN0YsS0FBSztnQkFDWixNQUFNOEYsVUFBVTtnQkFDaEJuRyxlQUFlcUMsV0FBV2xFLFFBQVFnSTtnQkFDbEM7WUFDRjtZQUVBLE1BQU1DLGlCQUFpQjdJLE9BQU9DLElBQUksQ0FBQ0Y7WUFFbkMsSUFBSThJLGVBQWVoSixNQUFNLEVBQUU7Z0JBQ3pCLElBQ0VnSixlQUFlaEosTUFBTSxLQUFLLEtBQzFCZ0osY0FBYyxDQUFDLEVBQUUsS0FBS2hNLGtCQUFrQnFGLGFBQWEsRUFDckQ7b0JBQ0EsTUFBTTBHLFVBQ0o7b0JBQ0ZuRyxlQUFlcUMsV0FBV2xFLFFBQVFnSTtvQkFDbEM7Z0JBQ0Y7Z0JBRUEsSUFBSTtvQkFDRjVELGtCQUFrQjhELE1BQU0sQ0FBQy9JLFVBQVUsQ0FBQ2xELGtCQUFrQnFGLGFBQWEsQ0FBQztnQkFDdEUsRUFBRSxPQUFPWSxLQUFLO29CQUNaLE1BQU04RixVQUFVO29CQUNoQm5HLGVBQWVxQyxXQUFXbEUsUUFBUWdJO29CQUNsQztnQkFDRjtnQkFFQTlELFVBQVVyRyxXQUFXLENBQUM1QixrQkFBa0JxRixhQUFhLENBQUMsR0FDcEQ4QztZQUNKO1FBQ0Y7UUFFQUYsVUFBVW5FLFNBQVMsQ0FBQ0MsUUFBUUMsTUFBTTRDLEtBQUszQyxVQUFVO0lBQ25EO0FBQ0Y7QUFFQTs7Ozs7O0NBTUMsR0FDRCxTQUFTaUYsa0JBQWtCakIsU0FBUyxFQUFFaEMsR0FBRztJQUN2Q2dDLFVBQVVuRyxXQUFXLEdBQUdiLFVBQVU2RSxPQUFPO0lBQ3pDbUMsVUFBVS9DLElBQUksQ0FBQyxTQUFTZTtJQUN4QmdDLFVBQVU5QyxTQUFTO0FBQ3JCO0FBRUE7Ozs7OztDQU1DLEdBQ0QsU0FBU29FLFdBQVdsSSxPQUFPO0lBQ3pCQSxRQUFRc0gsSUFBSSxHQUFHdEgsUUFBUWtILFVBQVU7SUFDakMsT0FBTzdJLElBQUl3TSxPQUFPLENBQUM3SztBQUNyQjtBQUVBOzs7Ozs7Q0FNQyxHQUNELFNBQVNpSSxXQUFXakksT0FBTztJQUN6QkEsUUFBUXNILElBQUksR0FBR2xHO0lBRWYsSUFBSSxDQUFDcEIsUUFBUThLLFVBQVUsSUFBSTlLLFFBQVE4SyxVQUFVLEtBQUssSUFBSTtRQUNwRDlLLFFBQVE4SyxVQUFVLEdBQUd6TSxJQUFJME0sSUFBSSxDQUFDL0ssUUFBUXFILElBQUksSUFBSSxLQUFLckgsUUFBUXFILElBQUk7SUFDakU7SUFFQSxPQUFPL0ksSUFBSXVNLE9BQU8sQ0FBQzdLO0FBQ3JCO0FBRUE7Ozs7Ozs7O0NBUUMsR0FDRCxTQUFTdUUsZUFBZXFDLFNBQVMsRUFBRW9FLE1BQU0sRUFBRU4sT0FBTztJQUNoRDlELFVBQVVuRyxXQUFXLEdBQUdiLFVBQVU2RSxPQUFPO0lBRXpDLE1BQU1HLE1BQU0sSUFBSU0sTUFBTXdGO0lBQ3RCeEYsTUFBTStGLGlCQUFpQixDQUFDckcsS0FBS0w7SUFFN0IsSUFBSXlHLE9BQU9FLFNBQVMsRUFBRTtRQUNwQkYsT0FBT2YsS0FBSztRQUVaLElBQUllLE9BQU90SSxNQUFNLElBQUksQ0FBQ3NJLE9BQU90SSxNQUFNLENBQUN5SSxTQUFTLEVBQUU7WUFDN0MsRUFBRTtZQUNGLHdFQUF3RTtZQUN4RSwwQ0FBMEM7WUFDMUMsZ0RBQWdEO1lBQ2hELEVBQUU7WUFDRkgsT0FBT3RJLE1BQU0sQ0FBQ21DLE9BQU87UUFDdkI7UUFFQW1HLE9BQU9JLElBQUksQ0FBQyxTQUFTeEUsVUFBVTlDLFNBQVMsQ0FBQ2dCLElBQUksQ0FBQzhCO1FBQzlDQSxVQUFVL0MsSUFBSSxDQUFDLFNBQVNlO0lBQzFCLE9BQU87UUFDTG9HLE9BQU9uRyxPQUFPLENBQUNEO1FBQ2ZvRyxPQUFPSSxJQUFJLENBQUMsU0FBU3hFLFVBQVUvQyxJQUFJLENBQUNpQixJQUFJLENBQUM4QixXQUFXO1FBQ3BEb0UsT0FBT0ksSUFBSSxDQUFDLFNBQVN4RSxVQUFVOUMsU0FBUyxDQUFDZ0IsSUFBSSxDQUFDOEI7SUFDaEQ7QUFDRjtBQUVBOzs7Ozs7OztDQVFDLEdBQ0QsU0FBU3hCLGVBQWV3QixTQUFTLEVBQUV2QyxJQUFJLEVBQUVZLEVBQUU7SUFDekMsSUFBSVosTUFBTTtRQUNSLE1BQU0xQyxTQUFTbkMsU0FBUzZFLE1BQU0xQyxNQUFNO1FBRXBDLEVBQUU7UUFDRiw0RUFBNEU7UUFDNUUsdUVBQXVFO1FBQ3ZFLHFFQUFxRTtRQUNyRSxnQ0FBZ0M7UUFDaEMsRUFBRTtRQUNGLElBQUlpRixVQUFVL0YsT0FBTyxFQUFFK0YsVUFBVWhHLE9BQU8sQ0FBQ2dCLGNBQWMsSUFBSUQ7YUFDdERpRixVQUFVOUYsZUFBZSxJQUFJYTtJQUNwQztJQUVBLElBQUlzRCxJQUFJO1FBQ04sTUFBTUwsTUFBTSxJQUFJTSxNQUNkLENBQUMsa0NBQWtDLEVBQUUwQixVQUFVdEUsVUFBVSxDQUFDLENBQUMsQ0FBQyxHQUMxRCxDQUFDLENBQUMsRUFBRTdDLFdBQVcsQ0FBQ21ILFVBQVV0RSxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFNUMyQyxHQUFHTDtJQUNMO0FBQ0Y7QUFFQTs7Ozs7O0NBTUMsR0FDRCxTQUFTN0IsbUJBQW1CcUIsSUFBSSxFQUFFaUgsTUFBTTtJQUN0QyxNQUFNekUsWUFBWSxJQUFJLENBQUMxSCxXQUFXO0lBRWxDMEgsVUFBVXpHLG1CQUFtQixHQUFHO0lBQ2hDeUcsVUFBVXZHLGFBQWEsR0FBR2dMO0lBQzFCekUsVUFBVTFHLFVBQVUsR0FBR2tFO0lBRXZCLElBQUl3QyxVQUFVL0YsT0FBTyxDQUFDM0IsV0FBVyxLQUFLa0MsV0FBVztJQUVqRHdGLFVBQVUvRixPQUFPLENBQUM0RixjQUFjLENBQUMsUUFBUWhEO0lBQ3pDNkgsUUFBUUMsUUFBUSxDQUFDQyxRQUFRNUUsVUFBVS9GLE9BQU87SUFFMUMsSUFBSXVELFNBQVMsTUFBTXdDLFVBQVV6QyxLQUFLO1NBQzdCeUMsVUFBVXpDLEtBQUssQ0FBQ0MsTUFBTWlIO0FBQzdCO0FBRUE7Ozs7Q0FJQyxHQUNELFNBQVNySTtJQUNQLElBQUksQ0FBQzlELFdBQVcsQ0FBQzJCLE9BQU8sQ0FBQzJLLE1BQU07QUFDakM7QUFFQTs7Ozs7Q0FLQyxHQUNELFNBQVN2SSxnQkFBZ0IyQixHQUFHO0lBQzFCLE1BQU1nQyxZQUFZLElBQUksQ0FBQzFILFdBQVc7SUFFbEMsSUFBSTBILFVBQVUvRixPQUFPLENBQUMzQixXQUFXLEtBQUtrQyxXQUFXO1FBQy9Dd0YsVUFBVS9GLE9BQU8sQ0FBQzRGLGNBQWMsQ0FBQyxRQUFRaEQ7UUFFekMsRUFBRTtRQUNGLHdFQUF3RTtRQUN4RSxnREFBZ0Q7UUFDaEQsRUFBRTtRQUNGNkgsUUFBUUMsUUFBUSxDQUFDQyxRQUFRNUUsVUFBVS9GLE9BQU87UUFFMUMrRixVQUFVekMsS0FBSyxDQUFDUyxHQUFHLENBQUMzRixZQUFZO0lBQ2xDO0lBRUEySCxVQUFVL0MsSUFBSSxDQUFDLFNBQVNlO0FBQzFCO0FBRUE7Ozs7Q0FJQyxHQUNELFNBQVM2RztJQUNQLElBQUksQ0FBQ3ZNLFdBQVcsQ0FBQzRFLFNBQVM7QUFDNUI7QUFFQTs7Ozs7Q0FLQyxHQUNELFNBQVNaLGtCQUFrQm1CLElBQUk7SUFDN0IsSUFBSSxDQUFDbkYsV0FBVyxDQUFDMkUsSUFBSSxDQUFDLFdBQVdRO0FBQ25DO0FBRUE7Ozs7O0NBS0MsR0FDRCxTQUFTbEIsZUFBZWtCLElBQUk7SUFDMUIsTUFBTXVDLFlBQVksSUFBSSxDQUFDMUgsV0FBVztJQUVsQzBILFVBQVV2QixJQUFJLENBQUNoQixNQUFNLENBQUN1QyxVQUFVN0YsU0FBUyxFQUFFNUI7SUFDM0N5SCxVQUFVL0MsSUFBSSxDQUFDLFFBQVFRO0FBQ3pCO0FBRUE7Ozs7O0NBS0MsR0FDRCxTQUFTakIsZUFBZWlCLElBQUk7SUFDMUIsSUFBSSxDQUFDbkYsV0FBVyxDQUFDMkUsSUFBSSxDQUFDLFFBQVFRO0FBQ2hDO0FBRUE7Ozs7O0NBS0MsR0FDRCxTQUFTbUgsT0FBT1IsTUFBTTtJQUNwQkEsT0FBT1EsTUFBTTtBQUNmO0FBRUE7Ozs7Q0FJQyxHQUNELFNBQVNoSTtJQUNQLE1BQU1vRCxZQUFZLElBQUksQ0FBQzFILFdBQVc7SUFFbEMsSUFBSSxDQUFDdUgsY0FBYyxDQUFDLFNBQVNqRDtJQUM3QixJQUFJLENBQUNpRCxjQUFjLENBQUMsUUFBUWhEO0lBQzVCLElBQUksQ0FBQ2dELGNBQWMsQ0FBQyxPQUFPL0M7SUFFM0JrRCxVQUFVbkcsV0FBVyxHQUFHYixVQUFVNkUsT0FBTztJQUV6QyxJQUFJaUg7SUFFSixFQUFFO0lBQ0YsNkVBQTZFO0lBQzdFLDRFQUE0RTtJQUM1RSwyRUFBMkU7SUFDM0UsNkVBQTZFO0lBQzdFLDZFQUE2RTtJQUM3RSw4RUFBOEU7SUFDOUUsdUNBQXVDO0lBQ3ZDLEVBQUU7SUFDRixJQUNFLENBQUMsSUFBSSxDQUFDQyxjQUFjLENBQUNDLFVBQVUsSUFDL0IsQ0FBQ2hGLFVBQVV6RyxtQkFBbUIsSUFDOUIsQ0FBQ3lHLFVBQVVqRyxTQUFTLENBQUNlLGNBQWMsQ0FBQ2dELFlBQVksSUFDaEQsQ0FBQ2dILFFBQVE5RSxVQUFVL0YsT0FBTyxDQUFDZ0wsSUFBSSxFQUFDLE1BQU8sTUFDdkM7UUFDQWpGLFVBQVVqRyxTQUFTLENBQUNtTCxLQUFLLENBQUNKO0lBQzVCO0lBRUE5RSxVQUFVakcsU0FBUyxDQUFDZ0UsR0FBRztJQUV2QixJQUFJLENBQUN6RixXQUFXLEdBQUdrQztJQUVuQjJLLGFBQWFuRixVQUFVdEcsV0FBVztJQUVsQyxJQUNFc0csVUFBVWpHLFNBQVMsQ0FBQ2UsY0FBYyxDQUFDc0ssUUFBUSxJQUMzQ3BGLFVBQVVqRyxTQUFTLENBQUNlLGNBQWMsQ0FBQ2dELFlBQVksRUFDL0M7UUFDQWtDLFVBQVU5QyxTQUFTO0lBQ3JCLE9BQU87UUFDTDhDLFVBQVVqRyxTQUFTLENBQUNtQyxFQUFFLENBQUMsU0FBUzJJO1FBQ2hDN0UsVUFBVWpHLFNBQVMsQ0FBQ21DLEVBQUUsQ0FBQyxVQUFVMkk7SUFDbkM7QUFDRjtBQUVBOzs7OztDQUtDLEdBQ0QsU0FBU2hJLGFBQWFpSSxLQUFLO0lBQ3pCLElBQUksQ0FBQyxJQUFJLENBQUN4TSxXQUFXLENBQUN5QixTQUFTLENBQUNtTCxLQUFLLENBQUNKLFFBQVE7UUFDNUMsSUFBSSxDQUFDTyxLQUFLO0lBQ1o7QUFDRjtBQUVBOzs7O0NBSUMsR0FDRCxTQUFTdkk7SUFDUCxNQUFNa0QsWUFBWSxJQUFJLENBQUMxSCxXQUFXO0lBRWxDMEgsVUFBVW5HLFdBQVcsR0FBR2IsVUFBVTZFLE9BQU87SUFDekNtQyxVQUFVakcsU0FBUyxDQUFDZ0UsR0FBRztJQUN2QixJQUFJLENBQUNBLEdBQUc7QUFDVjtBQUVBOzs7O0NBSUMsR0FDRCxTQUFTaEI7SUFDUCxNQUFNaUQsWUFBWSxJQUFJLENBQUMxSCxXQUFXO0lBRWxDLElBQUksQ0FBQ3VILGNBQWMsQ0FBQyxTQUFTOUM7SUFDN0IsSUFBSSxDQUFDYixFQUFFLENBQUMsU0FBUzNEO0lBRWpCLElBQUl5SCxXQUFXO1FBQ2JBLFVBQVVuRyxXQUFXLEdBQUdiLFVBQVU2RSxPQUFPO1FBQ3pDLElBQUksQ0FBQ0ksT0FBTztJQUNkO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jc2EvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtd3MtY29ubmVjdGlvbi9ub2RlX21vZHVsZXMvd3MvbGliL3dlYnNvY2tldC5qcz82MTk0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludCBuby11bnVzZWQtdmFyczogW1wiZXJyb3JcIiwgeyBcInZhcnNJZ25vcmVQYXR0ZXJuXCI6IFwiXlJlYWRhYmxlJFwiIH1dICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJyk7XG5jb25zdCBodHRwcyA9IHJlcXVpcmUoJ2h0dHBzJyk7XG5jb25zdCBodHRwID0gcmVxdWlyZSgnaHR0cCcpO1xuY29uc3QgbmV0ID0gcmVxdWlyZSgnbmV0Jyk7XG5jb25zdCB0bHMgPSByZXF1aXJlKCd0bHMnKTtcbmNvbnN0IHsgcmFuZG9tQnl0ZXMsIGNyZWF0ZUhhc2ggfSA9IHJlcXVpcmUoJ2NyeXB0bycpO1xuY29uc3QgeyBSZWFkYWJsZSB9ID0gcmVxdWlyZSgnc3RyZWFtJyk7XG5jb25zdCB7IFVSTCB9ID0gcmVxdWlyZSgndXJsJyk7XG5cbmNvbnN0IFBlck1lc3NhZ2VEZWZsYXRlID0gcmVxdWlyZSgnLi9wZXJtZXNzYWdlLWRlZmxhdGUnKTtcbmNvbnN0IFJlY2VpdmVyID0gcmVxdWlyZSgnLi9yZWNlaXZlcicpO1xuY29uc3QgU2VuZGVyID0gcmVxdWlyZSgnLi9zZW5kZXInKTtcbmNvbnN0IHtcbiAgQklOQVJZX1RZUEVTLFxuICBFTVBUWV9CVUZGRVIsXG4gIEdVSUQsXG4gIGtTdGF0dXNDb2RlLFxuICBrV2ViU29ja2V0LFxuICBOT09QXG59ID0gcmVxdWlyZSgnLi9jb25zdGFudHMnKTtcbmNvbnN0IHsgYWRkRXZlbnRMaXN0ZW5lciwgcmVtb3ZlRXZlbnRMaXN0ZW5lciB9ID0gcmVxdWlyZSgnLi9ldmVudC10YXJnZXQnKTtcbmNvbnN0IHsgZm9ybWF0LCBwYXJzZSB9ID0gcmVxdWlyZSgnLi9leHRlbnNpb24nKTtcbmNvbnN0IHsgdG9CdWZmZXIgfSA9IHJlcXVpcmUoJy4vYnVmZmVyLXV0aWwnKTtcblxuY29uc3QgcmVhZHlTdGF0ZXMgPSBbJ0NPTk5FQ1RJTkcnLCAnT1BFTicsICdDTE9TSU5HJywgJ0NMT1NFRCddO1xuY29uc3QgcHJvdG9jb2xWZXJzaW9ucyA9IFs4LCAxM107XG5jb25zdCBjbG9zZVRpbWVvdXQgPSAzMCAqIDEwMDA7XG5cbi8qKlxuICogQ2xhc3MgcmVwcmVzZW50aW5nIGEgV2ViU29ja2V0LlxuICpcbiAqIEBleHRlbmRzIEV2ZW50RW1pdHRlclxuICovXG5jbGFzcyBXZWJTb2NrZXQgZXh0ZW5kcyBFdmVudEVtaXR0ZXIge1xuICAvKipcbiAgICogQ3JlYXRlIGEgbmV3IGBXZWJTb2NrZXRgLlxuICAgKlxuICAgKiBAcGFyYW0geyhTdHJpbmd8VVJMKX0gYWRkcmVzcyBUaGUgVVJMIHRvIHdoaWNoIHRvIGNvbm5lY3RcbiAgICogQHBhcmFtIHsoU3RyaW5nfFN0cmluZ1tdKX0gW3Byb3RvY29sc10gVGhlIHN1YnByb3RvY29sc1xuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIENvbm5lY3Rpb24gb3B0aW9uc1xuICAgKi9cbiAgY29uc3RydWN0b3IoYWRkcmVzcywgcHJvdG9jb2xzLCBvcHRpb25zKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuX2JpbmFyeVR5cGUgPSBCSU5BUllfVFlQRVNbMF07XG4gICAgdGhpcy5fY2xvc2VDb2RlID0gMTAwNjtcbiAgICB0aGlzLl9jbG9zZUZyYW1lUmVjZWl2ZWQgPSBmYWxzZTtcbiAgICB0aGlzLl9jbG9zZUZyYW1lU2VudCA9IGZhbHNlO1xuICAgIHRoaXMuX2Nsb3NlTWVzc2FnZSA9ICcnO1xuICAgIHRoaXMuX2Nsb3NlVGltZXIgPSBudWxsO1xuICAgIHRoaXMuX2V4dGVuc2lvbnMgPSB7fTtcbiAgICB0aGlzLl9wcm90b2NvbCA9ICcnO1xuICAgIHRoaXMuX3JlYWR5U3RhdGUgPSBXZWJTb2NrZXQuQ09OTkVDVElORztcbiAgICB0aGlzLl9yZWNlaXZlciA9IG51bGw7XG4gICAgdGhpcy5fc2VuZGVyID0gbnVsbDtcbiAgICB0aGlzLl9zb2NrZXQgPSBudWxsO1xuXG4gICAgaWYgKGFkZHJlc3MgIT09IG51bGwpIHtcbiAgICAgIHRoaXMuX2J1ZmZlcmVkQW1vdW50ID0gMDtcbiAgICAgIHRoaXMuX2lzU2VydmVyID0gZmFsc2U7XG4gICAgICB0aGlzLl9yZWRpcmVjdHMgPSAwO1xuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShwcm90b2NvbHMpKSB7XG4gICAgICAgIHByb3RvY29scyA9IHByb3RvY29scy5qb2luKCcsICcpO1xuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgcHJvdG9jb2xzID09PSAnb2JqZWN0JyAmJiBwcm90b2NvbHMgIT09IG51bGwpIHtcbiAgICAgICAgb3B0aW9ucyA9IHByb3RvY29scztcbiAgICAgICAgcHJvdG9jb2xzID0gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgICBpbml0QXNDbGllbnQodGhpcywgYWRkcmVzcywgcHJvdG9jb2xzLCBvcHRpb25zKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5faXNTZXJ2ZXIgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBUaGlzIGRldmlhdGVzIGZyb20gdGhlIFdIQVRXRyBpbnRlcmZhY2Ugc2luY2Ugd3MgZG9lc24ndCBzdXBwb3J0IHRoZVxuICAgKiByZXF1aXJlZCBkZWZhdWx0IFwiYmxvYlwiIHR5cGUgKGluc3RlYWQgd2UgZGVmaW5lIGEgY3VzdG9tIFwibm9kZWJ1ZmZlclwiXG4gICAqIHR5cGUpLlxuICAgKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKi9cbiAgZ2V0IGJpbmFyeVR5cGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2JpbmFyeVR5cGU7XG4gIH1cblxuICBzZXQgYmluYXJ5VHlwZSh0eXBlKSB7XG4gICAgaWYgKCFCSU5BUllfVFlQRVMuaW5jbHVkZXModHlwZSkpIHJldHVybjtcblxuICAgIHRoaXMuX2JpbmFyeVR5cGUgPSB0eXBlO1xuXG4gICAgLy9cbiAgICAvLyBBbGxvdyB0byBjaGFuZ2UgYGJpbmFyeVR5cGVgIG9uIHRoZSBmbHkuXG4gICAgLy9cbiAgICBpZiAodGhpcy5fcmVjZWl2ZXIpIHRoaXMuX3JlY2VpdmVyLl9iaW5hcnlUeXBlID0gdHlwZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKi9cbiAgZ2V0IGJ1ZmZlcmVkQW1vdW50KCkge1xuICAgIGlmICghdGhpcy5fc29ja2V0KSByZXR1cm4gdGhpcy5fYnVmZmVyZWRBbW91bnQ7XG5cbiAgICByZXR1cm4gdGhpcy5fc29ja2V0Ll93cml0YWJsZVN0YXRlLmxlbmd0aCArIHRoaXMuX3NlbmRlci5fYnVmZmVyZWRCeXRlcztcbiAgfVxuXG4gIC8qKlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKi9cbiAgZ2V0IGV4dGVuc2lvbnMoKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuX2V4dGVuc2lvbnMpLmpvaW4oKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAdHlwZSB7RnVuY3Rpb259XG4gICAqL1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICBnZXQgb25jbG9zZSgpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgc2V0IG9uY2xvc2UobGlzdGVuZXIpIHt9XG5cbiAgLyoqXG4gICAqIEB0eXBlIHtGdW5jdGlvbn1cbiAgICovXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIGdldCBvbmVycm9yKCkge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICBzZXQgb25lcnJvcihsaXN0ZW5lcikge31cblxuICAvKipcbiAgICogQHR5cGUge0Z1bmN0aW9ufVxuICAgKi9cbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgZ2V0IG9ub3BlbigpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgc2V0IG9ub3BlbihsaXN0ZW5lcikge31cblxuICAvKipcbiAgICogQHR5cGUge0Z1bmN0aW9ufVxuICAgKi9cbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgZ2V0IG9ubWVzc2FnZSgpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgc2V0IG9ubWVzc2FnZShsaXN0ZW5lcikge31cblxuICAvKipcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICovXG4gIGdldCBwcm90b2NvbCgpIHtcbiAgICByZXR1cm4gdGhpcy5fcHJvdG9jb2w7XG4gIH1cblxuICAvKipcbiAgICogQHR5cGUge051bWJlcn1cbiAgICovXG4gIGdldCByZWFkeVN0YXRlKCkge1xuICAgIHJldHVybiB0aGlzLl9yZWFkeVN0YXRlO1xuICB9XG5cbiAgLyoqXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqL1xuICBnZXQgdXJsKCkge1xuICAgIHJldHVybiB0aGlzLl91cmw7XG4gIH1cblxuICAvKipcbiAgICogU2V0IHVwIHRoZSBzb2NrZXQgYW5kIHRoZSBpbnRlcm5hbCByZXNvdXJjZXMuXG4gICAqXG4gICAqIEBwYXJhbSB7KG5ldC5Tb2NrZXR8dGxzLlNvY2tldCl9IHNvY2tldCBUaGUgbmV0d29yayBzb2NrZXQgYmV0d2VlbiB0aGVcbiAgICogICAgIHNlcnZlciBhbmQgY2xpZW50XG4gICAqIEBwYXJhbSB7QnVmZmVyfSBoZWFkIFRoZSBmaXJzdCBwYWNrZXQgb2YgdGhlIHVwZ3JhZGVkIHN0cmVhbVxuICAgKiBAcGFyYW0ge051bWJlcn0gW21heFBheWxvYWQ9MF0gVGhlIG1heGltdW0gYWxsb3dlZCBtZXNzYWdlIHNpemVcbiAgICogQHByaXZhdGVcbiAgICovXG4gIHNldFNvY2tldChzb2NrZXQsIGhlYWQsIG1heFBheWxvYWQpIHtcbiAgICBjb25zdCByZWNlaXZlciA9IG5ldyBSZWNlaXZlcihcbiAgICAgIHRoaXMuYmluYXJ5VHlwZSxcbiAgICAgIHRoaXMuX2V4dGVuc2lvbnMsXG4gICAgICB0aGlzLl9pc1NlcnZlcixcbiAgICAgIG1heFBheWxvYWRcbiAgICApO1xuXG4gICAgdGhpcy5fc2VuZGVyID0gbmV3IFNlbmRlcihzb2NrZXQsIHRoaXMuX2V4dGVuc2lvbnMpO1xuICAgIHRoaXMuX3JlY2VpdmVyID0gcmVjZWl2ZXI7XG4gICAgdGhpcy5fc29ja2V0ID0gc29ja2V0O1xuXG4gICAgcmVjZWl2ZXJba1dlYlNvY2tldF0gPSB0aGlzO1xuICAgIHNvY2tldFtrV2ViU29ja2V0XSA9IHRoaXM7XG5cbiAgICByZWNlaXZlci5vbignY29uY2x1ZGUnLCByZWNlaXZlck9uQ29uY2x1ZGUpO1xuICAgIHJlY2VpdmVyLm9uKCdkcmFpbicsIHJlY2VpdmVyT25EcmFpbik7XG4gICAgcmVjZWl2ZXIub24oJ2Vycm9yJywgcmVjZWl2ZXJPbkVycm9yKTtcbiAgICByZWNlaXZlci5vbignbWVzc2FnZScsIHJlY2VpdmVyT25NZXNzYWdlKTtcbiAgICByZWNlaXZlci5vbigncGluZycsIHJlY2VpdmVyT25QaW5nKTtcbiAgICByZWNlaXZlci5vbigncG9uZycsIHJlY2VpdmVyT25Qb25nKTtcblxuICAgIHNvY2tldC5zZXRUaW1lb3V0KDApO1xuICAgIHNvY2tldC5zZXROb0RlbGF5KCk7XG5cbiAgICBpZiAoaGVhZC5sZW5ndGggPiAwKSBzb2NrZXQudW5zaGlmdChoZWFkKTtcblxuICAgIHNvY2tldC5vbignY2xvc2UnLCBzb2NrZXRPbkNsb3NlKTtcbiAgICBzb2NrZXQub24oJ2RhdGEnLCBzb2NrZXRPbkRhdGEpO1xuICAgIHNvY2tldC5vbignZW5kJywgc29ja2V0T25FbmQpO1xuICAgIHNvY2tldC5vbignZXJyb3InLCBzb2NrZXRPbkVycm9yKTtcblxuICAgIHRoaXMuX3JlYWR5U3RhdGUgPSBXZWJTb2NrZXQuT1BFTjtcbiAgICB0aGlzLmVtaXQoJ29wZW4nKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBFbWl0IHRoZSBgJ2Nsb3NlJ2AgZXZlbnQuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBlbWl0Q2xvc2UoKSB7XG4gICAgaWYgKCF0aGlzLl9zb2NrZXQpIHtcbiAgICAgIHRoaXMuX3JlYWR5U3RhdGUgPSBXZWJTb2NrZXQuQ0xPU0VEO1xuICAgICAgdGhpcy5lbWl0KCdjbG9zZScsIHRoaXMuX2Nsb3NlQ29kZSwgdGhpcy5fY2xvc2VNZXNzYWdlKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fZXh0ZW5zaW9uc1tQZXJNZXNzYWdlRGVmbGF0ZS5leHRlbnNpb25OYW1lXSkge1xuICAgICAgdGhpcy5fZXh0ZW5zaW9uc1tQZXJNZXNzYWdlRGVmbGF0ZS5leHRlbnNpb25OYW1lXS5jbGVhbnVwKCk7XG4gICAgfVxuXG4gICAgdGhpcy5fcmVjZWl2ZXIucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fcmVhZHlTdGF0ZSA9IFdlYlNvY2tldC5DTE9TRUQ7XG4gICAgdGhpcy5lbWl0KCdjbG9zZScsIHRoaXMuX2Nsb3NlQ29kZSwgdGhpcy5fY2xvc2VNZXNzYWdlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTdGFydCBhIGNsb3NpbmcgaGFuZHNoYWtlLlxuICAgKlxuICAgKiAgICAgICAgICArLS0tLS0tLS0tLSsgICArLS0tLS0tLS0tLS0rICAgKy0tLS0tLS0tLS0rXG4gICAqICAgICAtIC0gLXx3cy5jbG9zZSgpfC0tPnxjbG9zZSBmcmFtZXwtLT58d3MuY2xvc2UoKXwtIC0gLVxuICAgKiAgICB8ICAgICArLS0tLS0tLS0tLSsgICArLS0tLS0tLS0tLS0rICAgKy0tLS0tLS0tLS0rICAgICB8XG4gICAqICAgICAgICAgICstLS0tLS0tLS0tKyAgICstLS0tLS0tLS0tLSsgICAgICAgICB8XG4gICAqIENMT1NJTkcgIHx3cy5jbG9zZSgpfDwtLXxjbG9zZSBmcmFtZXw8LS0rLS0tLS0rICAgICAgIENMT1NJTkdcbiAgICogICAgICAgICAgKy0tLS0tLS0tLS0rICAgKy0tLS0tLS0tLS0tKyAgIHxcbiAgICogICAgfCAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgIHwgICArLS0tKyAgICAgICAgfFxuICAgKiAgICAgICAgICAgICAgICArLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKy0tPnxmaW58IC0gLSAtIC1cbiAgICogICAgfCAgICAgICAgICstLS0rICAgICAgICAgICAgICAgICAgICAgIHwgICArLS0tK1xuICAgKiAgICAgLSAtIC0gLSAtfGZpbnw8LS0tLS0tLS0tLS0tLS0tLS0tLS0tK1xuICAgKiAgICAgICAgICAgICAgKy0tLStcbiAgICpcbiAgICogQHBhcmFtIHtOdW1iZXJ9IFtjb2RlXSBTdGF0dXMgY29kZSBleHBsYWluaW5nIHdoeSB0aGUgY29ubmVjdGlvbiBpcyBjbG9zaW5nXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbZGF0YV0gQSBzdHJpbmcgZXhwbGFpbmluZyB3aHkgdGhlIGNvbm5lY3Rpb24gaXMgY2xvc2luZ1xuICAgKiBAcHVibGljXG4gICAqL1xuICBjbG9zZShjb2RlLCBkYXRhKSB7XG4gICAgaWYgKHRoaXMucmVhZHlTdGF0ZSA9PT0gV2ViU29ja2V0LkNMT1NFRCkgcmV0dXJuO1xuICAgIGlmICh0aGlzLnJlYWR5U3RhdGUgPT09IFdlYlNvY2tldC5DT05ORUNUSU5HKSB7XG4gICAgICBjb25zdCBtc2cgPSAnV2ViU29ja2V0IHdhcyBjbG9zZWQgYmVmb3JlIHRoZSBjb25uZWN0aW9uIHdhcyBlc3RhYmxpc2hlZCc7XG4gICAgICByZXR1cm4gYWJvcnRIYW5kc2hha2UodGhpcywgdGhpcy5fcmVxLCBtc2cpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnJlYWR5U3RhdGUgPT09IFdlYlNvY2tldC5DTE9TSU5HKSB7XG4gICAgICBpZiAoXG4gICAgICAgIHRoaXMuX2Nsb3NlRnJhbWVTZW50ICYmXG4gICAgICAgICh0aGlzLl9jbG9zZUZyYW1lUmVjZWl2ZWQgfHwgdGhpcy5fcmVjZWl2ZXIuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkKVxuICAgICAgKSB7XG4gICAgICAgIHRoaXMuX3NvY2tldC5lbmQoKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuX3JlYWR5U3RhdGUgPSBXZWJTb2NrZXQuQ0xPU0lORztcbiAgICB0aGlzLl9zZW5kZXIuY2xvc2UoY29kZSwgZGF0YSwgIXRoaXMuX2lzU2VydmVyLCAoZXJyKSA9PiB7XG4gICAgICAvL1xuICAgICAgLy8gVGhpcyBlcnJvciBpcyBoYW5kbGVkIGJ5IHRoZSBgJ2Vycm9yJ2AgbGlzdGVuZXIgb24gdGhlIHNvY2tldC4gV2Ugb25seVxuICAgICAgLy8gd2FudCB0byBrbm93IGlmIHRoZSBjbG9zZSBmcmFtZSBoYXMgYmVlbiBzZW50IGhlcmUuXG4gICAgICAvL1xuICAgICAgaWYgKGVycikgcmV0dXJuO1xuXG4gICAgICB0aGlzLl9jbG9zZUZyYW1lU2VudCA9IHRydWU7XG5cbiAgICAgIGlmIChcbiAgICAgICAgdGhpcy5fY2xvc2VGcmFtZVJlY2VpdmVkIHx8XG4gICAgICAgIHRoaXMuX3JlY2VpdmVyLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZFxuICAgICAgKSB7XG4gICAgICAgIHRoaXMuX3NvY2tldC5lbmQoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vXG4gICAgLy8gU3BlY2lmeSBhIHRpbWVvdXQgZm9yIHRoZSBjbG9zaW5nIGhhbmRzaGFrZSB0byBjb21wbGV0ZS5cbiAgICAvL1xuICAgIHRoaXMuX2Nsb3NlVGltZXIgPSBzZXRUaW1lb3V0KFxuICAgICAgdGhpcy5fc29ja2V0LmRlc3Ryb3kuYmluZCh0aGlzLl9zb2NrZXQpLFxuICAgICAgY2xvc2VUaW1lb3V0XG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZW5kIGEgcGluZy5cbiAgICpcbiAgICogQHBhcmFtIHsqfSBbZGF0YV0gVGhlIGRhdGEgdG8gc2VuZFxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IFttYXNrXSBJbmRpY2F0ZXMgd2hldGhlciBvciBub3QgdG8gbWFzayBgZGF0YWBcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NiXSBDYWxsYmFjayB3aGljaCBpcyBleGVjdXRlZCB3aGVuIHRoZSBwaW5nIGlzIHNlbnRcbiAgICogQHB1YmxpY1xuICAgKi9cbiAgcGluZyhkYXRhLCBtYXNrLCBjYikge1xuICAgIGlmICh0aGlzLnJlYWR5U3RhdGUgPT09IFdlYlNvY2tldC5DT05ORUNUSU5HKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1dlYlNvY2tldCBpcyBub3Qgb3BlbjogcmVhZHlTdGF0ZSAwIChDT05ORUNUSU5HKScpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgY2IgPSBkYXRhO1xuICAgICAgZGF0YSA9IG1hc2sgPSB1bmRlZmluZWQ7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgbWFzayA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgY2IgPSBtYXNrO1xuICAgICAgbWFzayA9IHVuZGVmaW5lZDtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGRhdGEgPT09ICdudW1iZXInKSBkYXRhID0gZGF0YS50b1N0cmluZygpO1xuXG4gICAgaWYgKHRoaXMucmVhZHlTdGF0ZSAhPT0gV2ViU29ja2V0Lk9QRU4pIHtcbiAgICAgIHNlbmRBZnRlckNsb3NlKHRoaXMsIGRhdGEsIGNiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAobWFzayA9PT0gdW5kZWZpbmVkKSBtYXNrID0gIXRoaXMuX2lzU2VydmVyO1xuICAgIHRoaXMuX3NlbmRlci5waW5nKGRhdGEgfHwgRU1QVFlfQlVGRkVSLCBtYXNrLCBjYik7XG4gIH1cblxuICAvKipcbiAgICogU2VuZCBhIHBvbmcuXG4gICAqXG4gICAqIEBwYXJhbSB7Kn0gW2RhdGFdIFRoZSBkYXRhIHRvIHNlbmRcbiAgICogQHBhcmFtIHtCb29sZWFufSBbbWFza10gSW5kaWNhdGVzIHdoZXRoZXIgb3Igbm90IHRvIG1hc2sgYGRhdGFgXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYl0gQ2FsbGJhY2sgd2hpY2ggaXMgZXhlY3V0ZWQgd2hlbiB0aGUgcG9uZyBpcyBzZW50XG4gICAqIEBwdWJsaWNcbiAgICovXG4gIHBvbmcoZGF0YSwgbWFzaywgY2IpIHtcbiAgICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSBXZWJTb2NrZXQuQ09OTkVDVElORykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdXZWJTb2NrZXQgaXMgbm90IG9wZW46IHJlYWR5U3RhdGUgMCAoQ09OTkVDVElORyknKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGRhdGEgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGNiID0gZGF0YTtcbiAgICAgIGRhdGEgPSBtYXNrID0gdW5kZWZpbmVkO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIG1hc2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGNiID0gbWFzaztcbiAgICAgIG1hc2sgPSB1bmRlZmluZWQ7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBkYXRhID09PSAnbnVtYmVyJykgZGF0YSA9IGRhdGEudG9TdHJpbmcoKTtcblxuICAgIGlmICh0aGlzLnJlYWR5U3RhdGUgIT09IFdlYlNvY2tldC5PUEVOKSB7XG4gICAgICBzZW5kQWZ0ZXJDbG9zZSh0aGlzLCBkYXRhLCBjYik7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKG1hc2sgPT09IHVuZGVmaW5lZCkgbWFzayA9ICF0aGlzLl9pc1NlcnZlcjtcbiAgICB0aGlzLl9zZW5kZXIucG9uZyhkYXRhIHx8IEVNUFRZX0JVRkZFUiwgbWFzaywgY2IpO1xuICB9XG5cbiAgLyoqXG4gICAqIFNlbmQgYSBkYXRhIG1lc3NhZ2UuXG4gICAqXG4gICAqIEBwYXJhbSB7Kn0gZGF0YSBUaGUgbWVzc2FnZSB0byBzZW5kXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gT3B0aW9ucyBvYmplY3RcbiAgICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5jb21wcmVzc10gU3BlY2lmaWVzIHdoZXRoZXIgb3Igbm90IHRvIGNvbXByZXNzXG4gICAqICAgICBgZGF0YWBcbiAgICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5iaW5hcnldIFNwZWNpZmllcyB3aGV0aGVyIGBkYXRhYCBpcyBiaW5hcnkgb3JcbiAgICogICAgIHRleHRcbiAgICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5maW49dHJ1ZV0gU3BlY2lmaWVzIHdoZXRoZXIgdGhlIGZyYWdtZW50IGlzIHRoZVxuICAgKiAgICAgbGFzdCBvbmVcbiAgICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5tYXNrXSBTcGVjaWZpZXMgd2hldGhlciBvciBub3QgdG8gbWFzayBgZGF0YWBcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NiXSBDYWxsYmFjayB3aGljaCBpcyBleGVjdXRlZCB3aGVuIGRhdGEgaXMgd3JpdHRlbiBvdXRcbiAgICogQHB1YmxpY1xuICAgKi9cbiAgc2VuZChkYXRhLCBvcHRpb25zLCBjYikge1xuICAgIGlmICh0aGlzLnJlYWR5U3RhdGUgPT09IFdlYlNvY2tldC5DT05ORUNUSU5HKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1dlYlNvY2tldCBpcyBub3Qgb3BlbjogcmVhZHlTdGF0ZSAwIChDT05ORUNUSU5HKScpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgY2IgPSBvcHRpb25zO1xuICAgICAgb3B0aW9ucyA9IHt9O1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ251bWJlcicpIGRhdGEgPSBkYXRhLnRvU3RyaW5nKCk7XG5cbiAgICBpZiAodGhpcy5yZWFkeVN0YXRlICE9PSBXZWJTb2NrZXQuT1BFTikge1xuICAgICAgc2VuZEFmdGVyQ2xvc2UodGhpcywgZGF0YSwgY2IpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IG9wdHMgPSB7XG4gICAgICBiaW5hcnk6IHR5cGVvZiBkYXRhICE9PSAnc3RyaW5nJyxcbiAgICAgIG1hc2s6ICF0aGlzLl9pc1NlcnZlcixcbiAgICAgIGNvbXByZXNzOiB0cnVlLFxuICAgICAgZmluOiB0cnVlLFxuICAgICAgLi4ub3B0aW9uc1xuICAgIH07XG5cbiAgICBpZiAoIXRoaXMuX2V4dGVuc2lvbnNbUGVyTWVzc2FnZURlZmxhdGUuZXh0ZW5zaW9uTmFtZV0pIHtcbiAgICAgIG9wdHMuY29tcHJlc3MgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB0aGlzLl9zZW5kZXIuc2VuZChkYXRhIHx8IEVNUFRZX0JVRkZFUiwgb3B0cywgY2IpO1xuICB9XG5cbiAgLyoqXG4gICAqIEZvcmNpYmx5IGNsb3NlIHRoZSBjb25uZWN0aW9uLlxuICAgKlxuICAgKiBAcHVibGljXG4gICAqL1xuICB0ZXJtaW5hdGUoKSB7XG4gICAgaWYgKHRoaXMucmVhZHlTdGF0ZSA9PT0gV2ViU29ja2V0LkNMT1NFRCkgcmV0dXJuO1xuICAgIGlmICh0aGlzLnJlYWR5U3RhdGUgPT09IFdlYlNvY2tldC5DT05ORUNUSU5HKSB7XG4gICAgICBjb25zdCBtc2cgPSAnV2ViU29ja2V0IHdhcyBjbG9zZWQgYmVmb3JlIHRoZSBjb25uZWN0aW9uIHdhcyBlc3RhYmxpc2hlZCc7XG4gICAgICByZXR1cm4gYWJvcnRIYW5kc2hha2UodGhpcywgdGhpcy5fcmVxLCBtc2cpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9zb2NrZXQpIHtcbiAgICAgIHRoaXMuX3JlYWR5U3RhdGUgPSBXZWJTb2NrZXQuQ0xPU0lORztcbiAgICAgIHRoaXMuX3NvY2tldC5kZXN0cm95KCk7XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogQGNvbnN0YW50IHtOdW1iZXJ9IENPTk5FQ1RJTkdcbiAqIEBtZW1iZXJvZiBXZWJTb2NrZXRcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KFdlYlNvY2tldCwgJ0NPTk5FQ1RJTkcnLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIHZhbHVlOiByZWFkeVN0YXRlcy5pbmRleE9mKCdDT05ORUNUSU5HJylcbn0pO1xuXG4vKipcbiAqIEBjb25zdGFudCB7TnVtYmVyfSBDT05ORUNUSU5HXG4gKiBAbWVtYmVyb2YgV2ViU29ja2V0LnByb3RvdHlwZVxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoV2ViU29ja2V0LnByb3RvdHlwZSwgJ0NPTk5FQ1RJTkcnLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIHZhbHVlOiByZWFkeVN0YXRlcy5pbmRleE9mKCdDT05ORUNUSU5HJylcbn0pO1xuXG4vKipcbiAqIEBjb25zdGFudCB7TnVtYmVyfSBPUEVOXG4gKiBAbWVtYmVyb2YgV2ViU29ja2V0XG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShXZWJTb2NrZXQsICdPUEVOJywge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICB2YWx1ZTogcmVhZHlTdGF0ZXMuaW5kZXhPZignT1BFTicpXG59KTtcblxuLyoqXG4gKiBAY29uc3RhbnQge051bWJlcn0gT1BFTlxuICogQG1lbWJlcm9mIFdlYlNvY2tldC5wcm90b3R5cGVcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KFdlYlNvY2tldC5wcm90b3R5cGUsICdPUEVOJywge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICB2YWx1ZTogcmVhZHlTdGF0ZXMuaW5kZXhPZignT1BFTicpXG59KTtcblxuLyoqXG4gKiBAY29uc3RhbnQge051bWJlcn0gQ0xPU0lOR1xuICogQG1lbWJlcm9mIFdlYlNvY2tldFxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoV2ViU29ja2V0LCAnQ0xPU0lORycsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgdmFsdWU6IHJlYWR5U3RhdGVzLmluZGV4T2YoJ0NMT1NJTkcnKVxufSk7XG5cbi8qKlxuICogQGNvbnN0YW50IHtOdW1iZXJ9IENMT1NJTkdcbiAqIEBtZW1iZXJvZiBXZWJTb2NrZXQucHJvdG90eXBlXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShXZWJTb2NrZXQucHJvdG90eXBlLCAnQ0xPU0lORycsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgdmFsdWU6IHJlYWR5U3RhdGVzLmluZGV4T2YoJ0NMT1NJTkcnKVxufSk7XG5cbi8qKlxuICogQGNvbnN0YW50IHtOdW1iZXJ9IENMT1NFRFxuICogQG1lbWJlcm9mIFdlYlNvY2tldFxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoV2ViU29ja2V0LCAnQ0xPU0VEJywge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICB2YWx1ZTogcmVhZHlTdGF0ZXMuaW5kZXhPZignQ0xPU0VEJylcbn0pO1xuXG4vKipcbiAqIEBjb25zdGFudCB7TnVtYmVyfSBDTE9TRURcbiAqIEBtZW1iZXJvZiBXZWJTb2NrZXQucHJvdG90eXBlXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShXZWJTb2NrZXQucHJvdG90eXBlLCAnQ0xPU0VEJywge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICB2YWx1ZTogcmVhZHlTdGF0ZXMuaW5kZXhPZignQ0xPU0VEJylcbn0pO1xuXG5bXG4gICdiaW5hcnlUeXBlJyxcbiAgJ2J1ZmZlcmVkQW1vdW50JyxcbiAgJ2V4dGVuc2lvbnMnLFxuICAncHJvdG9jb2wnLFxuICAncmVhZHlTdGF0ZScsXG4gICd1cmwnXG5dLmZvckVhY2goKHByb3BlcnR5KSA9PiB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShXZWJTb2NrZXQucHJvdG90eXBlLCBwcm9wZXJ0eSwgeyBlbnVtZXJhYmxlOiB0cnVlIH0pO1xufSk7XG5cbi8vXG4vLyBBZGQgdGhlIGBvbm9wZW5gLCBgb25lcnJvcmAsIGBvbmNsb3NlYCwgYW5kIGBvbm1lc3NhZ2VgIGF0dHJpYnV0ZXMuXG4vLyBTZWUgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvY29tbXMuaHRtbCN0aGUtd2Vic29ja2V0LWludGVyZmFjZVxuLy9cblsnb3BlbicsICdlcnJvcicsICdjbG9zZScsICdtZXNzYWdlJ10uZm9yRWFjaCgobWV0aG9kKSA9PiB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShXZWJTb2NrZXQucHJvdG90eXBlLCBgb24ke21ldGhvZH1gLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQoKSB7XG4gICAgICBjb25zdCBsaXN0ZW5lcnMgPSB0aGlzLmxpc3RlbmVycyhtZXRob2QpO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGxpc3RlbmVyc1tpXS5fbGlzdGVuZXIpIHJldHVybiBsaXN0ZW5lcnNbaV0uX2xpc3RlbmVyO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0sXG4gICAgc2V0KGxpc3RlbmVyKSB7XG4gICAgICBjb25zdCBsaXN0ZW5lcnMgPSB0aGlzLmxpc3RlbmVycyhtZXRob2QpO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy9cbiAgICAgICAgLy8gUmVtb3ZlIG9ubHkgdGhlIGxpc3RlbmVycyBhZGRlZCB2aWEgYGFkZEV2ZW50TGlzdGVuZXJgLlxuICAgICAgICAvL1xuICAgICAgICBpZiAobGlzdGVuZXJzW2ldLl9saXN0ZW5lcikgdGhpcy5yZW1vdmVMaXN0ZW5lcihtZXRob2QsIGxpc3RlbmVyc1tpXSk7XG4gICAgICB9XG4gICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIobWV0aG9kLCBsaXN0ZW5lcik7XG4gICAgfVxuICB9KTtcbn0pO1xuXG5XZWJTb2NrZXQucHJvdG90eXBlLmFkZEV2ZW50TGlzdGVuZXIgPSBhZGRFdmVudExpc3RlbmVyO1xuV2ViU29ja2V0LnByb3RvdHlwZS5yZW1vdmVFdmVudExpc3RlbmVyID0gcmVtb3ZlRXZlbnRMaXN0ZW5lcjtcblxubW9kdWxlLmV4cG9ydHMgPSBXZWJTb2NrZXQ7XG5cbi8qKlxuICogSW5pdGlhbGl6ZSBhIFdlYlNvY2tldCBjbGllbnQuXG4gKlxuICogQHBhcmFtIHtXZWJTb2NrZXR9IHdlYnNvY2tldCBUaGUgY2xpZW50IHRvIGluaXRpYWxpemVcbiAqIEBwYXJhbSB7KFN0cmluZ3xVUkwpfSBhZGRyZXNzIFRoZSBVUkwgdG8gd2hpY2ggdG8gY29ubmVjdFxuICogQHBhcmFtIHtTdHJpbmd9IFtwcm90b2NvbHNdIFRoZSBzdWJwcm90b2NvbHNcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gQ29ubmVjdGlvbiBvcHRpb25zXG4gKiBAcGFyYW0geyhCb29sZWFufE9iamVjdCl9IFtvcHRpb25zLnBlck1lc3NhZ2VEZWZsYXRlPXRydWVdIEVuYWJsZS9kaXNhYmxlXG4gKiAgICAgcGVybWVzc2FnZS1kZWZsYXRlXG4gKiBAcGFyYW0ge051bWJlcn0gW29wdGlvbnMuaGFuZHNoYWtlVGltZW91dF0gVGltZW91dCBpbiBtaWxsaXNlY29uZHMgZm9yIHRoZVxuICogICAgIGhhbmRzaGFrZSByZXF1ZXN0XG4gKiBAcGFyYW0ge051bWJlcn0gW29wdGlvbnMucHJvdG9jb2xWZXJzaW9uPTEzXSBWYWx1ZSBvZiB0aGVcbiAqICAgICBgU2VjLVdlYlNvY2tldC1WZXJzaW9uYCBoZWFkZXJcbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5vcmlnaW5dIFZhbHVlIG9mIHRoZSBgT3JpZ2luYCBvclxuICogICAgIGBTZWMtV2ViU29ja2V0LU9yaWdpbmAgaGVhZGVyXG4gKiBAcGFyYW0ge051bWJlcn0gW29wdGlvbnMubWF4UGF5bG9hZD0xMDQ4NTc2MDBdIFRoZSBtYXhpbXVtIGFsbG93ZWQgbWVzc2FnZVxuICogICAgIHNpemVcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuZm9sbG93UmVkaXJlY3RzPWZhbHNlXSBXaGV0aGVyIG9yIG5vdCB0byBmb2xsb3dcbiAqICAgICByZWRpcmVjdHNcbiAqIEBwYXJhbSB7TnVtYmVyfSBbb3B0aW9ucy5tYXhSZWRpcmVjdHM9MTBdIFRoZSBtYXhpbXVtIG51bWJlciBvZiByZWRpcmVjdHNcbiAqICAgICBhbGxvd2VkXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBpbml0QXNDbGllbnQod2Vic29ja2V0LCBhZGRyZXNzLCBwcm90b2NvbHMsIG9wdGlvbnMpIHtcbiAgY29uc3Qgb3B0cyA9IHtcbiAgICBwcm90b2NvbFZlcnNpb246IHByb3RvY29sVmVyc2lvbnNbMV0sXG4gICAgbWF4UGF5bG9hZDogMTAwICogMTAyNCAqIDEwMjQsXG4gICAgcGVyTWVzc2FnZURlZmxhdGU6IHRydWUsXG4gICAgZm9sbG93UmVkaXJlY3RzOiBmYWxzZSxcbiAgICBtYXhSZWRpcmVjdHM6IDEwLFxuICAgIC4uLm9wdGlvbnMsXG4gICAgY3JlYXRlQ29ubmVjdGlvbjogdW5kZWZpbmVkLFxuICAgIHNvY2tldFBhdGg6IHVuZGVmaW5lZCxcbiAgICBob3N0bmFtZTogdW5kZWZpbmVkLFxuICAgIHByb3RvY29sOiB1bmRlZmluZWQsXG4gICAgdGltZW91dDogdW5kZWZpbmVkLFxuICAgIG1ldGhvZDogdW5kZWZpbmVkLFxuICAgIGhvc3Q6IHVuZGVmaW5lZCxcbiAgICBwYXRoOiB1bmRlZmluZWQsXG4gICAgcG9ydDogdW5kZWZpbmVkXG4gIH07XG5cbiAgaWYgKCFwcm90b2NvbFZlcnNpb25zLmluY2x1ZGVzKG9wdHMucHJvdG9jb2xWZXJzaW9uKSkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKFxuICAgICAgYFVuc3VwcG9ydGVkIHByb3RvY29sIHZlcnNpb246ICR7b3B0cy5wcm90b2NvbFZlcnNpb259IGAgK1xuICAgICAgICBgKHN1cHBvcnRlZCB2ZXJzaW9uczogJHtwcm90b2NvbFZlcnNpb25zLmpvaW4oJywgJyl9KWBcbiAgICApO1xuICB9XG5cbiAgbGV0IHBhcnNlZFVybDtcblxuICBpZiAoYWRkcmVzcyBpbnN0YW5jZW9mIFVSTCkge1xuICAgIHBhcnNlZFVybCA9IGFkZHJlc3M7XG4gICAgd2Vic29ja2V0Ll91cmwgPSBhZGRyZXNzLmhyZWY7XG4gIH0gZWxzZSB7XG4gICAgcGFyc2VkVXJsID0gbmV3IFVSTChhZGRyZXNzKTtcbiAgICB3ZWJzb2NrZXQuX3VybCA9IGFkZHJlc3M7XG4gIH1cblxuICBjb25zdCBpc1VuaXhTb2NrZXQgPSBwYXJzZWRVcmwucHJvdG9jb2wgPT09ICd3cyt1bml4Oic7XG5cbiAgaWYgKCFwYXJzZWRVcmwuaG9zdCAmJiAoIWlzVW5peFNvY2tldCB8fCAhcGFyc2VkVXJsLnBhdGhuYW1lKSkge1xuICAgIGNvbnN0IGVyciA9IG5ldyBFcnJvcihgSW52YWxpZCBVUkw6ICR7d2Vic29ja2V0LnVybH1gKTtcblxuICAgIGlmICh3ZWJzb2NrZXQuX3JlZGlyZWN0cyA9PT0gMCkge1xuICAgICAgdGhyb3cgZXJyO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbWl0RXJyb3JBbmRDbG9zZSh3ZWJzb2NrZXQsIGVycik7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG5cbiAgY29uc3QgaXNTZWN1cmUgPVxuICAgIHBhcnNlZFVybC5wcm90b2NvbCA9PT0gJ3dzczonIHx8IHBhcnNlZFVybC5wcm90b2NvbCA9PT0gJ2h0dHBzOic7XG4gIGNvbnN0IGRlZmF1bHRQb3J0ID0gaXNTZWN1cmUgPyA0NDMgOiA4MDtcbiAgY29uc3Qga2V5ID0gcmFuZG9tQnl0ZXMoMTYpLnRvU3RyaW5nKCdiYXNlNjQnKTtcbiAgY29uc3QgZ2V0ID0gaXNTZWN1cmUgPyBodHRwcy5nZXQgOiBodHRwLmdldDtcbiAgbGV0IHBlck1lc3NhZ2VEZWZsYXRlO1xuXG4gIG9wdHMuY3JlYXRlQ29ubmVjdGlvbiA9IGlzU2VjdXJlID8gdGxzQ29ubmVjdCA6IG5ldENvbm5lY3Q7XG4gIG9wdHMuZGVmYXVsdFBvcnQgPSBvcHRzLmRlZmF1bHRQb3J0IHx8IGRlZmF1bHRQb3J0O1xuICBvcHRzLnBvcnQgPSBwYXJzZWRVcmwucG9ydCB8fCBkZWZhdWx0UG9ydDtcbiAgb3B0cy5ob3N0ID0gcGFyc2VkVXJsLmhvc3RuYW1lLnN0YXJ0c1dpdGgoJ1snKVxuICAgID8gcGFyc2VkVXJsLmhvc3RuYW1lLnNsaWNlKDEsIC0xKVxuICAgIDogcGFyc2VkVXJsLmhvc3RuYW1lO1xuICBvcHRzLmhlYWRlcnMgPSB7XG4gICAgJ1NlYy1XZWJTb2NrZXQtVmVyc2lvbic6IG9wdHMucHJvdG9jb2xWZXJzaW9uLFxuICAgICdTZWMtV2ViU29ja2V0LUtleSc6IGtleSxcbiAgICBDb25uZWN0aW9uOiAnVXBncmFkZScsXG4gICAgVXBncmFkZTogJ3dlYnNvY2tldCcsXG4gICAgLi4ub3B0cy5oZWFkZXJzXG4gIH07XG4gIG9wdHMucGF0aCA9IHBhcnNlZFVybC5wYXRobmFtZSArIHBhcnNlZFVybC5zZWFyY2g7XG4gIG9wdHMudGltZW91dCA9IG9wdHMuaGFuZHNoYWtlVGltZW91dDtcblxuICBpZiAob3B0cy5wZXJNZXNzYWdlRGVmbGF0ZSkge1xuICAgIHBlck1lc3NhZ2VEZWZsYXRlID0gbmV3IFBlck1lc3NhZ2VEZWZsYXRlKFxuICAgICAgb3B0cy5wZXJNZXNzYWdlRGVmbGF0ZSAhPT0gdHJ1ZSA/IG9wdHMucGVyTWVzc2FnZURlZmxhdGUgOiB7fSxcbiAgICAgIGZhbHNlLFxuICAgICAgb3B0cy5tYXhQYXlsb2FkXG4gICAgKTtcbiAgICBvcHRzLmhlYWRlcnNbJ1NlYy1XZWJTb2NrZXQtRXh0ZW5zaW9ucyddID0gZm9ybWF0KHtcbiAgICAgIFtQZXJNZXNzYWdlRGVmbGF0ZS5leHRlbnNpb25OYW1lXTogcGVyTWVzc2FnZURlZmxhdGUub2ZmZXIoKVxuICAgIH0pO1xuICB9XG4gIGlmIChwcm90b2NvbHMpIHtcbiAgICBvcHRzLmhlYWRlcnNbJ1NlYy1XZWJTb2NrZXQtUHJvdG9jb2wnXSA9IHByb3RvY29scztcbiAgfVxuICBpZiAob3B0cy5vcmlnaW4pIHtcbiAgICBpZiAob3B0cy5wcm90b2NvbFZlcnNpb24gPCAxMykge1xuICAgICAgb3B0cy5oZWFkZXJzWydTZWMtV2ViU29ja2V0LU9yaWdpbiddID0gb3B0cy5vcmlnaW47XG4gICAgfSBlbHNlIHtcbiAgICAgIG9wdHMuaGVhZGVycy5PcmlnaW4gPSBvcHRzLm9yaWdpbjtcbiAgICB9XG4gIH1cbiAgaWYgKHBhcnNlZFVybC51c2VybmFtZSB8fCBwYXJzZWRVcmwucGFzc3dvcmQpIHtcbiAgICBvcHRzLmF1dGggPSBgJHtwYXJzZWRVcmwudXNlcm5hbWV9OiR7cGFyc2VkVXJsLnBhc3N3b3JkfWA7XG4gIH1cblxuICBpZiAoaXNVbml4U29ja2V0KSB7XG4gICAgY29uc3QgcGFydHMgPSBvcHRzLnBhdGguc3BsaXQoJzonKTtcblxuICAgIG9wdHMuc29ja2V0UGF0aCA9IHBhcnRzWzBdO1xuICAgIG9wdHMucGF0aCA9IHBhcnRzWzFdO1xuICB9XG5cbiAgaWYgKG9wdHMuZm9sbG93UmVkaXJlY3RzKSB7XG4gICAgaWYgKHdlYnNvY2tldC5fcmVkaXJlY3RzID09PSAwKSB7XG4gICAgICB3ZWJzb2NrZXQuX29yaWdpbmFsVW5peFNvY2tldCA9IGlzVW5peFNvY2tldDtcbiAgICAgIHdlYnNvY2tldC5fb3JpZ2luYWxTZWN1cmUgPSBpc1NlY3VyZTtcbiAgICAgIHdlYnNvY2tldC5fb3JpZ2luYWxIb3N0T3JTb2NrZXRQYXRoID0gaXNVbml4U29ja2V0XG4gICAgICAgID8gb3B0cy5zb2NrZXRQYXRoXG4gICAgICAgIDogcGFyc2VkVXJsLmhvc3Q7XG5cbiAgICAgIGNvbnN0IGhlYWRlcnMgPSBvcHRpb25zICYmIG9wdGlvbnMuaGVhZGVycztcblxuICAgICAgLy9cbiAgICAgIC8vIFNoYWxsb3cgY29weSB0aGUgdXNlciBwcm92aWRlZCBvcHRpb25zIHNvIHRoYXQgaGVhZGVycyBjYW4gYmUgY2hhbmdlZFxuICAgICAgLy8gd2l0aG91dCBtdXRhdGluZyB0aGUgb3JpZ2luYWwgb2JqZWN0LlxuICAgICAgLy9cbiAgICAgIG9wdGlvbnMgPSB7IC4uLm9wdGlvbnMsIGhlYWRlcnM6IHt9IH07XG5cbiAgICAgIGlmIChoZWFkZXJzKSB7XG4gICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGhlYWRlcnMpKSB7XG4gICAgICAgICAgb3B0aW9ucy5oZWFkZXJzW2tleS50b0xvd2VyQ2FzZSgpXSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGlzU2FtZUhvc3QgPSBpc1VuaXhTb2NrZXRcbiAgICAgICAgPyB3ZWJzb2NrZXQuX29yaWdpbmFsVW5peFNvY2tldFxuICAgICAgICAgID8gb3B0cy5zb2NrZXRQYXRoID09PSB3ZWJzb2NrZXQuX29yaWdpbmFsSG9zdE9yU29ja2V0UGF0aFxuICAgICAgICAgIDogZmFsc2VcbiAgICAgICAgOiB3ZWJzb2NrZXQuX29yaWdpbmFsVW5peFNvY2tldFxuICAgICAgICA/IGZhbHNlXG4gICAgICAgIDogcGFyc2VkVXJsLmhvc3QgPT09IHdlYnNvY2tldC5fb3JpZ2luYWxIb3N0T3JTb2NrZXRQYXRoO1xuXG4gICAgICBpZiAoIWlzU2FtZUhvc3QgfHwgKHdlYnNvY2tldC5fb3JpZ2luYWxTZWN1cmUgJiYgIWlzU2VjdXJlKSkge1xuICAgICAgICAvL1xuICAgICAgICAvLyBNYXRjaCBjdXJsIDcuNzcuMCBiZWhhdmlvciBhbmQgZHJvcCB0aGUgZm9sbG93aW5nIGhlYWRlcnMuIFRoZXNlXG4gICAgICAgIC8vIGhlYWRlcnMgYXJlIGFsc28gZHJvcHBlZCB3aGVuIGZvbGxvd2luZyBhIHJlZGlyZWN0IHRvIGEgc3ViZG9tYWluLlxuICAgICAgICAvL1xuICAgICAgICBkZWxldGUgb3B0cy5oZWFkZXJzLmF1dGhvcml6YXRpb247XG4gICAgICAgIGRlbGV0ZSBvcHRzLmhlYWRlcnMuY29va2llO1xuXG4gICAgICAgIGlmICghaXNTYW1lSG9zdCkgZGVsZXRlIG9wdHMuaGVhZGVycy5ob3N0O1xuXG4gICAgICAgIG9wdHMuYXV0aCA9IHVuZGVmaW5lZDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvL1xuICAgIC8vIE1hdGNoIGN1cmwgNy43Ny4wIGJlaGF2aW9yIGFuZCBtYWtlIHRoZSBmaXJzdCBgQXV0aG9yaXphdGlvbmAgaGVhZGVyIHdpbi5cbiAgICAvLyBJZiB0aGUgYEF1dGhvcml6YXRpb25gIGhlYWRlciBpcyBzZXQsIHRoZW4gdGhlcmUgaXMgbm90aGluZyB0byBkbyBhcyBpdFxuICAgIC8vIHdpbGwgdGFrZSBwcmVjZWRlbmNlLlxuICAgIC8vXG4gICAgaWYgKG9wdHMuYXV0aCAmJiAhb3B0aW9ucy5oZWFkZXJzLmF1dGhvcml6YXRpb24pIHtcbiAgICAgIG9wdGlvbnMuaGVhZGVycy5hdXRob3JpemF0aW9uID1cbiAgICAgICAgJ0Jhc2ljICcgKyBCdWZmZXIuZnJvbShvcHRzLmF1dGgpLnRvU3RyaW5nKCdiYXNlNjQnKTtcbiAgICB9XG4gIH1cblxuICBsZXQgcmVxID0gKHdlYnNvY2tldC5fcmVxID0gZ2V0KG9wdHMpKTtcblxuICBpZiAob3B0cy50aW1lb3V0KSB7XG4gICAgcmVxLm9uKCd0aW1lb3V0JywgKCkgPT4ge1xuICAgICAgYWJvcnRIYW5kc2hha2Uod2Vic29ja2V0LCByZXEsICdPcGVuaW5nIGhhbmRzaGFrZSBoYXMgdGltZWQgb3V0Jyk7XG4gICAgfSk7XG4gIH1cblxuICByZXEub24oJ2Vycm9yJywgKGVycikgPT4ge1xuICAgIGlmIChyZXEgPT09IG51bGwgfHwgcmVxLmFib3J0ZWQpIHJldHVybjtcblxuICAgIHJlcSA9IHdlYnNvY2tldC5fcmVxID0gbnVsbDtcbiAgICBlbWl0RXJyb3JBbmRDbG9zZSh3ZWJzb2NrZXQsIGVycik7XG4gIH0pO1xuXG4gIHJlcS5vbigncmVzcG9uc2UnLCAocmVzKSA9PiB7XG4gICAgY29uc3QgbG9jYXRpb24gPSByZXMuaGVhZGVycy5sb2NhdGlvbjtcbiAgICBjb25zdCBzdGF0dXNDb2RlID0gcmVzLnN0YXR1c0NvZGU7XG5cbiAgICBpZiAoXG4gICAgICBsb2NhdGlvbiAmJlxuICAgICAgb3B0cy5mb2xsb3dSZWRpcmVjdHMgJiZcbiAgICAgIHN0YXR1c0NvZGUgPj0gMzAwICYmXG4gICAgICBzdGF0dXNDb2RlIDwgNDAwXG4gICAgKSB7XG4gICAgICBpZiAoKyt3ZWJzb2NrZXQuX3JlZGlyZWN0cyA+IG9wdHMubWF4UmVkaXJlY3RzKSB7XG4gICAgICAgIGFib3J0SGFuZHNoYWtlKHdlYnNvY2tldCwgcmVxLCAnTWF4aW11bSByZWRpcmVjdHMgZXhjZWVkZWQnKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICByZXEuYWJvcnQoKTtcblxuICAgICAgbGV0IGFkZHI7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGFkZHIgPSBuZXcgVVJMKGxvY2F0aW9uLCBhZGRyZXNzKTtcbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBlbWl0RXJyb3JBbmRDbG9zZSh3ZWJzb2NrZXQsIGVycik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaW5pdEFzQ2xpZW50KHdlYnNvY2tldCwgYWRkciwgcHJvdG9jb2xzLCBvcHRpb25zKTtcbiAgICB9IGVsc2UgaWYgKCF3ZWJzb2NrZXQuZW1pdCgndW5leHBlY3RlZC1yZXNwb25zZScsIHJlcSwgcmVzKSkge1xuICAgICAgYWJvcnRIYW5kc2hha2UoXG4gICAgICAgIHdlYnNvY2tldCxcbiAgICAgICAgcmVxLFxuICAgICAgICBgVW5leHBlY3RlZCBzZXJ2ZXIgcmVzcG9uc2U6ICR7cmVzLnN0YXR1c0NvZGV9YFxuICAgICAgKTtcbiAgICB9XG4gIH0pO1xuXG4gIHJlcS5vbigndXBncmFkZScsIChyZXMsIHNvY2tldCwgaGVhZCkgPT4ge1xuICAgIHdlYnNvY2tldC5lbWl0KCd1cGdyYWRlJywgcmVzKTtcblxuICAgIC8vXG4gICAgLy8gVGhlIHVzZXIgbWF5IGhhdmUgY2xvc2VkIHRoZSBjb25uZWN0aW9uIGZyb20gYSBsaXN0ZW5lciBvZiB0aGUgYHVwZ3JhZGVgXG4gICAgLy8gZXZlbnQuXG4gICAgLy9cbiAgICBpZiAod2Vic29ja2V0LnJlYWR5U3RhdGUgIT09IFdlYlNvY2tldC5DT05ORUNUSU5HKSByZXR1cm47XG5cbiAgICByZXEgPSB3ZWJzb2NrZXQuX3JlcSA9IG51bGw7XG5cbiAgICBpZiAocmVzLmhlYWRlcnMudXBncmFkZS50b0xvd2VyQ2FzZSgpICE9PSAnd2Vic29ja2V0Jykge1xuICAgICAgYWJvcnRIYW5kc2hha2Uod2Vic29ja2V0LCBzb2NrZXQsICdJbnZhbGlkIFVwZ3JhZGUgaGVhZGVyJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgZGlnZXN0ID0gY3JlYXRlSGFzaCgnc2hhMScpXG4gICAgICAudXBkYXRlKGtleSArIEdVSUQpXG4gICAgICAuZGlnZXN0KCdiYXNlNjQnKTtcblxuICAgIGlmIChyZXMuaGVhZGVyc1snc2VjLXdlYnNvY2tldC1hY2NlcHQnXSAhPT0gZGlnZXN0KSB7XG4gICAgICBhYm9ydEhhbmRzaGFrZSh3ZWJzb2NrZXQsIHNvY2tldCwgJ0ludmFsaWQgU2VjLVdlYlNvY2tldC1BY2NlcHQgaGVhZGVyJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3Qgc2VydmVyUHJvdCA9IHJlcy5oZWFkZXJzWydzZWMtd2Vic29ja2V0LXByb3RvY29sJ107XG4gICAgY29uc3QgcHJvdExpc3QgPSAocHJvdG9jb2xzIHx8ICcnKS5zcGxpdCgvLCAqLyk7XG4gICAgbGV0IHByb3RFcnJvcjtcblxuICAgIGlmICghcHJvdG9jb2xzICYmIHNlcnZlclByb3QpIHtcbiAgICAgIHByb3RFcnJvciA9ICdTZXJ2ZXIgc2VudCBhIHN1YnByb3RvY29sIGJ1dCBub25lIHdhcyByZXF1ZXN0ZWQnO1xuICAgIH0gZWxzZSBpZiAocHJvdG9jb2xzICYmICFzZXJ2ZXJQcm90KSB7XG4gICAgICBwcm90RXJyb3IgPSAnU2VydmVyIHNlbnQgbm8gc3VicHJvdG9jb2wnO1xuICAgIH0gZWxzZSBpZiAoc2VydmVyUHJvdCAmJiAhcHJvdExpc3QuaW5jbHVkZXMoc2VydmVyUHJvdCkpIHtcbiAgICAgIHByb3RFcnJvciA9ICdTZXJ2ZXIgc2VudCBhbiBpbnZhbGlkIHN1YnByb3RvY29sJztcbiAgICB9XG5cbiAgICBpZiAocHJvdEVycm9yKSB7XG4gICAgICBhYm9ydEhhbmRzaGFrZSh3ZWJzb2NrZXQsIHNvY2tldCwgcHJvdEVycm9yKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoc2VydmVyUHJvdCkgd2Vic29ja2V0Ll9wcm90b2NvbCA9IHNlcnZlclByb3Q7XG5cbiAgICBjb25zdCBzZWNXZWJTb2NrZXRFeHRlbnNpb25zID0gcmVzLmhlYWRlcnNbJ3NlYy13ZWJzb2NrZXQtZXh0ZW5zaW9ucyddO1xuXG4gICAgaWYgKHNlY1dlYlNvY2tldEV4dGVuc2lvbnMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgaWYgKCFwZXJNZXNzYWdlRGVmbGF0ZSkge1xuICAgICAgICBjb25zdCBtZXNzYWdlID1cbiAgICAgICAgICAnU2VydmVyIHNlbnQgYSBTZWMtV2ViU29ja2V0LUV4dGVuc2lvbnMgaGVhZGVyIGJ1dCBubyBleHRlbnNpb24gJyArXG4gICAgICAgICAgJ3dhcyByZXF1ZXN0ZWQnO1xuICAgICAgICBhYm9ydEhhbmRzaGFrZSh3ZWJzb2NrZXQsIHNvY2tldCwgbWVzc2FnZSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgbGV0IGV4dGVuc2lvbnM7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGV4dGVuc2lvbnMgPSBwYXJzZShzZWNXZWJTb2NrZXRFeHRlbnNpb25zKTtcbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBjb25zdCBtZXNzYWdlID0gJ0ludmFsaWQgU2VjLVdlYlNvY2tldC1FeHRlbnNpb25zIGhlYWRlcic7XG4gICAgICAgIGFib3J0SGFuZHNoYWtlKHdlYnNvY2tldCwgc29ja2V0LCBtZXNzYWdlKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBleHRlbnNpb25OYW1lcyA9IE9iamVjdC5rZXlzKGV4dGVuc2lvbnMpO1xuXG4gICAgICBpZiAoZXh0ZW5zaW9uTmFtZXMubGVuZ3RoKSB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICBleHRlbnNpb25OYW1lcy5sZW5ndGggIT09IDEgfHxcbiAgICAgICAgICBleHRlbnNpb25OYW1lc1swXSAhPT0gUGVyTWVzc2FnZURlZmxhdGUuZXh0ZW5zaW9uTmFtZVxuICAgICAgICApIHtcbiAgICAgICAgICBjb25zdCBtZXNzYWdlID1cbiAgICAgICAgICAgICdTZXJ2ZXIgaW5kaWNhdGVkIGFuIGV4dGVuc2lvbiB0aGF0IHdhcyBub3QgcmVxdWVzdGVkJztcbiAgICAgICAgICBhYm9ydEhhbmRzaGFrZSh3ZWJzb2NrZXQsIHNvY2tldCwgbWVzc2FnZSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBwZXJNZXNzYWdlRGVmbGF0ZS5hY2NlcHQoZXh0ZW5zaW9uc1tQZXJNZXNzYWdlRGVmbGF0ZS5leHRlbnNpb25OYW1lXSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgIGNvbnN0IG1lc3NhZ2UgPSAnSW52YWxpZCBTZWMtV2ViU29ja2V0LUV4dGVuc2lvbnMgaGVhZGVyJztcbiAgICAgICAgICBhYm9ydEhhbmRzaGFrZSh3ZWJzb2NrZXQsIHNvY2tldCwgbWVzc2FnZSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgd2Vic29ja2V0Ll9leHRlbnNpb25zW1Blck1lc3NhZ2VEZWZsYXRlLmV4dGVuc2lvbk5hbWVdID1cbiAgICAgICAgICBwZXJNZXNzYWdlRGVmbGF0ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB3ZWJzb2NrZXQuc2V0U29ja2V0KHNvY2tldCwgaGVhZCwgb3B0cy5tYXhQYXlsb2FkKTtcbiAgfSk7XG59XG5cbi8qKlxuICogRW1pdCB0aGUgYCdlcnJvcidgIGFuZCBgJ2Nsb3NlJ2AgZXZlbnQuXG4gKlxuICogQHBhcmFtIHtXZWJTb2NrZXR9IHdlYnNvY2tldCBUaGUgV2ViU29ja2V0IGluc3RhbmNlXG4gKiBAcGFyYW0ge0Vycm9yfSBUaGUgZXJyb3IgdG8gZW1pdFxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gZW1pdEVycm9yQW5kQ2xvc2Uod2Vic29ja2V0LCBlcnIpIHtcbiAgd2Vic29ja2V0Ll9yZWFkeVN0YXRlID0gV2ViU29ja2V0LkNMT1NJTkc7XG4gIHdlYnNvY2tldC5lbWl0KCdlcnJvcicsIGVycik7XG4gIHdlYnNvY2tldC5lbWl0Q2xvc2UoKTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBgbmV0LlNvY2tldGAgYW5kIGluaXRpYXRlIGEgY29ubmVjdGlvbi5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyBDb25uZWN0aW9uIG9wdGlvbnNcbiAqIEByZXR1cm4ge25ldC5Tb2NrZXR9IFRoZSBuZXdseSBjcmVhdGVkIHNvY2tldCB1c2VkIHRvIHN0YXJ0IHRoZSBjb25uZWN0aW9uXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBuZXRDb25uZWN0KG9wdGlvbnMpIHtcbiAgb3B0aW9ucy5wYXRoID0gb3B0aW9ucy5zb2NrZXRQYXRoO1xuICByZXR1cm4gbmV0LmNvbm5lY3Qob3B0aW9ucyk7XG59XG5cbi8qKlxuICogQ3JlYXRlIGEgYHRscy5UTFNTb2NrZXRgIGFuZCBpbml0aWF0ZSBhIGNvbm5lY3Rpb24uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgQ29ubmVjdGlvbiBvcHRpb25zXG4gKiBAcmV0dXJuIHt0bHMuVExTU29ja2V0fSBUaGUgbmV3bHkgY3JlYXRlZCBzb2NrZXQgdXNlZCB0byBzdGFydCB0aGUgY29ubmVjdGlvblxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gdGxzQ29ubmVjdChvcHRpb25zKSB7XG4gIG9wdGlvbnMucGF0aCA9IHVuZGVmaW5lZDtcblxuICBpZiAoIW9wdGlvbnMuc2VydmVybmFtZSAmJiBvcHRpb25zLnNlcnZlcm5hbWUgIT09ICcnKSB7XG4gICAgb3B0aW9ucy5zZXJ2ZXJuYW1lID0gbmV0LmlzSVAob3B0aW9ucy5ob3N0KSA/ICcnIDogb3B0aW9ucy5ob3N0O1xuICB9XG5cbiAgcmV0dXJuIHRscy5jb25uZWN0KG9wdGlvbnMpO1xufVxuXG4vKipcbiAqIEFib3J0IHRoZSBoYW5kc2hha2UgYW5kIGVtaXQgYW4gZXJyb3IuXG4gKlxuICogQHBhcmFtIHtXZWJTb2NrZXR9IHdlYnNvY2tldCBUaGUgV2ViU29ja2V0IGluc3RhbmNlXG4gKiBAcGFyYW0geyhodHRwLkNsaWVudFJlcXVlc3R8bmV0LlNvY2tldHx0bHMuU29ja2V0KX0gc3RyZWFtIFRoZSByZXF1ZXN0IHRvXG4gKiAgICAgYWJvcnQgb3IgdGhlIHNvY2tldCB0byBkZXN0cm95XG4gKiBAcGFyYW0ge1N0cmluZ30gbWVzc2FnZSBUaGUgZXJyb3IgbWVzc2FnZVxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gYWJvcnRIYW5kc2hha2Uod2Vic29ja2V0LCBzdHJlYW0sIG1lc3NhZ2UpIHtcbiAgd2Vic29ja2V0Ll9yZWFkeVN0YXRlID0gV2ViU29ja2V0LkNMT1NJTkc7XG5cbiAgY29uc3QgZXJyID0gbmV3IEVycm9yKG1lc3NhZ2UpO1xuICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZShlcnIsIGFib3J0SGFuZHNoYWtlKTtcblxuICBpZiAoc3RyZWFtLnNldEhlYWRlcikge1xuICAgIHN0cmVhbS5hYm9ydCgpO1xuXG4gICAgaWYgKHN0cmVhbS5zb2NrZXQgJiYgIXN0cmVhbS5zb2NrZXQuZGVzdHJveWVkKSB7XG4gICAgICAvL1xuICAgICAgLy8gT24gTm9kZS5qcyA+PSAxNC4zLjAgYHJlcXVlc3QuYWJvcnQoKWAgZG9lcyBub3QgZGVzdHJveSB0aGUgc29ja2V0IGlmXG4gICAgICAvLyBjYWxsZWQgYWZ0ZXIgdGhlIHJlcXVlc3QgY29tcGxldGVkLiBTZWVcbiAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJzb2NrZXRzL3dzL2lzc3Vlcy8xODY5LlxuICAgICAgLy9cbiAgICAgIHN0cmVhbS5zb2NrZXQuZGVzdHJveSgpO1xuICAgIH1cblxuICAgIHN0cmVhbS5vbmNlKCdhYm9ydCcsIHdlYnNvY2tldC5lbWl0Q2xvc2UuYmluZCh3ZWJzb2NrZXQpKTtcbiAgICB3ZWJzb2NrZXQuZW1pdCgnZXJyb3InLCBlcnIpO1xuICB9IGVsc2Uge1xuICAgIHN0cmVhbS5kZXN0cm95KGVycik7XG4gICAgc3RyZWFtLm9uY2UoJ2Vycm9yJywgd2Vic29ja2V0LmVtaXQuYmluZCh3ZWJzb2NrZXQsICdlcnJvcicpKTtcbiAgICBzdHJlYW0ub25jZSgnY2xvc2UnLCB3ZWJzb2NrZXQuZW1pdENsb3NlLmJpbmQod2Vic29ja2V0KSk7XG4gIH1cbn1cblxuLyoqXG4gKiBIYW5kbGUgY2FzZXMgd2hlcmUgdGhlIGBwaW5nKClgLCBgcG9uZygpYCwgb3IgYHNlbmQoKWAgbWV0aG9kcyBhcmUgY2FsbGVkXG4gKiB3aGVuIHRoZSBgcmVhZHlTdGF0ZWAgYXR0cmlidXRlIGlzIGBDTE9TSU5HYCBvciBgQ0xPU0VEYC5cbiAqXG4gKiBAcGFyYW0ge1dlYlNvY2tldH0gd2Vic29ja2V0IFRoZSBXZWJTb2NrZXQgaW5zdGFuY2VcbiAqIEBwYXJhbSB7Kn0gW2RhdGFdIFRoZSBkYXRhIHRvIHNlbmRcbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYl0gQ2FsbGJhY2tcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHNlbmRBZnRlckNsb3NlKHdlYnNvY2tldCwgZGF0YSwgY2IpIHtcbiAgaWYgKGRhdGEpIHtcbiAgICBjb25zdCBsZW5ndGggPSB0b0J1ZmZlcihkYXRhKS5sZW5ndGg7XG5cbiAgICAvL1xuICAgIC8vIFRoZSBgX2J1ZmZlcmVkQW1vdW50YCBwcm9wZXJ0eSBpcyB1c2VkIG9ubHkgd2hlbiB0aGUgcGVlciBpcyBhIGNsaWVudCBhbmRcbiAgICAvLyB0aGUgb3BlbmluZyBoYW5kc2hha2UgZmFpbHMuIFVuZGVyIHRoZXNlIGNpcmN1bXN0YW5jZXMsIGluIGZhY3QsIHRoZVxuICAgIC8vIGBzZXRTb2NrZXQoKWAgbWV0aG9kIGlzIG5vdCBjYWxsZWQsIHNvIHRoZSBgX3NvY2tldGAgYW5kIGBfc2VuZGVyYFxuICAgIC8vIHByb3BlcnRpZXMgYXJlIHNldCB0byBgbnVsbGAuXG4gICAgLy9cbiAgICBpZiAod2Vic29ja2V0Ll9zb2NrZXQpIHdlYnNvY2tldC5fc2VuZGVyLl9idWZmZXJlZEJ5dGVzICs9IGxlbmd0aDtcbiAgICBlbHNlIHdlYnNvY2tldC5fYnVmZmVyZWRBbW91bnQgKz0gbGVuZ3RoO1xuICB9XG5cbiAgaWYgKGNiKSB7XG4gICAgY29uc3QgZXJyID0gbmV3IEVycm9yKFxuICAgICAgYFdlYlNvY2tldCBpcyBub3Qgb3BlbjogcmVhZHlTdGF0ZSAke3dlYnNvY2tldC5yZWFkeVN0YXRlfSBgICtcbiAgICAgICAgYCgke3JlYWR5U3RhdGVzW3dlYnNvY2tldC5yZWFkeVN0YXRlXX0pYFxuICAgICk7XG4gICAgY2IoZXJyKTtcbiAgfVxufVxuXG4vKipcbiAqIFRoZSBsaXN0ZW5lciBvZiB0aGUgYFJlY2VpdmVyYCBgJ2NvbmNsdWRlJ2AgZXZlbnQuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IGNvZGUgVGhlIHN0YXR1cyBjb2RlXG4gKiBAcGFyYW0ge1N0cmluZ30gcmVhc29uIFRoZSByZWFzb24gZm9yIGNsb3NpbmdcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHJlY2VpdmVyT25Db25jbHVkZShjb2RlLCByZWFzb24pIHtcbiAgY29uc3Qgd2Vic29ja2V0ID0gdGhpc1trV2ViU29ja2V0XTtcblxuICB3ZWJzb2NrZXQuX2Nsb3NlRnJhbWVSZWNlaXZlZCA9IHRydWU7XG4gIHdlYnNvY2tldC5fY2xvc2VNZXNzYWdlID0gcmVhc29uO1xuICB3ZWJzb2NrZXQuX2Nsb3NlQ29kZSA9IGNvZGU7XG5cbiAgaWYgKHdlYnNvY2tldC5fc29ja2V0W2tXZWJTb2NrZXRdID09PSB1bmRlZmluZWQpIHJldHVybjtcblxuICB3ZWJzb2NrZXQuX3NvY2tldC5yZW1vdmVMaXN0ZW5lcignZGF0YScsIHNvY2tldE9uRGF0YSk7XG4gIHByb2Nlc3MubmV4dFRpY2socmVzdW1lLCB3ZWJzb2NrZXQuX3NvY2tldCk7XG5cbiAgaWYgKGNvZGUgPT09IDEwMDUpIHdlYnNvY2tldC5jbG9zZSgpO1xuICBlbHNlIHdlYnNvY2tldC5jbG9zZShjb2RlLCByZWFzb24pO1xufVxuXG4vKipcbiAqIFRoZSBsaXN0ZW5lciBvZiB0aGUgYFJlY2VpdmVyYCBgJ2RyYWluJ2AgZXZlbnQuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gcmVjZWl2ZXJPbkRyYWluKCkge1xuICB0aGlzW2tXZWJTb2NrZXRdLl9zb2NrZXQucmVzdW1lKCk7XG59XG5cbi8qKlxuICogVGhlIGxpc3RlbmVyIG9mIHRoZSBgUmVjZWl2ZXJgIGAnZXJyb3InYCBldmVudC5cbiAqXG4gKiBAcGFyYW0geyhSYW5nZUVycm9yfEVycm9yKX0gZXJyIFRoZSBlbWl0dGVkIGVycm9yXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiByZWNlaXZlck9uRXJyb3IoZXJyKSB7XG4gIGNvbnN0IHdlYnNvY2tldCA9IHRoaXNba1dlYlNvY2tldF07XG5cbiAgaWYgKHdlYnNvY2tldC5fc29ja2V0W2tXZWJTb2NrZXRdICE9PSB1bmRlZmluZWQpIHtcbiAgICB3ZWJzb2NrZXQuX3NvY2tldC5yZW1vdmVMaXN0ZW5lcignZGF0YScsIHNvY2tldE9uRGF0YSk7XG5cbiAgICAvL1xuICAgIC8vIE9uIE5vZGUuanMgPCAxNC4wLjAgdGhlIGAnZXJyb3InYCBldmVudCBpcyBlbWl0dGVkIHN5bmNocm9ub3VzbHkuIFNlZVxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJzb2NrZXRzL3dzL2lzc3Vlcy8xOTQwLlxuICAgIC8vXG4gICAgcHJvY2Vzcy5uZXh0VGljayhyZXN1bWUsIHdlYnNvY2tldC5fc29ja2V0KTtcblxuICAgIHdlYnNvY2tldC5jbG9zZShlcnJba1N0YXR1c0NvZGVdKTtcbiAgfVxuXG4gIHdlYnNvY2tldC5lbWl0KCdlcnJvcicsIGVycik7XG59XG5cbi8qKlxuICogVGhlIGxpc3RlbmVyIG9mIHRoZSBgUmVjZWl2ZXJgIGAnZmluaXNoJ2AgZXZlbnQuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gcmVjZWl2ZXJPbkZpbmlzaCgpIHtcbiAgdGhpc1trV2ViU29ja2V0XS5lbWl0Q2xvc2UoKTtcbn1cblxuLyoqXG4gKiBUaGUgbGlzdGVuZXIgb2YgdGhlIGBSZWNlaXZlcmAgYCdtZXNzYWdlJ2AgZXZlbnQuXG4gKlxuICogQHBhcmFtIHsoU3RyaW5nfEJ1ZmZlcnxBcnJheUJ1ZmZlcnxCdWZmZXJbXSl9IGRhdGEgVGhlIG1lc3NhZ2VcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHJlY2VpdmVyT25NZXNzYWdlKGRhdGEpIHtcbiAgdGhpc1trV2ViU29ja2V0XS5lbWl0KCdtZXNzYWdlJywgZGF0YSk7XG59XG5cbi8qKlxuICogVGhlIGxpc3RlbmVyIG9mIHRoZSBgUmVjZWl2ZXJgIGAncGluZydgIGV2ZW50LlxuICpcbiAqIEBwYXJhbSB7QnVmZmVyfSBkYXRhIFRoZSBkYXRhIGluY2x1ZGVkIGluIHRoZSBwaW5nIGZyYW1lXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiByZWNlaXZlck9uUGluZyhkYXRhKSB7XG4gIGNvbnN0IHdlYnNvY2tldCA9IHRoaXNba1dlYlNvY2tldF07XG5cbiAgd2Vic29ja2V0LnBvbmcoZGF0YSwgIXdlYnNvY2tldC5faXNTZXJ2ZXIsIE5PT1ApO1xuICB3ZWJzb2NrZXQuZW1pdCgncGluZycsIGRhdGEpO1xufVxuXG4vKipcbiAqIFRoZSBsaXN0ZW5lciBvZiB0aGUgYFJlY2VpdmVyYCBgJ3BvbmcnYCBldmVudC5cbiAqXG4gKiBAcGFyYW0ge0J1ZmZlcn0gZGF0YSBUaGUgZGF0YSBpbmNsdWRlZCBpbiB0aGUgcG9uZyBmcmFtZVxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gcmVjZWl2ZXJPblBvbmcoZGF0YSkge1xuICB0aGlzW2tXZWJTb2NrZXRdLmVtaXQoJ3BvbmcnLCBkYXRhKTtcbn1cblxuLyoqXG4gKiBSZXN1bWUgYSByZWFkYWJsZSBzdHJlYW1cbiAqXG4gKiBAcGFyYW0ge1JlYWRhYmxlfSBzdHJlYW0gVGhlIHJlYWRhYmxlIHN0cmVhbVxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gcmVzdW1lKHN0cmVhbSkge1xuICBzdHJlYW0ucmVzdW1lKCk7XG59XG5cbi8qKlxuICogVGhlIGxpc3RlbmVyIG9mIHRoZSBgbmV0LlNvY2tldGAgYCdjbG9zZSdgIGV2ZW50LlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHNvY2tldE9uQ2xvc2UoKSB7XG4gIGNvbnN0IHdlYnNvY2tldCA9IHRoaXNba1dlYlNvY2tldF07XG5cbiAgdGhpcy5yZW1vdmVMaXN0ZW5lcignY2xvc2UnLCBzb2NrZXRPbkNsb3NlKTtcbiAgdGhpcy5yZW1vdmVMaXN0ZW5lcignZGF0YScsIHNvY2tldE9uRGF0YSk7XG4gIHRoaXMucmVtb3ZlTGlzdGVuZXIoJ2VuZCcsIHNvY2tldE9uRW5kKTtcblxuICB3ZWJzb2NrZXQuX3JlYWR5U3RhdGUgPSBXZWJTb2NrZXQuQ0xPU0lORztcblxuICBsZXQgY2h1bms7XG5cbiAgLy9cbiAgLy8gVGhlIGNsb3NlIGZyYW1lIG1pZ2h0IG5vdCBoYXZlIGJlZW4gcmVjZWl2ZWQgb3IgdGhlIGAnZW5kJ2AgZXZlbnQgZW1pdHRlZCxcbiAgLy8gZm9yIGV4YW1wbGUsIGlmIHRoZSBzb2NrZXQgd2FzIGRlc3Ryb3llZCBkdWUgdG8gYW4gZXJyb3IuIEVuc3VyZSB0aGF0IHRoZVxuICAvLyBgcmVjZWl2ZXJgIHN0cmVhbSBpcyBjbG9zZWQgYWZ0ZXIgd3JpdGluZyBhbnkgcmVtYWluaW5nIGJ1ZmZlcmVkIGRhdGEgdG9cbiAgLy8gaXQuIElmIHRoZSByZWFkYWJsZSBzaWRlIG9mIHRoZSBzb2NrZXQgaXMgaW4gZmxvd2luZyBtb2RlIHRoZW4gdGhlcmUgaXMgbm9cbiAgLy8gYnVmZmVyZWQgZGF0YSBhcyBldmVyeXRoaW5nIGhhcyBiZWVuIGFscmVhZHkgd3JpdHRlbiBhbmQgYHJlYWRhYmxlLnJlYWQoKWBcbiAgLy8gd2lsbCByZXR1cm4gYG51bGxgLiBJZiBpbnN0ZWFkLCB0aGUgc29ja2V0IGlzIHBhdXNlZCwgYW55IHBvc3NpYmxlIGJ1ZmZlcmVkXG4gIC8vIGRhdGEgd2lsbCBiZSByZWFkIGFzIGEgc2luZ2xlIGNodW5rLlxuICAvL1xuICBpZiAoXG4gICAgIXRoaXMuX3JlYWRhYmxlU3RhdGUuZW5kRW1pdHRlZCAmJlxuICAgICF3ZWJzb2NrZXQuX2Nsb3NlRnJhbWVSZWNlaXZlZCAmJlxuICAgICF3ZWJzb2NrZXQuX3JlY2VpdmVyLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZCAmJlxuICAgIChjaHVuayA9IHdlYnNvY2tldC5fc29ja2V0LnJlYWQoKSkgIT09IG51bGxcbiAgKSB7XG4gICAgd2Vic29ja2V0Ll9yZWNlaXZlci53cml0ZShjaHVuayk7XG4gIH1cblxuICB3ZWJzb2NrZXQuX3JlY2VpdmVyLmVuZCgpO1xuXG4gIHRoaXNba1dlYlNvY2tldF0gPSB1bmRlZmluZWQ7XG5cbiAgY2xlYXJUaW1lb3V0KHdlYnNvY2tldC5fY2xvc2VUaW1lcik7XG5cbiAgaWYgKFxuICAgIHdlYnNvY2tldC5fcmVjZWl2ZXIuX3dyaXRhYmxlU3RhdGUuZmluaXNoZWQgfHxcbiAgICB3ZWJzb2NrZXQuX3JlY2VpdmVyLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZFxuICApIHtcbiAgICB3ZWJzb2NrZXQuZW1pdENsb3NlKCk7XG4gIH0gZWxzZSB7XG4gICAgd2Vic29ja2V0Ll9yZWNlaXZlci5vbignZXJyb3InLCByZWNlaXZlck9uRmluaXNoKTtcbiAgICB3ZWJzb2NrZXQuX3JlY2VpdmVyLm9uKCdmaW5pc2gnLCByZWNlaXZlck9uRmluaXNoKTtcbiAgfVxufVxuXG4vKipcbiAqIFRoZSBsaXN0ZW5lciBvZiB0aGUgYG5ldC5Tb2NrZXRgIGAnZGF0YSdgIGV2ZW50LlxuICpcbiAqIEBwYXJhbSB7QnVmZmVyfSBjaHVuayBBIGNodW5rIG9mIGRhdGFcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHNvY2tldE9uRGF0YShjaHVuaykge1xuICBpZiAoIXRoaXNba1dlYlNvY2tldF0uX3JlY2VpdmVyLndyaXRlKGNodW5rKSkge1xuICAgIHRoaXMucGF1c2UoKTtcbiAgfVxufVxuXG4vKipcbiAqIFRoZSBsaXN0ZW5lciBvZiB0aGUgYG5ldC5Tb2NrZXRgIGAnZW5kJ2AgZXZlbnQuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gc29ja2V0T25FbmQoKSB7XG4gIGNvbnN0IHdlYnNvY2tldCA9IHRoaXNba1dlYlNvY2tldF07XG5cbiAgd2Vic29ja2V0Ll9yZWFkeVN0YXRlID0gV2ViU29ja2V0LkNMT1NJTkc7XG4gIHdlYnNvY2tldC5fcmVjZWl2ZXIuZW5kKCk7XG4gIHRoaXMuZW5kKCk7XG59XG5cbi8qKlxuICogVGhlIGxpc3RlbmVyIG9mIHRoZSBgbmV0LlNvY2tldGAgYCdlcnJvcidgIGV2ZW50LlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHNvY2tldE9uRXJyb3IoKSB7XG4gIGNvbnN0IHdlYnNvY2tldCA9IHRoaXNba1dlYlNvY2tldF07XG5cbiAgdGhpcy5yZW1vdmVMaXN0ZW5lcignZXJyb3InLCBzb2NrZXRPbkVycm9yKTtcbiAgdGhpcy5vbignZXJyb3InLCBOT09QKTtcblxuICBpZiAod2Vic29ja2V0KSB7XG4gICAgd2Vic29ja2V0Ll9yZWFkeVN0YXRlID0gV2ViU29ja2V0LkNMT1NJTkc7XG4gICAgdGhpcy5kZXN0cm95KCk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJFdmVudEVtaXR0ZXIiLCJyZXF1aXJlIiwiaHR0cHMiLCJodHRwIiwibmV0IiwidGxzIiwicmFuZG9tQnl0ZXMiLCJjcmVhdGVIYXNoIiwiUmVhZGFibGUiLCJVUkwiLCJQZXJNZXNzYWdlRGVmbGF0ZSIsIlJlY2VpdmVyIiwiU2VuZGVyIiwiQklOQVJZX1RZUEVTIiwiRU1QVFlfQlVGRkVSIiwiR1VJRCIsImtTdGF0dXNDb2RlIiwia1dlYlNvY2tldCIsIk5PT1AiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImZvcm1hdCIsInBhcnNlIiwidG9CdWZmZXIiLCJyZWFkeVN0YXRlcyIsInByb3RvY29sVmVyc2lvbnMiLCJjbG9zZVRpbWVvdXQiLCJXZWJTb2NrZXQiLCJjb25zdHJ1Y3RvciIsImFkZHJlc3MiLCJwcm90b2NvbHMiLCJvcHRpb25zIiwiX2JpbmFyeVR5cGUiLCJfY2xvc2VDb2RlIiwiX2Nsb3NlRnJhbWVSZWNlaXZlZCIsIl9jbG9zZUZyYW1lU2VudCIsIl9jbG9zZU1lc3NhZ2UiLCJfY2xvc2VUaW1lciIsIl9leHRlbnNpb25zIiwiX3Byb3RvY29sIiwiX3JlYWR5U3RhdGUiLCJDT05ORUNUSU5HIiwiX3JlY2VpdmVyIiwiX3NlbmRlciIsIl9zb2NrZXQiLCJfYnVmZmVyZWRBbW91bnQiLCJfaXNTZXJ2ZXIiLCJfcmVkaXJlY3RzIiwiQXJyYXkiLCJpc0FycmF5Iiwiam9pbiIsInVuZGVmaW5lZCIsImluaXRBc0NsaWVudCIsImJpbmFyeVR5cGUiLCJ0eXBlIiwiaW5jbHVkZXMiLCJidWZmZXJlZEFtb3VudCIsIl93cml0YWJsZVN0YXRlIiwibGVuZ3RoIiwiX2J1ZmZlcmVkQnl0ZXMiLCJleHRlbnNpb25zIiwiT2JqZWN0Iiwia2V5cyIsIm9uY2xvc2UiLCJsaXN0ZW5lciIsIm9uZXJyb3IiLCJvbm9wZW4iLCJvbm1lc3NhZ2UiLCJwcm90b2NvbCIsInJlYWR5U3RhdGUiLCJ1cmwiLCJfdXJsIiwic2V0U29ja2V0Iiwic29ja2V0IiwiaGVhZCIsIm1heFBheWxvYWQiLCJyZWNlaXZlciIsIm9uIiwicmVjZWl2ZXJPbkNvbmNsdWRlIiwicmVjZWl2ZXJPbkRyYWluIiwicmVjZWl2ZXJPbkVycm9yIiwicmVjZWl2ZXJPbk1lc3NhZ2UiLCJyZWNlaXZlck9uUGluZyIsInJlY2VpdmVyT25Qb25nIiwic2V0VGltZW91dCIsInNldE5vRGVsYXkiLCJ1bnNoaWZ0Iiwic29ja2V0T25DbG9zZSIsInNvY2tldE9uRGF0YSIsInNvY2tldE9uRW5kIiwic29ja2V0T25FcnJvciIsIk9QRU4iLCJlbWl0IiwiZW1pdENsb3NlIiwiQ0xPU0VEIiwiZXh0ZW5zaW9uTmFtZSIsImNsZWFudXAiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJjbG9zZSIsImNvZGUiLCJkYXRhIiwibXNnIiwiYWJvcnRIYW5kc2hha2UiLCJfcmVxIiwiQ0xPU0lORyIsImVycm9yRW1pdHRlZCIsImVuZCIsImVyciIsImRlc3Ryb3kiLCJiaW5kIiwicGluZyIsIm1hc2siLCJjYiIsIkVycm9yIiwidG9TdHJpbmciLCJzZW5kQWZ0ZXJDbG9zZSIsInBvbmciLCJzZW5kIiwib3B0cyIsImJpbmFyeSIsImNvbXByZXNzIiwiZmluIiwidGVybWluYXRlIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwidmFsdWUiLCJpbmRleE9mIiwicHJvdG90eXBlIiwiZm9yRWFjaCIsInByb3BlcnR5IiwibWV0aG9kIiwiZ2V0IiwibGlzdGVuZXJzIiwiaSIsIl9saXN0ZW5lciIsInNldCIsInJlbW92ZUxpc3RlbmVyIiwibW9kdWxlIiwiZXhwb3J0cyIsIndlYnNvY2tldCIsInByb3RvY29sVmVyc2lvbiIsInBlck1lc3NhZ2VEZWZsYXRlIiwiZm9sbG93UmVkaXJlY3RzIiwibWF4UmVkaXJlY3RzIiwiY3JlYXRlQ29ubmVjdGlvbiIsInNvY2tldFBhdGgiLCJob3N0bmFtZSIsInRpbWVvdXQiLCJob3N0IiwicGF0aCIsInBvcnQiLCJSYW5nZUVycm9yIiwicGFyc2VkVXJsIiwiaHJlZiIsImlzVW5peFNvY2tldCIsInBhdGhuYW1lIiwiZW1pdEVycm9yQW5kQ2xvc2UiLCJpc1NlY3VyZSIsImRlZmF1bHRQb3J0Iiwia2V5IiwidGxzQ29ubmVjdCIsIm5ldENvbm5lY3QiLCJzdGFydHNXaXRoIiwic2xpY2UiLCJoZWFkZXJzIiwiQ29ubmVjdGlvbiIsIlVwZ3JhZGUiLCJzZWFyY2giLCJoYW5kc2hha2VUaW1lb3V0Iiwib2ZmZXIiLCJvcmlnaW4iLCJPcmlnaW4iLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwiYXV0aCIsInBhcnRzIiwic3BsaXQiLCJfb3JpZ2luYWxVbml4U29ja2V0IiwiX29yaWdpbmFsU2VjdXJlIiwiX29yaWdpbmFsSG9zdE9yU29ja2V0UGF0aCIsImVudHJpZXMiLCJ0b0xvd2VyQ2FzZSIsImlzU2FtZUhvc3QiLCJhdXRob3JpemF0aW9uIiwiY29va2llIiwiQnVmZmVyIiwiZnJvbSIsInJlcSIsImFib3J0ZWQiLCJyZXMiLCJsb2NhdGlvbiIsInN0YXR1c0NvZGUiLCJhYm9ydCIsImFkZHIiLCJ1cGdyYWRlIiwiZGlnZXN0IiwidXBkYXRlIiwic2VydmVyUHJvdCIsInByb3RMaXN0IiwicHJvdEVycm9yIiwic2VjV2ViU29ja2V0RXh0ZW5zaW9ucyIsIm1lc3NhZ2UiLCJleHRlbnNpb25OYW1lcyIsImFjY2VwdCIsImNvbm5lY3QiLCJzZXJ2ZXJuYW1lIiwiaXNJUCIsInN0cmVhbSIsImNhcHR1cmVTdGFja1RyYWNlIiwic2V0SGVhZGVyIiwiZGVzdHJveWVkIiwib25jZSIsInJlYXNvbiIsInByb2Nlc3MiLCJuZXh0VGljayIsInJlc3VtZSIsInJlY2VpdmVyT25GaW5pc2giLCJjaHVuayIsIl9yZWFkYWJsZVN0YXRlIiwiZW5kRW1pdHRlZCIsInJlYWQiLCJ3cml0ZSIsImNsZWFyVGltZW91dCIsImZpbmlzaGVkIiwicGF1c2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/lib/websocket.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/keyvaluestorage/dist/index.es.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/@walletconnect/keyvaluestorage/dist/index.es.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KeyValueStorage: () => (/* binding */ h),\n/* harmony export */   \"default\": () => (/* binding */ h)\n/* harmony export */ });\n/* harmony import */ var unstorage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! unstorage */ \"(ssr)/../../node_modules/unstorage/dist/index.mjs\");\n/* harmony import */ var idb_keyval__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! idb-keyval */ \"(ssr)/../../node_modules/idb-keyval/dist/index.js\");\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/../../node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n\n\n\nfunction C(i) {\n    return i;\n}\nconst x = \"idb-keyval\";\nvar z = (i = {})=>{\n    const t = i.base && i.base.length > 0 ? `${i.base}:` : \"\", e = (s)=>t + s;\n    let n;\n    return i.dbName && i.storeName && (n = (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.createStore)(i.dbName, i.storeName)), {\n        name: x,\n        options: i,\n        async hasItem (s) {\n            return !(typeof await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.get)(e(s), n) > \"u\");\n        },\n        async getItem (s) {\n            return await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.get)(e(s), n) ?? null;\n        },\n        setItem (s, a) {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.set)(e(s), a, n);\n        },\n        removeItem (s) {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.del)(e(s), n);\n        },\n        getKeys () {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.keys)(n);\n        },\n        clear () {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.clear)(n);\n        }\n    };\n};\nconst D = \"WALLET_CONNECT_V2_INDEXED_DB\", E = \"keyvaluestorage\";\nclass _ {\n    constructor(){\n        this.indexedDb = (0,unstorage__WEBPACK_IMPORTED_MODULE_2__.createStorage)({\n            driver: z({\n                dbName: D,\n                storeName: E\n            })\n        });\n    }\n    async getKeys() {\n        return this.indexedDb.getKeys();\n    }\n    async getEntries() {\n        return (await this.indexedDb.getItems(await this.indexedDb.getKeys())).map((t)=>[\n                t.key,\n                t.value\n            ]);\n    }\n    async getItem(t) {\n        const e = await this.indexedDb.getItem(t);\n        if (e !== null) return e;\n    }\n    async setItem(t, e) {\n        await this.indexedDb.setItem(t, (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonStringify)(e));\n    }\n    async removeItem(t) {\n        await this.indexedDb.removeItem(t);\n    }\n}\nvar l = typeof globalThis < \"u\" ? globalThis :  false ? 0 : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {}, c = {\n    exports: {}\n};\n(function() {\n    let i;\n    function t() {}\n    i = t, i.prototype.getItem = function(e) {\n        return this.hasOwnProperty(e) ? String(this[e]) : null;\n    }, i.prototype.setItem = function(e, n) {\n        this[e] = String(n);\n    }, i.prototype.removeItem = function(e) {\n        delete this[e];\n    }, i.prototype.clear = function() {\n        const e = this;\n        Object.keys(e).forEach(function(n) {\n            e[n] = void 0, delete e[n];\n        });\n    }, i.prototype.key = function(e) {\n        return e = e || 0, Object.keys(this)[e];\n    }, i.prototype.__defineGetter__(\"length\", function() {\n        return Object.keys(this).length;\n    }), typeof l < \"u\" && l.localStorage ? c.exports = l.localStorage :  false ? 0 : c.exports = new t;\n})();\nfunction k(i) {\n    var t;\n    return [\n        i[0],\n        (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonParse)((t = i[1]) != null ? t : \"\")\n    ];\n}\nclass K {\n    constructor(){\n        this.localStorage = c.exports;\n    }\n    async getKeys() {\n        return Object.keys(this.localStorage);\n    }\n    async getEntries() {\n        return Object.entries(this.localStorage).map(k);\n    }\n    async getItem(t) {\n        const e = this.localStorage.getItem(t);\n        if (e !== null) return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonParse)(e);\n    }\n    async setItem(t, e) {\n        this.localStorage.setItem(t, (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonStringify)(e));\n    }\n    async removeItem(t) {\n        this.localStorage.removeItem(t);\n    }\n}\nconst N = \"wc_storage_version\", y = 1, O = async (i, t, e)=>{\n    const n = N, s = await t.getItem(n);\n    if (s && s >= y) {\n        e(t);\n        return;\n    }\n    const a = await i.getKeys();\n    if (!a.length) {\n        e(t);\n        return;\n    }\n    const m = [];\n    for(; a.length;){\n        const r = a.shift();\n        if (!r) continue;\n        const o = r.toLowerCase();\n        if (o.includes(\"wc@\") || o.includes(\"walletconnect\") || o.includes(\"wc_\") || o.includes(\"wallet_connect\")) {\n            const f = await i.getItem(r);\n            await t.setItem(r, f), m.push(r);\n        }\n    }\n    await t.setItem(n, y), e(t), j(i, m);\n}, j = async (i, t)=>{\n    t.length && t.forEach(async (e)=>{\n        await i.removeItem(e);\n    });\n};\nclass h {\n    constructor(){\n        this.initialized = !1, this.setInitialized = (e)=>{\n            this.storage = e, this.initialized = !0;\n        };\n        const t = new K;\n        this.storage = t;\n        try {\n            const e = new _;\n            O(t, e, this.setInitialized);\n        } catch  {\n            this.initialized = !0;\n        }\n    }\n    async getKeys() {\n        return await this.initialize(), this.storage.getKeys();\n    }\n    async getEntries() {\n        return await this.initialize(), this.storage.getEntries();\n    }\n    async getItem(t) {\n        return await this.initialize(), this.storage.getItem(t);\n    }\n    async setItem(t, e) {\n        return await this.initialize(), this.storage.setItem(t, e);\n    }\n    async removeItem(t) {\n        return await this.initialize(), this.storage.removeItem(t);\n    }\n    async initialize() {\n        this.initialized || await new Promise((t)=>{\n            const e = setInterval(()=>{\n                this.initialized && (clearInterval(e), t());\n            }, 20);\n        });\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/keyvaluestorage/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/logger/dist/cjs/constants.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@walletconnect/logger/dist/cjs/constants.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.PINO_CUSTOM_CONTEXT_KEY = exports.PINO_LOGGER_DEFAULTS = void 0;\nexports.PINO_LOGGER_DEFAULTS = {\n    level: \"info\"\n};\nexports.PINO_CUSTOM_CONTEXT_KEY = \"custom_context\"; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xvZ2dlci9kaXN0L2Nqcy9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELCtCQUErQixHQUFHQSw0QkFBNEIsR0FBRyxLQUFLO0FBQ3RFQSw0QkFBNEIsR0FBRztJQUMzQkksT0FBTztBQUNYO0FBQ0FKLCtCQUErQixHQUFHLGtCQUNsQyxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jc2EvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xvZ2dlci9kaXN0L2Nqcy9jb25zdGFudHMuanM/NjYyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUElOT19DVVNUT01fQ09OVEVYVF9LRVkgPSBleHBvcnRzLlBJTk9fTE9HR0VSX0RFRkFVTFRTID0gdm9pZCAwO1xuZXhwb3J0cy5QSU5PX0xPR0dFUl9ERUZBVUxUUyA9IHtcbiAgICBsZXZlbDogXCJpbmZvXCIsXG59O1xuZXhwb3J0cy5QSU5PX0NVU1RPTV9DT05URVhUX0tFWSA9IFwiY3VzdG9tX2NvbnRleHRcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJQSU5PX0NVU1RPTV9DT05URVhUX0tFWSIsIlBJTk9fTE9HR0VSX0RFRkFVTFRTIiwibGV2ZWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/logger/dist/cjs/constants.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/logger/dist/cjs/index.js":
/*!******************************************************************!*\
  !*** ../../node_modules/@walletconnect/logger/dist/cjs/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.pino = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../../node_modules/tslib/tslib.es6.js\");\nconst pino_1 = tslib_1.__importDefault(__webpack_require__(/*! pino */ \"(ssr)/../../node_modules/pino/pino.js\"));\nObject.defineProperty(exports, \"pino\", ({\n    enumerable: true,\n    get: function() {\n        return pino_1.default;\n    }\n}));\ntslib_1.__exportStar(__webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/@walletconnect/logger/dist/cjs/constants.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./utils */ \"(ssr)/../../node_modules/@walletconnect/logger/dist/cjs/utils.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xvZ2dlci9kaXN0L2Nqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsWUFBWSxHQUFHLEtBQUs7QUFDcEIsTUFBTUcsVUFBVUMsbUJBQU9BLENBQUMsMERBQU87QUFDL0IsTUFBTUMsU0FBU0YsUUFBUUcsZUFBZSxDQUFDRixtQkFBT0EsQ0FBQyxtREFBTTtBQUNyRE4sd0NBQXVDO0lBQUVTLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9ILE9BQU9JLE9BQU87SUFBRTtBQUFFLENBQUMsRUFBQztBQUN6R04sUUFBUU8sWUFBWSxDQUFDTixtQkFBT0EsQ0FBQyx5RkFBYSxHQUFHSjtBQUM3Q0csUUFBUU8sWUFBWSxDQUFDTixtQkFBT0EsQ0FBQyxpRkFBUyxHQUFHSixVQUN6QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jc2EvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xvZ2dlci9kaXN0L2Nqcy9pbmRleC5qcz80OGY1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5waW5vID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IHBpbm9fMSA9IHRzbGliXzEuX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJwaW5vXCIpKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBpbm9cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHBpbm9fMS5kZWZhdWx0OyB9IH0pO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29uc3RhbnRzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3V0aWxzXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInBpbm8iLCJ0c2xpYl8xIiwicmVxdWlyZSIsInBpbm9fMSIsIl9faW1wb3J0RGVmYXVsdCIsImVudW1lcmFibGUiLCJnZXQiLCJkZWZhdWx0IiwiX19leHBvcnRTdGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/logger/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/logger/dist/cjs/utils.js":
/*!******************************************************************!*\
  !*** ../../node_modules/@walletconnect/logger/dist/cjs/utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.generateChildLogger = exports.formatChildLoggerContext = exports.getLoggerContext = exports.setBrowserLoggerContext = exports.getBrowserLoggerContext = exports.getDefaultLoggerOptions = void 0;\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/@walletconnect/logger/dist/cjs/constants.js\");\nfunction getDefaultLoggerOptions(opts) {\n    return Object.assign(Object.assign({}, opts), {\n        level: (opts === null || opts === void 0 ? void 0 : opts.level) || constants_1.PINO_LOGGER_DEFAULTS.level\n    });\n}\nexports.getDefaultLoggerOptions = getDefaultLoggerOptions;\nfunction getBrowserLoggerContext(logger, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {\n    return logger[customContextKey] || \"\";\n}\nexports.getBrowserLoggerContext = getBrowserLoggerContext;\nfunction setBrowserLoggerContext(logger, context, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {\n    logger[customContextKey] = context;\n    return logger;\n}\nexports.setBrowserLoggerContext = setBrowserLoggerContext;\nfunction getLoggerContext(logger, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {\n    let context = \"\";\n    if (typeof logger.bindings === \"undefined\") {\n        context = getBrowserLoggerContext(logger, customContextKey);\n    } else {\n        context = logger.bindings().context || \"\";\n    }\n    return context;\n}\nexports.getLoggerContext = getLoggerContext;\nfunction formatChildLoggerContext(logger, childContext, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {\n    const parentContext = getLoggerContext(logger, customContextKey);\n    const context = parentContext.trim() ? `${parentContext}/${childContext}` : childContext;\n    return context;\n}\nexports.formatChildLoggerContext = formatChildLoggerContext;\nfunction generateChildLogger(logger, childContext, customContextKey = constants_1.PINO_CUSTOM_CONTEXT_KEY) {\n    const context = formatChildLoggerContext(logger, childContext, customContextKey);\n    const child = logger.child({\n        context\n    });\n    return setBrowserLoggerContext(child, context, customContextKey);\n}\nexports.generateChildLogger = generateChildLogger; //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xvZ2dlci9kaXN0L2Nqcy91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsMkJBQTJCLEdBQUdBLGdDQUFnQyxHQUFHQSx3QkFBd0IsR0FBR0EsK0JBQStCLEdBQUdBLCtCQUErQixHQUFHQSwrQkFBK0IsR0FBRyxLQUFLO0FBQ3ZNLE1BQU1RLGNBQWNDLG1CQUFPQSxDQUFDLHlGQUFhO0FBQ3pDLFNBQVNGLHdCQUF3QkcsSUFBSTtJQUNqQyxPQUFPWixPQUFPYSxNQUFNLENBQUNiLE9BQU9hLE1BQU0sQ0FBQyxDQUFDLEdBQUdELE9BQU87UUFBRUUsT0FBTyxDQUFDRixTQUFTLFFBQVFBLFNBQVMsS0FBSyxJQUFJLEtBQUssSUFBSUEsS0FBS0UsS0FBSyxLQUFLSixZQUFZSyxvQkFBb0IsQ0FBQ0QsS0FBSztJQUFDO0FBQzlKO0FBQ0FaLCtCQUErQixHQUFHTztBQUNsQyxTQUFTRCx3QkFBd0JRLE1BQU0sRUFBRUMsbUJBQW1CUCxZQUFZUSx1QkFBdUI7SUFDM0YsT0FBT0YsTUFBTSxDQUFDQyxpQkFBaUIsSUFBSTtBQUN2QztBQUNBZiwrQkFBK0IsR0FBR007QUFDbEMsU0FBU0Qsd0JBQXdCUyxNQUFNLEVBQUVHLE9BQU8sRUFBRUYsbUJBQW1CUCxZQUFZUSx1QkFBdUI7SUFDcEdGLE1BQU0sQ0FBQ0MsaUJBQWlCLEdBQUdFO0lBQzNCLE9BQU9IO0FBQ1g7QUFDQWQsK0JBQStCLEdBQUdLO0FBQ2xDLFNBQVNELGlCQUFpQlUsTUFBTSxFQUFFQyxtQkFBbUJQLFlBQVlRLHVCQUF1QjtJQUNwRixJQUFJQyxVQUFVO0lBQ2QsSUFBSSxPQUFPSCxPQUFPSSxRQUFRLEtBQUssYUFBYTtRQUN4Q0QsVUFBVVgsd0JBQXdCUSxRQUFRQztJQUM5QyxPQUNLO1FBQ0RFLFVBQVVILE9BQU9JLFFBQVEsR0FBR0QsT0FBTyxJQUFJO0lBQzNDO0lBQ0EsT0FBT0E7QUFDWDtBQUNBakIsd0JBQXdCLEdBQUdJO0FBQzNCLFNBQVNELHlCQUF5QlcsTUFBTSxFQUFFSyxZQUFZLEVBQUVKLG1CQUFtQlAsWUFBWVEsdUJBQXVCO0lBQzFHLE1BQU1JLGdCQUFnQmhCLGlCQUFpQlUsUUFBUUM7SUFDL0MsTUFBTUUsVUFBVUcsY0FBY0MsSUFBSSxLQUM1QixDQUFDLEVBQUVELGNBQWMsQ0FBQyxFQUFFRCxhQUFhLENBQUMsR0FDbENBO0lBQ04sT0FBT0Y7QUFDWDtBQUNBakIsZ0NBQWdDLEdBQUdHO0FBQ25DLFNBQVNELG9CQUFvQlksTUFBTSxFQUFFSyxZQUFZLEVBQUVKLG1CQUFtQlAsWUFBWVEsdUJBQXVCO0lBQ3JHLE1BQU1DLFVBQVVkLHlCQUF5QlcsUUFBUUssY0FBY0o7SUFDL0QsTUFBTU8sUUFBUVIsT0FBT1EsS0FBSyxDQUFDO1FBQUVMO0lBQVE7SUFDckMsT0FBT1osd0JBQXdCaUIsT0FBT0wsU0FBU0Y7QUFDbkQ7QUFDQWYsMkJBQTJCLEdBQUdFLHFCQUM5QixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jc2EvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2xvZ2dlci9kaXN0L2Nqcy91dGlscy5qcz9mNGNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZW5lcmF0ZUNoaWxkTG9nZ2VyID0gZXhwb3J0cy5mb3JtYXRDaGlsZExvZ2dlckNvbnRleHQgPSBleHBvcnRzLmdldExvZ2dlckNvbnRleHQgPSBleHBvcnRzLnNldEJyb3dzZXJMb2dnZXJDb250ZXh0ID0gZXhwb3J0cy5nZXRCcm93c2VyTG9nZ2VyQ29udGV4dCA9IGV4cG9ydHMuZ2V0RGVmYXVsdExvZ2dlck9wdGlvbnMgPSB2b2lkIDA7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtcbmZ1bmN0aW9uIGdldERlZmF1bHRMb2dnZXJPcHRpb25zKG9wdHMpIHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBvcHRzKSwgeyBsZXZlbDogKG9wdHMgPT09IG51bGwgfHwgb3B0cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0cy5sZXZlbCkgfHwgY29uc3RhbnRzXzEuUElOT19MT0dHRVJfREVGQVVMVFMubGV2ZWwgfSk7XG59XG5leHBvcnRzLmdldERlZmF1bHRMb2dnZXJPcHRpb25zID0gZ2V0RGVmYXVsdExvZ2dlck9wdGlvbnM7XG5mdW5jdGlvbiBnZXRCcm93c2VyTG9nZ2VyQ29udGV4dChsb2dnZXIsIGN1c3RvbUNvbnRleHRLZXkgPSBjb25zdGFudHNfMS5QSU5PX0NVU1RPTV9DT05URVhUX0tFWSkge1xuICAgIHJldHVybiBsb2dnZXJbY3VzdG9tQ29udGV4dEtleV0gfHwgXCJcIjtcbn1cbmV4cG9ydHMuZ2V0QnJvd3NlckxvZ2dlckNvbnRleHQgPSBnZXRCcm93c2VyTG9nZ2VyQ29udGV4dDtcbmZ1bmN0aW9uIHNldEJyb3dzZXJMb2dnZXJDb250ZXh0KGxvZ2dlciwgY29udGV4dCwgY3VzdG9tQ29udGV4dEtleSA9IGNvbnN0YW50c18xLlBJTk9fQ1VTVE9NX0NPTlRFWFRfS0VZKSB7XG4gICAgbG9nZ2VyW2N1c3RvbUNvbnRleHRLZXldID0gY29udGV4dDtcbiAgICByZXR1cm4gbG9nZ2VyO1xufVxuZXhwb3J0cy5zZXRCcm93c2VyTG9nZ2VyQ29udGV4dCA9IHNldEJyb3dzZXJMb2dnZXJDb250ZXh0O1xuZnVuY3Rpb24gZ2V0TG9nZ2VyQ29udGV4dChsb2dnZXIsIGN1c3RvbUNvbnRleHRLZXkgPSBjb25zdGFudHNfMS5QSU5PX0NVU1RPTV9DT05URVhUX0tFWSkge1xuICAgIGxldCBjb250ZXh0ID0gXCJcIjtcbiAgICBpZiAodHlwZW9mIGxvZ2dlci5iaW5kaW5ncyA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBjb250ZXh0ID0gZ2V0QnJvd3NlckxvZ2dlckNvbnRleHQobG9nZ2VyLCBjdXN0b21Db250ZXh0S2V5KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnRleHQgPSBsb2dnZXIuYmluZGluZ3MoKS5jb250ZXh0IHx8IFwiXCI7XG4gICAgfVxuICAgIHJldHVybiBjb250ZXh0O1xufVxuZXhwb3J0cy5nZXRMb2dnZXJDb250ZXh0ID0gZ2V0TG9nZ2VyQ29udGV4dDtcbmZ1bmN0aW9uIGZvcm1hdENoaWxkTG9nZ2VyQ29udGV4dChsb2dnZXIsIGNoaWxkQ29udGV4dCwgY3VzdG9tQ29udGV4dEtleSA9IGNvbnN0YW50c18xLlBJTk9fQ1VTVE9NX0NPTlRFWFRfS0VZKSB7XG4gICAgY29uc3QgcGFyZW50Q29udGV4dCA9IGdldExvZ2dlckNvbnRleHQobG9nZ2VyLCBjdXN0b21Db250ZXh0S2V5KTtcbiAgICBjb25zdCBjb250ZXh0ID0gcGFyZW50Q29udGV4dC50cmltKClcbiAgICAgICAgPyBgJHtwYXJlbnRDb250ZXh0fS8ke2NoaWxkQ29udGV4dH1gXG4gICAgICAgIDogY2hpbGRDb250ZXh0O1xuICAgIHJldHVybiBjb250ZXh0O1xufVxuZXhwb3J0cy5mb3JtYXRDaGlsZExvZ2dlckNvbnRleHQgPSBmb3JtYXRDaGlsZExvZ2dlckNvbnRleHQ7XG5mdW5jdGlvbiBnZW5lcmF0ZUNoaWxkTG9nZ2VyKGxvZ2dlciwgY2hpbGRDb250ZXh0LCBjdXN0b21Db250ZXh0S2V5ID0gY29uc3RhbnRzXzEuUElOT19DVVNUT01fQ09OVEVYVF9LRVkpIHtcbiAgICBjb25zdCBjb250ZXh0ID0gZm9ybWF0Q2hpbGRMb2dnZXJDb250ZXh0KGxvZ2dlciwgY2hpbGRDb250ZXh0LCBjdXN0b21Db250ZXh0S2V5KTtcbiAgICBjb25zdCBjaGlsZCA9IGxvZ2dlci5jaGlsZCh7IGNvbnRleHQgfSk7XG4gICAgcmV0dXJuIHNldEJyb3dzZXJMb2dnZXJDb250ZXh0KGNoaWxkLCBjb250ZXh0LCBjdXN0b21Db250ZXh0S2V5KTtcbn1cbmV4cG9ydHMuZ2VuZXJhdGVDaGlsZExvZ2dlciA9IGdlbmVyYXRlQ2hpbGRMb2dnZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZW5lcmF0ZUNoaWxkTG9nZ2VyIiwiZm9ybWF0Q2hpbGRMb2dnZXJDb250ZXh0IiwiZ2V0TG9nZ2VyQ29udGV4dCIsInNldEJyb3dzZXJMb2dnZXJDb250ZXh0IiwiZ2V0QnJvd3NlckxvZ2dlckNvbnRleHQiLCJnZXREZWZhdWx0TG9nZ2VyT3B0aW9ucyIsImNvbnN0YW50c18xIiwicmVxdWlyZSIsIm9wdHMiLCJhc3NpZ24iLCJsZXZlbCIsIlBJTk9fTE9HR0VSX0RFRkFVTFRTIiwibG9nZ2VyIiwiY3VzdG9tQ29udGV4dEtleSIsIlBJTk9fQ1VTVE9NX0NPTlRFWFRfS0VZIiwiY29udGV4dCIsImJpbmRpbmdzIiwiY2hpbGRDb250ZXh0IiwicGFyZW50Q29udGV4dCIsInRyaW0iLCJjaGlsZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/logger/dist/cjs/utils.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/index.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/@walletconnect/relay-api/dist/esm/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RELAY_JSONRPC: () => (/* reexport safe */ _jsonrpc__WEBPACK_IMPORTED_MODULE_2__.RELAY_JSONRPC),\n/* harmony export */   isPublishMethod: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isPublishMethod),\n/* harmony export */   isPublishParams: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isPublishParams),\n/* harmony export */   isPublishRequest: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isPublishRequest),\n/* harmony export */   isSubscribeMethod: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isSubscribeMethod),\n/* harmony export */   isSubscribeParams: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isSubscribeParams),\n/* harmony export */   isSubscribeRequest: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isSubscribeRequest),\n/* harmony export */   isSubscriptionMethod: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isSubscriptionMethod),\n/* harmony export */   isSubscriptionParams: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isSubscriptionParams),\n/* harmony export */   isSubscriptionRequest: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isSubscriptionRequest),\n/* harmony export */   isUnsubscribeMethod: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isUnsubscribeMethod),\n/* harmony export */   isUnsubscribeParams: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isUnsubscribeParams),\n/* harmony export */   isUnsubscribeRequest: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_3__.isUnsubscribeRequest),\n/* harmony export */   parsePublishRequest: () => (/* reexport safe */ _parsers__WEBPACK_IMPORTED_MODULE_1__.parsePublishRequest),\n/* harmony export */   parseSubscribeRequest: () => (/* reexport safe */ _parsers__WEBPACK_IMPORTED_MODULE_1__.parseSubscribeRequest),\n/* harmony export */   parseSubscriptionRequest: () => (/* reexport safe */ _parsers__WEBPACK_IMPORTED_MODULE_1__.parseSubscriptionRequest),\n/* harmony export */   parseUnsubscribeRequest: () => (/* reexport safe */ _parsers__WEBPACK_IMPORTED_MODULE_1__.parseUnsubscribeRequest)\n/* harmony export */ });\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ \"(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/types.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_types__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _types__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _types__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _parsers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parsers */ \"(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/parsers.js\");\n/* harmony import */ var _jsonrpc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jsonrpc */ \"(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/jsonrpc.js\");\n/* harmony import */ var _validators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validators */ \"(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/validators.js\");\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWFwaS9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXdCO0FBQ0U7QUFDQTtBQUNHLENBQzdCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NzYS8uLi8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXBpL2Rpc3QvZXNtL2luZGV4LmpzP2UzZTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vdHlwZXNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3BhcnNlcnNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2pzb25ycGNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3ZhbGlkYXRvcnNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/jsonrpc.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@walletconnect/relay-api/dist/esm/jsonrpc.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RELAY_JSONRPC: () => (/* binding */ RELAY_JSONRPC)\n/* harmony export */ });\nconst RELAY_JSONRPC = {\n    waku: {\n        publish: \"waku_publish\",\n        batchPublish: \"waku_batchPublish\",\n        subscribe: \"waku_subscribe\",\n        batchSubscribe: \"waku_batchSubscribe\",\n        subscription: \"waku_subscription\",\n        unsubscribe: \"waku_unsubscribe\",\n        batchUnsubscribe: \"waku_batchUnsubscribe\"\n    },\n    irn: {\n        publish: \"irn_publish\",\n        batchPublish: \"irn_batchPublish\",\n        subscribe: \"irn_subscribe\",\n        batchSubscribe: \"irn_batchSubscribe\",\n        subscription: \"irn_subscription\",\n        unsubscribe: \"irn_unsubscribe\",\n        batchUnsubscribe: \"irn_batchUnsubscribe\"\n    },\n    iridium: {\n        publish: \"iridium_publish\",\n        batchPublish: \"iridium_batchPublish\",\n        subscribe: \"iridium_subscribe\",\n        batchSubscribe: \"iridium_batchSubscribe\",\n        subscription: \"iridium_subscription\",\n        unsubscribe: \"iridium_unsubscribe\",\n        batchUnsubscribe: \"iridium_batchUnsubscribe\"\n    }\n}; //# sourceMappingURL=jsonrpc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWFwaS9kaXN0L2VzbS9qc29ucnBjLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxnQkFBZ0I7SUFDekJDLE1BQU07UUFDRkMsU0FBUztRQUNUQyxjQUFjO1FBQ2RDLFdBQVc7UUFDWEMsZ0JBQWdCO1FBQ2hCQyxjQUFjO1FBQ2RDLGFBQWE7UUFDYkMsa0JBQWtCO0lBQ3RCO0lBQ0FDLEtBQUs7UUFDRFAsU0FBUztRQUNUQyxjQUFjO1FBQ2RDLFdBQVc7UUFDWEMsZ0JBQWdCO1FBQ2hCQyxjQUFjO1FBQ2RDLGFBQWE7UUFDYkMsa0JBQWtCO0lBQ3RCO0lBQ0FFLFNBQVM7UUFDTFIsU0FBUztRQUNUQyxjQUFjO1FBQ2RDLFdBQVc7UUFDWEMsZ0JBQWdCO1FBQ2hCQyxjQUFjO1FBQ2RDLGFBQWE7UUFDYkMsa0JBQWtCO0lBQ3RCO0FBQ0osRUFBRSxDQUNGLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NzYS8uLi8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXBpL2Rpc3QvZXNtL2pzb25ycGMuanM/MmE5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgUkVMQVlfSlNPTlJQQyA9IHtcbiAgICB3YWt1OiB7XG4gICAgICAgIHB1Ymxpc2g6IFwid2FrdV9wdWJsaXNoXCIsXG4gICAgICAgIGJhdGNoUHVibGlzaDogXCJ3YWt1X2JhdGNoUHVibGlzaFwiLFxuICAgICAgICBzdWJzY3JpYmU6IFwid2FrdV9zdWJzY3JpYmVcIixcbiAgICAgICAgYmF0Y2hTdWJzY3JpYmU6IFwid2FrdV9iYXRjaFN1YnNjcmliZVwiLFxuICAgICAgICBzdWJzY3JpcHRpb246IFwid2FrdV9zdWJzY3JpcHRpb25cIixcbiAgICAgICAgdW5zdWJzY3JpYmU6IFwid2FrdV91bnN1YnNjcmliZVwiLFxuICAgICAgICBiYXRjaFVuc3Vic2NyaWJlOiBcIndha3VfYmF0Y2hVbnN1YnNjcmliZVwiLFxuICAgIH0sXG4gICAgaXJuOiB7XG4gICAgICAgIHB1Ymxpc2g6IFwiaXJuX3B1Ymxpc2hcIixcbiAgICAgICAgYmF0Y2hQdWJsaXNoOiBcImlybl9iYXRjaFB1Ymxpc2hcIixcbiAgICAgICAgc3Vic2NyaWJlOiBcImlybl9zdWJzY3JpYmVcIixcbiAgICAgICAgYmF0Y2hTdWJzY3JpYmU6IFwiaXJuX2JhdGNoU3Vic2NyaWJlXCIsXG4gICAgICAgIHN1YnNjcmlwdGlvbjogXCJpcm5fc3Vic2NyaXB0aW9uXCIsXG4gICAgICAgIHVuc3Vic2NyaWJlOiBcImlybl91bnN1YnNjcmliZVwiLFxuICAgICAgICBiYXRjaFVuc3Vic2NyaWJlOiBcImlybl9iYXRjaFVuc3Vic2NyaWJlXCIsXG4gICAgfSxcbiAgICBpcmlkaXVtOiB7XG4gICAgICAgIHB1Ymxpc2g6IFwiaXJpZGl1bV9wdWJsaXNoXCIsXG4gICAgICAgIGJhdGNoUHVibGlzaDogXCJpcmlkaXVtX2JhdGNoUHVibGlzaFwiLFxuICAgICAgICBzdWJzY3JpYmU6IFwiaXJpZGl1bV9zdWJzY3JpYmVcIixcbiAgICAgICAgYmF0Y2hTdWJzY3JpYmU6IFwiaXJpZGl1bV9iYXRjaFN1YnNjcmliZVwiLFxuICAgICAgICBzdWJzY3JpcHRpb246IFwiaXJpZGl1bV9zdWJzY3JpcHRpb25cIixcbiAgICAgICAgdW5zdWJzY3JpYmU6IFwiaXJpZGl1bV91bnN1YnNjcmliZVwiLFxuICAgICAgICBiYXRjaFVuc3Vic2NyaWJlOiBcImlyaWRpdW1fYmF0Y2hVbnN1YnNjcmliZVwiLFxuICAgIH0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9anNvbnJwYy5qcy5tYXAiXSwibmFtZXMiOlsiUkVMQVlfSlNPTlJQQyIsIndha3UiLCJwdWJsaXNoIiwiYmF0Y2hQdWJsaXNoIiwic3Vic2NyaWJlIiwiYmF0Y2hTdWJzY3JpYmUiLCJzdWJzY3JpcHRpb24iLCJ1bnN1YnNjcmliZSIsImJhdGNoVW5zdWJzY3JpYmUiLCJpcm4iLCJpcmlkaXVtIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/jsonrpc.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/misc.js":
/*!********************************************************************!*\
  !*** ../../node_modules/@walletconnect/relay-api/dist/esm/misc.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertType: () => (/* binding */ assertType),\n/* harmony export */   checkParams: () => (/* binding */ checkParams),\n/* harmony export */   hasExactParamsLength: () => (/* binding */ hasExactParamsLength),\n/* harmony export */   hasRequiredParams: () => (/* binding */ hasRequiredParams),\n/* harmony export */   hasRequiredParamsLength: () => (/* binding */ hasRequiredParamsLength),\n/* harmony export */   methodEndsWith: () => (/* binding */ methodEndsWith)\n/* harmony export */ });\nfunction assertType(obj, key, type = \"string\") {\n    if (!obj[key] || typeof obj[key] !== type) {\n        throw new Error(`Missing or invalid \"${key}\" param`);\n    }\n}\nfunction hasRequiredParams(params, required) {\n    let matches = true;\n    required.forEach((key)=>{\n        const exists = key in params;\n        if (!exists) {\n            matches = false;\n        }\n    });\n    return matches;\n}\nfunction hasExactParamsLength(params, length) {\n    return Array.isArray(params) ? params.length === length : Object.keys(params).length === length;\n}\nfunction hasRequiredParamsLength(params, minLength) {\n    return Array.isArray(params) ? params.length >= minLength : Object.keys(params).length >= minLength;\n}\nfunction checkParams(params, required, optional) {\n    const exact = !optional.length;\n    const matchesLength = exact ? hasExactParamsLength(params, required.length) : hasRequiredParamsLength(params, required.length);\n    if (!matchesLength) return false;\n    return hasRequiredParams(params, required);\n}\nfunction methodEndsWith(method, expected, separator = \"_\") {\n    const split = method.split(separator);\n    return split[split.length - 1].trim().toLowerCase() === expected.trim().toLowerCase();\n} //# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWFwaS9kaXN0L2VzbS9taXNjLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFPLFNBQVNBLFdBQVdDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxPQUFPLFFBQVE7SUFDaEQsSUFBSSxDQUFDRixHQUFHLENBQUNDLElBQUksSUFBSSxPQUFPRCxHQUFHLENBQUNDLElBQUksS0FBS0MsTUFBTTtRQUN2QyxNQUFNLElBQUlDLE1BQU0sQ0FBQyxvQkFBb0IsRUFBRUYsSUFBSSxPQUFPLENBQUM7SUFDdkQ7QUFDSjtBQUNPLFNBQVNHLGtCQUFrQkMsTUFBTSxFQUFFQyxRQUFRO0lBQzlDLElBQUlDLFVBQVU7SUFDZEQsU0FBU0UsT0FBTyxDQUFDUCxDQUFBQTtRQUNiLE1BQU1RLFNBQVNSLE9BQU9JO1FBQ3RCLElBQUksQ0FBQ0ksUUFBUTtZQUNURixVQUFVO1FBQ2Q7SUFDSjtJQUNBLE9BQU9BO0FBQ1g7QUFDTyxTQUFTRyxxQkFBcUJMLE1BQU0sRUFBRU0sTUFBTTtJQUMvQyxPQUFPQyxNQUFNQyxPQUFPLENBQUNSLFVBQ2ZBLE9BQU9NLE1BQU0sS0FBS0EsU0FDbEJHLE9BQU9DLElBQUksQ0FBQ1YsUUFBUU0sTUFBTSxLQUFLQTtBQUN6QztBQUNPLFNBQVNLLHdCQUF3QlgsTUFBTSxFQUFFWSxTQUFTO0lBQ3JELE9BQU9MLE1BQU1DLE9BQU8sQ0FBQ1IsVUFDZkEsT0FBT00sTUFBTSxJQUFJTSxZQUNqQkgsT0FBT0MsSUFBSSxDQUFDVixRQUFRTSxNQUFNLElBQUlNO0FBQ3hDO0FBQ08sU0FBU0MsWUFBWWIsTUFBTSxFQUFFQyxRQUFRLEVBQUVhLFFBQVE7SUFDbEQsTUFBTUMsUUFBUSxDQUFDRCxTQUFTUixNQUFNO0lBQzlCLE1BQU1VLGdCQUFnQkQsUUFDaEJWLHFCQUFxQkwsUUFBUUMsU0FBU0ssTUFBTSxJQUM1Q0ssd0JBQXdCWCxRQUFRQyxTQUFTSyxNQUFNO0lBQ3JELElBQUksQ0FBQ1UsZUFDRCxPQUFPO0lBQ1gsT0FBT2pCLGtCQUFrQkMsUUFBUUM7QUFDckM7QUFDTyxTQUFTZ0IsZUFBZUMsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLFlBQVksR0FBRztJQUM1RCxNQUFNQyxRQUFRSCxPQUFPRyxLQUFLLENBQUNEO0lBQzNCLE9BQVFDLEtBQUssQ0FBQ0EsTUFBTWYsTUFBTSxHQUFHLEVBQUUsQ0FBQ2dCLElBQUksR0FBR0MsV0FBVyxPQUM5Q0osU0FBU0csSUFBSSxHQUFHQyxXQUFXO0FBQ25DLEVBQ0EsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hcGkvZGlzdC9lc20vbWlzYy5qcz9lZjI0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBhc3NlcnRUeXBlKG9iaiwga2V5LCB0eXBlID0gXCJzdHJpbmdcIikge1xuICAgIGlmICghb2JqW2tleV0gfHwgdHlwZW9mIG9ialtrZXldICE9PSB0eXBlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgTWlzc2luZyBvciBpbnZhbGlkIFwiJHtrZXl9XCIgcGFyYW1gKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gaGFzUmVxdWlyZWRQYXJhbXMocGFyYW1zLCByZXF1aXJlZCkge1xuICAgIGxldCBtYXRjaGVzID0gdHJ1ZTtcbiAgICByZXF1aXJlZC5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgIGNvbnN0IGV4aXN0cyA9IGtleSBpbiBwYXJhbXM7XG4gICAgICAgIGlmICghZXhpc3RzKSB7XG4gICAgICAgICAgICBtYXRjaGVzID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gbWF0Y2hlcztcbn1cbmV4cG9ydCBmdW5jdGlvbiBoYXNFeGFjdFBhcmFtc0xlbmd0aChwYXJhbXMsIGxlbmd0aCkge1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KHBhcmFtcylcbiAgICAgICAgPyBwYXJhbXMubGVuZ3RoID09PSBsZW5ndGhcbiAgICAgICAgOiBPYmplY3Qua2V5cyhwYXJhbXMpLmxlbmd0aCA9PT0gbGVuZ3RoO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGhhc1JlcXVpcmVkUGFyYW1zTGVuZ3RoKHBhcmFtcywgbWluTGVuZ3RoKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkocGFyYW1zKVxuICAgICAgICA/IHBhcmFtcy5sZW5ndGggPj0gbWluTGVuZ3RoXG4gICAgICAgIDogT2JqZWN0LmtleXMocGFyYW1zKS5sZW5ndGggPj0gbWluTGVuZ3RoO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrUGFyYW1zKHBhcmFtcywgcmVxdWlyZWQsIG9wdGlvbmFsKSB7XG4gICAgY29uc3QgZXhhY3QgPSAhb3B0aW9uYWwubGVuZ3RoO1xuICAgIGNvbnN0IG1hdGNoZXNMZW5ndGggPSBleGFjdFxuICAgICAgICA/IGhhc0V4YWN0UGFyYW1zTGVuZ3RoKHBhcmFtcywgcmVxdWlyZWQubGVuZ3RoKVxuICAgICAgICA6IGhhc1JlcXVpcmVkUGFyYW1zTGVuZ3RoKHBhcmFtcywgcmVxdWlyZWQubGVuZ3RoKTtcbiAgICBpZiAoIW1hdGNoZXNMZW5ndGgpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gaGFzUmVxdWlyZWRQYXJhbXMocGFyYW1zLCByZXF1aXJlZCk7XG59XG5leHBvcnQgZnVuY3Rpb24gbWV0aG9kRW5kc1dpdGgobWV0aG9kLCBleHBlY3RlZCwgc2VwYXJhdG9yID0gXCJfXCIpIHtcbiAgICBjb25zdCBzcGxpdCA9IG1ldGhvZC5zcGxpdChzZXBhcmF0b3IpO1xuICAgIHJldHVybiAoc3BsaXRbc3BsaXQubGVuZ3RoIC0gMV0udHJpbSgpLnRvTG93ZXJDYXNlKCkgPT09XG4gICAgICAgIGV4cGVjdGVkLnRyaW0oKS50b0xvd2VyQ2FzZSgpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1pc2MuanMubWFwIl0sIm5hbWVzIjpbImFzc2VydFR5cGUiLCJvYmoiLCJrZXkiLCJ0eXBlIiwiRXJyb3IiLCJoYXNSZXF1aXJlZFBhcmFtcyIsInBhcmFtcyIsInJlcXVpcmVkIiwibWF0Y2hlcyIsImZvckVhY2giLCJleGlzdHMiLCJoYXNFeGFjdFBhcmFtc0xlbmd0aCIsImxlbmd0aCIsIkFycmF5IiwiaXNBcnJheSIsIk9iamVjdCIsImtleXMiLCJoYXNSZXF1aXJlZFBhcmFtc0xlbmd0aCIsIm1pbkxlbmd0aCIsImNoZWNrUGFyYW1zIiwib3B0aW9uYWwiLCJleGFjdCIsIm1hdGNoZXNMZW5ndGgiLCJtZXRob2RFbmRzV2l0aCIsIm1ldGhvZCIsImV4cGVjdGVkIiwic2VwYXJhdG9yIiwic3BsaXQiLCJ0cmltIiwidG9Mb3dlckNhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/misc.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/parsers.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@walletconnect/relay-api/dist/esm/parsers.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parsePublishRequest: () => (/* binding */ parsePublishRequest),\n/* harmony export */   parseSubscribeRequest: () => (/* binding */ parseSubscribeRequest),\n/* harmony export */   parseSubscriptionRequest: () => (/* binding */ parseSubscriptionRequest),\n/* harmony export */   parseUnsubscribeRequest: () => (/* binding */ parseUnsubscribeRequest)\n/* harmony export */ });\n/* harmony import */ var _misc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./misc */ \"(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/misc.js\");\n/* harmony import */ var _validators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./validators */ \"(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/validators.js\");\n\n\nfunction parseSubscribeRequest(request) {\n    if (!(0,_validators__WEBPACK_IMPORTED_MODULE_1__.isSubscribeMethod)(request.method)) {\n        throw new Error(\"JSON-RPC Request has invalid subscribe method\");\n    }\n    if (!(0,_validators__WEBPACK_IMPORTED_MODULE_1__.isSubscribeParams)(request.params)) {\n        throw new Error(\"JSON-RPC Request has invalid subscribe params\");\n    }\n    const params = request.params;\n    (0,_misc__WEBPACK_IMPORTED_MODULE_0__.assertType)(params, \"topic\");\n    return params;\n}\nfunction parsePublishRequest(request) {\n    if (!(0,_validators__WEBPACK_IMPORTED_MODULE_1__.isPublishMethod)(request.method)) {\n        throw new Error(\"JSON-RPC Request has invalid publish method\");\n    }\n    if (!(0,_validators__WEBPACK_IMPORTED_MODULE_1__.isPublishParams)(request.params)) {\n        throw new Error(\"JSON-RPC Request has invalid publish params\");\n    }\n    const params = request.params;\n    (0,_misc__WEBPACK_IMPORTED_MODULE_0__.assertType)(params, \"topic\");\n    (0,_misc__WEBPACK_IMPORTED_MODULE_0__.assertType)(params, \"message\");\n    (0,_misc__WEBPACK_IMPORTED_MODULE_0__.assertType)(params, \"ttl\", \"number\");\n    return params;\n}\nfunction parseUnsubscribeRequest(request) {\n    if (!(0,_validators__WEBPACK_IMPORTED_MODULE_1__.isUnsubscribeMethod)(request.method)) {\n        throw new Error(\"JSON-RPC Request has invalid unsubscribe method\");\n    }\n    if (!(0,_validators__WEBPACK_IMPORTED_MODULE_1__.isUnsubscribeParams)(request.params)) {\n        throw new Error(\"JSON-RPC Request has invalid unsubscribe params\");\n    }\n    const params = request.params;\n    (0,_misc__WEBPACK_IMPORTED_MODULE_0__.assertType)(params, \"id\");\n    return params;\n}\nfunction parseSubscriptionRequest(request) {\n    if (!(0,_validators__WEBPACK_IMPORTED_MODULE_1__.isSubscriptionMethod)(request.method)) {\n        throw new Error(\"JSON-RPC Request has invalid subscription method\");\n    }\n    if (!(0,_validators__WEBPACK_IMPORTED_MODULE_1__.isSubscriptionParams)(request.params)) {\n        throw new Error(\"JSON-RPC Request has invalid subscription params\");\n    }\n    const params = request.params;\n    (0,_misc__WEBPACK_IMPORTED_MODULE_0__.assertType)(params, \"id\");\n    (0,_misc__WEBPACK_IMPORTED_MODULE_0__.assertType)(params, \"data\");\n    return params;\n} //# sourceMappingURL=parsers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWFwaS9kaXN0L2VzbS9wYXJzZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFvQztBQUN5SjtBQUN0TCxTQUFTUyxzQkFBc0JDLE9BQU87SUFDekMsSUFBSSxDQUFDUCw4REFBaUJBLENBQUNPLFFBQVFDLE1BQU0sR0FBRztRQUNwQyxNQUFNLElBQUlDLE1BQU07SUFDcEI7SUFDQSxJQUFJLENBQUNSLDhEQUFpQkEsQ0FBQ00sUUFBUUcsTUFBTSxHQUFHO1FBQ3BDLE1BQU0sSUFBSUQsTUFBTTtJQUNwQjtJQUNBLE1BQU1DLFNBQVNILFFBQVFHLE1BQU07SUFDN0JiLGlEQUFVQSxDQUFDYSxRQUFRO0lBQ25CLE9BQU9BO0FBQ1g7QUFDTyxTQUFTQyxvQkFBb0JKLE9BQU87SUFDdkMsSUFBSSxDQUFDVCw0REFBZUEsQ0FBQ1MsUUFBUUMsTUFBTSxHQUFHO1FBQ2xDLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBLElBQUksQ0FBQ1YsNERBQWVBLENBQUNRLFFBQVFHLE1BQU0sR0FBRztRQUNsQyxNQUFNLElBQUlELE1BQU07SUFDcEI7SUFDQSxNQUFNQyxTQUFTSCxRQUFRRyxNQUFNO0lBQzdCYixpREFBVUEsQ0FBQ2EsUUFBUTtJQUNuQmIsaURBQVVBLENBQUNhLFFBQVE7SUFDbkJiLGlEQUFVQSxDQUFDYSxRQUFRLE9BQU87SUFDMUIsT0FBT0E7QUFDWDtBQUNPLFNBQVNFLHdCQUF3QkwsT0FBTztJQUMzQyxJQUFJLENBQUNILGdFQUFtQkEsQ0FBQ0csUUFBUUMsTUFBTSxHQUFHO1FBQ3RDLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBLElBQUksQ0FBQ0osZ0VBQW1CQSxDQUFDRSxRQUFRRyxNQUFNLEdBQUc7UUFDdEMsTUFBTSxJQUFJRCxNQUFNO0lBQ3BCO0lBQ0EsTUFBTUMsU0FBU0gsUUFBUUcsTUFBTTtJQUM3QmIsaURBQVVBLENBQUNhLFFBQVE7SUFDbkIsT0FBT0E7QUFDWDtBQUNPLFNBQVNHLHlCQUF5Qk4sT0FBTztJQUM1QyxJQUFJLENBQUNMLGlFQUFvQkEsQ0FBQ0ssUUFBUUMsTUFBTSxHQUFHO1FBQ3ZDLE1BQU0sSUFBSUMsTUFBTTtJQUNwQjtJQUNBLElBQUksQ0FBQ04saUVBQW9CQSxDQUFDSSxRQUFRRyxNQUFNLEdBQUc7UUFDdkMsTUFBTSxJQUFJRCxNQUFNO0lBQ3BCO0lBQ0EsTUFBTUMsU0FBU0gsUUFBUUcsTUFBTTtJQUM3QmIsaURBQVVBLENBQUNhLFFBQVE7SUFDbkJiLGlEQUFVQSxDQUFDYSxRQUFRO0lBQ25CLE9BQU9BO0FBQ1gsRUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jc2EvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWFwaS9kaXN0L2VzbS9wYXJzZXJzLmpzPzBkMjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXNzZXJ0VHlwZSB9IGZyb20gXCIuL21pc2NcIjtcbmltcG9ydCB7IGlzUHVibGlzaE1ldGhvZCwgaXNQdWJsaXNoUGFyYW1zLCBpc1N1YnNjcmliZU1ldGhvZCwgaXNTdWJzY3JpYmVQYXJhbXMsIGlzU3Vic2NyaXB0aW9uTWV0aG9kLCBpc1N1YnNjcmlwdGlvblBhcmFtcywgaXNVbnN1YnNjcmliZU1ldGhvZCwgaXNVbnN1YnNjcmliZVBhcmFtcywgfSBmcm9tIFwiLi92YWxpZGF0b3JzXCI7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VTdWJzY3JpYmVSZXF1ZXN0KHJlcXVlc3QpIHtcbiAgICBpZiAoIWlzU3Vic2NyaWJlTWV0aG9kKHJlcXVlc3QubWV0aG9kKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJKU09OLVJQQyBSZXF1ZXN0IGhhcyBpbnZhbGlkIHN1YnNjcmliZSBtZXRob2RcIik7XG4gICAgfVxuICAgIGlmICghaXNTdWJzY3JpYmVQYXJhbXMocmVxdWVzdC5wYXJhbXMpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkpTT04tUlBDIFJlcXVlc3QgaGFzIGludmFsaWQgc3Vic2NyaWJlIHBhcmFtc1wiKTtcbiAgICB9XG4gICAgY29uc3QgcGFyYW1zID0gcmVxdWVzdC5wYXJhbXM7XG4gICAgYXNzZXJ0VHlwZShwYXJhbXMsIFwidG9waWNcIik7XG4gICAgcmV0dXJuIHBhcmFtcztcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVB1Ymxpc2hSZXF1ZXN0KHJlcXVlc3QpIHtcbiAgICBpZiAoIWlzUHVibGlzaE1ldGhvZChyZXF1ZXN0Lm1ldGhvZCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSlNPTi1SUEMgUmVxdWVzdCBoYXMgaW52YWxpZCBwdWJsaXNoIG1ldGhvZFwiKTtcbiAgICB9XG4gICAgaWYgKCFpc1B1Ymxpc2hQYXJhbXMocmVxdWVzdC5wYXJhbXMpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkpTT04tUlBDIFJlcXVlc3QgaGFzIGludmFsaWQgcHVibGlzaCBwYXJhbXNcIik7XG4gICAgfVxuICAgIGNvbnN0IHBhcmFtcyA9IHJlcXVlc3QucGFyYW1zO1xuICAgIGFzc2VydFR5cGUocGFyYW1zLCBcInRvcGljXCIpO1xuICAgIGFzc2VydFR5cGUocGFyYW1zLCBcIm1lc3NhZ2VcIik7XG4gICAgYXNzZXJ0VHlwZShwYXJhbXMsIFwidHRsXCIsIFwibnVtYmVyXCIpO1xuICAgIHJldHVybiBwYXJhbXM7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VVbnN1YnNjcmliZVJlcXVlc3QocmVxdWVzdCkge1xuICAgIGlmICghaXNVbnN1YnNjcmliZU1ldGhvZChyZXF1ZXN0Lm1ldGhvZCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSlNPTi1SUEMgUmVxdWVzdCBoYXMgaW52YWxpZCB1bnN1YnNjcmliZSBtZXRob2RcIik7XG4gICAgfVxuICAgIGlmICghaXNVbnN1YnNjcmliZVBhcmFtcyhyZXF1ZXN0LnBhcmFtcykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSlNPTi1SUEMgUmVxdWVzdCBoYXMgaW52YWxpZCB1bnN1YnNjcmliZSBwYXJhbXNcIik7XG4gICAgfVxuICAgIGNvbnN0IHBhcmFtcyA9IHJlcXVlc3QucGFyYW1zO1xuICAgIGFzc2VydFR5cGUocGFyYW1zLCBcImlkXCIpO1xuICAgIHJldHVybiBwYXJhbXM7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VTdWJzY3JpcHRpb25SZXF1ZXN0KHJlcXVlc3QpIHtcbiAgICBpZiAoIWlzU3Vic2NyaXB0aW9uTWV0aG9kKHJlcXVlc3QubWV0aG9kKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJKU09OLVJQQyBSZXF1ZXN0IGhhcyBpbnZhbGlkIHN1YnNjcmlwdGlvbiBtZXRob2RcIik7XG4gICAgfVxuICAgIGlmICghaXNTdWJzY3JpcHRpb25QYXJhbXMocmVxdWVzdC5wYXJhbXMpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkpTT04tUlBDIFJlcXVlc3QgaGFzIGludmFsaWQgc3Vic2NyaXB0aW9uIHBhcmFtc1wiKTtcbiAgICB9XG4gICAgY29uc3QgcGFyYW1zID0gcmVxdWVzdC5wYXJhbXM7XG4gICAgYXNzZXJ0VHlwZShwYXJhbXMsIFwiaWRcIik7XG4gICAgYXNzZXJ0VHlwZShwYXJhbXMsIFwiZGF0YVwiKTtcbiAgICByZXR1cm4gcGFyYW1zO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFyc2Vycy5qcy5tYXAiXSwibmFtZXMiOlsiYXNzZXJ0VHlwZSIsImlzUHVibGlzaE1ldGhvZCIsImlzUHVibGlzaFBhcmFtcyIsImlzU3Vic2NyaWJlTWV0aG9kIiwiaXNTdWJzY3JpYmVQYXJhbXMiLCJpc1N1YnNjcmlwdGlvbk1ldGhvZCIsImlzU3Vic2NyaXB0aW9uUGFyYW1zIiwiaXNVbnN1YnNjcmliZU1ldGhvZCIsImlzVW5zdWJzY3JpYmVQYXJhbXMiLCJwYXJzZVN1YnNjcmliZVJlcXVlc3QiLCJyZXF1ZXN0IiwibWV0aG9kIiwiRXJyb3IiLCJwYXJhbXMiLCJwYXJzZVB1Ymxpc2hSZXF1ZXN0IiwicGFyc2VVbnN1YnNjcmliZVJlcXVlc3QiLCJwYXJzZVN1YnNjcmlwdGlvblJlcXVlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/parsers.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/types.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/@walletconnect/relay-api/dist/esm/types.js ***!
  \*********************************************************************/
/***/ (() => {

eval("//# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jc2EvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWFwaS9kaXN0L2VzbS90eXBlcy5qcz9lN2JhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQ0FBaUMiLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWFwaS9kaXN0L2VzbS90eXBlcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/types.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/validators.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/@walletconnect/relay-api/dist/esm/validators.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isPublishMethod: () => (/* binding */ isPublishMethod),\n/* harmony export */   isPublishParams: () => (/* binding */ isPublishParams),\n/* harmony export */   isPublishRequest: () => (/* binding */ isPublishRequest),\n/* harmony export */   isSubscribeMethod: () => (/* binding */ isSubscribeMethod),\n/* harmony export */   isSubscribeParams: () => (/* binding */ isSubscribeParams),\n/* harmony export */   isSubscribeRequest: () => (/* binding */ isSubscribeRequest),\n/* harmony export */   isSubscriptionMethod: () => (/* binding */ isSubscriptionMethod),\n/* harmony export */   isSubscriptionParams: () => (/* binding */ isSubscriptionParams),\n/* harmony export */   isSubscriptionRequest: () => (/* binding */ isSubscriptionRequest),\n/* harmony export */   isUnsubscribeMethod: () => (/* binding */ isUnsubscribeMethod),\n/* harmony export */   isUnsubscribeParams: () => (/* binding */ isUnsubscribeParams),\n/* harmony export */   isUnsubscribeRequest: () => (/* binding */ isUnsubscribeRequest)\n/* harmony export */ });\n/* harmony import */ var _misc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./misc */ \"(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/misc.js\");\n\nfunction isSubscribeRequest(request) {\n    return isSubscribeMethod(request.method) && isSubscribeParams(request.params);\n}\nfunction isSubscribeMethod(method) {\n    return (0,_misc__WEBPACK_IMPORTED_MODULE_0__.methodEndsWith)(method, \"subscribe\");\n}\nfunction isSubscribeParams(params) {\n    const required = [\n        \"topic\"\n    ];\n    const optional = [];\n    return (0,_misc__WEBPACK_IMPORTED_MODULE_0__.checkParams)(params, required, optional);\n}\nfunction isPublishRequest(request) {\n    return isPublishMethod(request.method) && isPublishParams(request.params);\n}\nfunction isPublishMethod(method) {\n    return (0,_misc__WEBPACK_IMPORTED_MODULE_0__.methodEndsWith)(method, \"publish\");\n}\nfunction isPublishParams(params) {\n    const required = [\n        \"message\",\n        \"topic\",\n        \"ttl\"\n    ];\n    const optional = [\n        \"prompt\",\n        \"tag\"\n    ];\n    return (0,_misc__WEBPACK_IMPORTED_MODULE_0__.checkParams)(params, required, optional);\n}\nfunction isUnsubscribeRequest(request) {\n    return isUnsubscribeMethod(request.method) && isUnsubscribeParams(request.params);\n}\nfunction isUnsubscribeMethod(method) {\n    return (0,_misc__WEBPACK_IMPORTED_MODULE_0__.methodEndsWith)(method, \"unsubscribe\");\n}\nfunction isUnsubscribeParams(params) {\n    const required = [\n        \"id\",\n        \"topic\"\n    ];\n    const optional = [];\n    return (0,_misc__WEBPACK_IMPORTED_MODULE_0__.checkParams)(params, required, optional);\n}\nfunction isSubscriptionRequest(request) {\n    return isSubscriptionMethod(request.method) && isSubscriptionParams(request.params);\n}\nfunction isSubscriptionMethod(method) {\n    return (0,_misc__WEBPACK_IMPORTED_MODULE_0__.methodEndsWith)(method, \"subscription\");\n}\nfunction isSubscriptionParams(params) {\n    const required = [\n        \"id\",\n        \"data\"\n    ];\n    const optional = [];\n    return (0,_misc__WEBPACK_IMPORTED_MODULE_0__.checkParams)(params, required, optional);\n} //# sourceMappingURL=validators.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWFwaS9kaXN0L2VzbS92YWxpZGF0b3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBcUQ7QUFDOUMsU0FBU0UsbUJBQW1CQyxPQUFPO0lBQ3RDLE9BQU9DLGtCQUFrQkQsUUFBUUUsTUFBTSxLQUFLQyxrQkFBa0JILFFBQVFJLE1BQU07QUFDaEY7QUFDTyxTQUFTSCxrQkFBa0JDLE1BQU07SUFDcEMsT0FBT0oscURBQWNBLENBQUNJLFFBQVE7QUFDbEM7QUFDTyxTQUFTQyxrQkFBa0JDLE1BQU07SUFDcEMsTUFBTUMsV0FBVztRQUFDO0tBQVE7SUFDMUIsTUFBTUMsV0FBVyxFQUFFO0lBQ25CLE9BQU9ULGtEQUFXQSxDQUFDTyxRQUFRQyxVQUFVQztBQUN6QztBQUNPLFNBQVNDLGlCQUFpQlAsT0FBTztJQUNwQyxPQUFPUSxnQkFBZ0JSLFFBQVFFLE1BQU0sS0FBS08sZ0JBQWdCVCxRQUFRSSxNQUFNO0FBQzVFO0FBQ08sU0FBU0ksZ0JBQWdCTixNQUFNO0lBQ2xDLE9BQU9KLHFEQUFjQSxDQUFDSSxRQUFRO0FBQ2xDO0FBQ08sU0FBU08sZ0JBQWdCTCxNQUFNO0lBQ2xDLE1BQU1DLFdBQVc7UUFBQztRQUFXO1FBQVM7S0FBTTtJQUM1QyxNQUFNQyxXQUFXO1FBQUM7UUFBVTtLQUFNO0lBQ2xDLE9BQU9ULGtEQUFXQSxDQUFDTyxRQUFRQyxVQUFVQztBQUN6QztBQUNPLFNBQVNJLHFCQUFxQlYsT0FBTztJQUN4QyxPQUFRVyxvQkFBb0JYLFFBQVFFLE1BQU0sS0FBS1Usb0JBQW9CWixRQUFRSSxNQUFNO0FBQ3JGO0FBQ08sU0FBU08sb0JBQW9CVCxNQUFNO0lBQ3RDLE9BQU9KLHFEQUFjQSxDQUFDSSxRQUFRO0FBQ2xDO0FBQ08sU0FBU1Usb0JBQW9CUixNQUFNO0lBQ3RDLE1BQU1DLFdBQVc7UUFBQztRQUFNO0tBQVE7SUFDaEMsTUFBTUMsV0FBVyxFQUFFO0lBQ25CLE9BQU9ULGtEQUFXQSxDQUFDTyxRQUFRQyxVQUFVQztBQUN6QztBQUNPLFNBQVNPLHNCQUFzQmIsT0FBTztJQUN6QyxPQUFRYyxxQkFBcUJkLFFBQVFFLE1BQU0sS0FBS2EscUJBQXFCZixRQUFRSSxNQUFNO0FBQ3ZGO0FBQ08sU0FBU1UscUJBQXFCWixNQUFNO0lBQ3ZDLE9BQU9KLHFEQUFjQSxDQUFDSSxRQUFRO0FBQ2xDO0FBQ08sU0FBU2EscUJBQXFCWCxNQUFNO0lBQ3ZDLE1BQU1DLFdBQVc7UUFBQztRQUFNO0tBQU87SUFDL0IsTUFBTUMsV0FBVyxFQUFFO0lBQ25CLE9BQU9ULGtEQUFXQSxDQUFDTyxRQUFRQyxVQUFVQztBQUN6QyxFQUNBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NzYS8uLi8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXBpL2Rpc3QvZXNtL3ZhbGlkYXRvcnMuanM/NmFlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjaGVja1BhcmFtcywgbWV0aG9kRW5kc1dpdGggfSBmcm9tIFwiLi9taXNjXCI7XG5leHBvcnQgZnVuY3Rpb24gaXNTdWJzY3JpYmVSZXF1ZXN0KHJlcXVlc3QpIHtcbiAgICByZXR1cm4gaXNTdWJzY3JpYmVNZXRob2QocmVxdWVzdC5tZXRob2QpICYmIGlzU3Vic2NyaWJlUGFyYW1zKHJlcXVlc3QucGFyYW1zKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1N1YnNjcmliZU1ldGhvZChtZXRob2QpIHtcbiAgICByZXR1cm4gbWV0aG9kRW5kc1dpdGgobWV0aG9kLCBcInN1YnNjcmliZVwiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1N1YnNjcmliZVBhcmFtcyhwYXJhbXMpIHtcbiAgICBjb25zdCByZXF1aXJlZCA9IFtcInRvcGljXCJdO1xuICAgIGNvbnN0IG9wdGlvbmFsID0gW107XG4gICAgcmV0dXJuIGNoZWNrUGFyYW1zKHBhcmFtcywgcmVxdWlyZWQsIG9wdGlvbmFsKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1B1Ymxpc2hSZXF1ZXN0KHJlcXVlc3QpIHtcbiAgICByZXR1cm4gaXNQdWJsaXNoTWV0aG9kKHJlcXVlc3QubWV0aG9kKSAmJiBpc1B1Ymxpc2hQYXJhbXMocmVxdWVzdC5wYXJhbXMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzUHVibGlzaE1ldGhvZChtZXRob2QpIHtcbiAgICByZXR1cm4gbWV0aG9kRW5kc1dpdGgobWV0aG9kLCBcInB1Ymxpc2hcIik7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNQdWJsaXNoUGFyYW1zKHBhcmFtcykge1xuICAgIGNvbnN0IHJlcXVpcmVkID0gW1wibWVzc2FnZVwiLCBcInRvcGljXCIsIFwidHRsXCJdO1xuICAgIGNvbnN0IG9wdGlvbmFsID0gW1wicHJvbXB0XCIsIFwidGFnXCJdO1xuICAgIHJldHVybiBjaGVja1BhcmFtcyhwYXJhbXMsIHJlcXVpcmVkLCBvcHRpb25hbCk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNVbnN1YnNjcmliZVJlcXVlc3QocmVxdWVzdCkge1xuICAgIHJldHVybiAoaXNVbnN1YnNjcmliZU1ldGhvZChyZXF1ZXN0Lm1ldGhvZCkgJiYgaXNVbnN1YnNjcmliZVBhcmFtcyhyZXF1ZXN0LnBhcmFtcykpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVW5zdWJzY3JpYmVNZXRob2QobWV0aG9kKSB7XG4gICAgcmV0dXJuIG1ldGhvZEVuZHNXaXRoKG1ldGhvZCwgXCJ1bnN1YnNjcmliZVwiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1Vuc3Vic2NyaWJlUGFyYW1zKHBhcmFtcykge1xuICAgIGNvbnN0IHJlcXVpcmVkID0gW1wiaWRcIiwgXCJ0b3BpY1wiXTtcbiAgICBjb25zdCBvcHRpb25hbCA9IFtdO1xuICAgIHJldHVybiBjaGVja1BhcmFtcyhwYXJhbXMsIHJlcXVpcmVkLCBvcHRpb25hbCk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNTdWJzY3JpcHRpb25SZXF1ZXN0KHJlcXVlc3QpIHtcbiAgICByZXR1cm4gKGlzU3Vic2NyaXB0aW9uTWV0aG9kKHJlcXVlc3QubWV0aG9kKSAmJiBpc1N1YnNjcmlwdGlvblBhcmFtcyhyZXF1ZXN0LnBhcmFtcykpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzU3Vic2NyaXB0aW9uTWV0aG9kKG1ldGhvZCkge1xuICAgIHJldHVybiBtZXRob2RFbmRzV2l0aChtZXRob2QsIFwic3Vic2NyaXB0aW9uXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzU3Vic2NyaXB0aW9uUGFyYW1zKHBhcmFtcykge1xuICAgIGNvbnN0IHJlcXVpcmVkID0gW1wiaWRcIiwgXCJkYXRhXCJdO1xuICAgIGNvbnN0IG9wdGlvbmFsID0gW107XG4gICAgcmV0dXJuIGNoZWNrUGFyYW1zKHBhcmFtcywgcmVxdWlyZWQsIG9wdGlvbmFsKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZhbGlkYXRvcnMuanMubWFwIl0sIm5hbWVzIjpbImNoZWNrUGFyYW1zIiwibWV0aG9kRW5kc1dpdGgiLCJpc1N1YnNjcmliZVJlcXVlc3QiLCJyZXF1ZXN0IiwiaXNTdWJzY3JpYmVNZXRob2QiLCJtZXRob2QiLCJpc1N1YnNjcmliZVBhcmFtcyIsInBhcmFtcyIsInJlcXVpcmVkIiwib3B0aW9uYWwiLCJpc1B1Ymxpc2hSZXF1ZXN0IiwiaXNQdWJsaXNoTWV0aG9kIiwiaXNQdWJsaXNoUGFyYW1zIiwiaXNVbnN1YnNjcmliZVJlcXVlc3QiLCJpc1Vuc3Vic2NyaWJlTWV0aG9kIiwiaXNVbnN1YnNjcmliZVBhcmFtcyIsImlzU3Vic2NyaXB0aW9uUmVxdWVzdCIsImlzU3Vic2NyaXB0aW9uTWV0aG9kIiwiaXNTdWJzY3JpcHRpb25QYXJhbXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/validators.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/relay-auth/dist/esm/api.js":
/*!********************************************************************!*\
  !*** ../../node_modules/@walletconnect/relay-auth/dist/esm/api.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateKeyPair: () => (/* binding */ generateKeyPair),\n/* harmony export */   signJWT: () => (/* binding */ signJWT),\n/* harmony export */   verifyJWT: () => (/* binding */ verifyJWT)\n/* harmony export */ });\n/* harmony import */ var _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stablelib/ed25519 */ \"(ssr)/../../node_modules/@stablelib/ed25519/lib/ed25519.js\");\n/* harmony import */ var _stablelib_random__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stablelib/random */ \"(ssr)/../../node_modules/@stablelib/random/lib/random.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/../../node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/@walletconnect/relay-auth/dist/esm/constants.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"(ssr)/../../node_modules/@walletconnect/relay-auth/dist/esm/utils.js\");\n\n\n\n\n\nfunction generateKeyPair(seed = (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_1__.randomBytes)(_constants__WEBPACK_IMPORTED_MODULE_3__.KEY_PAIR_SEED_LENGTH)) {\n    return _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__.generateKeyPairFromSeed(seed);\n}\nasync function signJWT(sub, aud, ttl, keyPair, iat = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.fromMiliseconds)(Date.now())) {\n    const header = {\n        alg: _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_ALG,\n        typ: _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_TYP\n    };\n    const iss = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.encodeIss)(keyPair.publicKey);\n    const exp = iat + ttl;\n    const payload = {\n        iss,\n        sub,\n        aud,\n        iat,\n        exp\n    };\n    const data = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.encodeData)({\n        header,\n        payload\n    });\n    const signature = _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__.sign(keyPair.secretKey, data);\n    return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.encodeJWT)({\n        header,\n        payload,\n        signature\n    });\n}\nasync function verifyJWT(jwt) {\n    const { header, payload, data, signature } = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(jwt);\n    if (header.alg !== _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_ALG || header.typ !== _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_TYP) {\n        throw new Error(\"JWT must use EdDSA algorithm\");\n    }\n    const publicKey = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.decodeIss)(payload.iss);\n    return _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__.verify(publicKey, data, signature);\n} //# sourceMappingURL=api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvZGlzdC9lc20vYXBpLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUE4QztBQUNFO0FBQ007QUFDZ0M7QUFDSjtBQUMzRSxTQUFTVyxnQkFBZ0JDLE9BQU9YLDhEQUFXQSxDQUFDSSw0REFBb0JBLENBQUM7SUFDcEUsT0FBT0wsdUVBQStCLENBQUNZO0FBQzNDO0FBQ08sZUFBZUUsUUFBUUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsT0FBTyxFQUFFQyxNQUFNakIsb0VBQWVBLENBQUNrQixLQUFLQyxHQUFHLEdBQUc7SUFDbkYsTUFBTUMsU0FBUztRQUFFQyxLQUFLcEIsdURBQWVBO1FBQUVxQixLQUFLcEIsdURBQWVBO0lBQUM7SUFDNUQsTUFBTXFCLE1BQU1oQixpREFBU0EsQ0FBQ1MsUUFBUVEsU0FBUztJQUN2QyxNQUFNQyxNQUFNUixNQUFNRjtJQUNsQixNQUFNVyxVQUFVO1FBQUVIO1FBQUtWO1FBQUtDO1FBQUtHO1FBQUtRO0lBQUk7SUFDMUMsTUFBTUUsT0FBT3JCLGtEQUFVQSxDQUFDO1FBQUVjO1FBQVFNO0lBQVE7SUFDMUMsTUFBTUUsWUFBWTlCLG9EQUFZLENBQUNrQixRQUFRYyxTQUFTLEVBQUVIO0lBQ2xELE9BQU9uQixpREFBU0EsQ0FBQztRQUFFWTtRQUFRTTtRQUFTRTtJQUFVO0FBQ2xEO0FBQ08sZUFBZUcsVUFBVUMsR0FBRztJQUMvQixNQUFNLEVBQUVaLE1BQU0sRUFBRU0sT0FBTyxFQUFFQyxJQUFJLEVBQUVDLFNBQVMsRUFBRSxHQUFHdkIsaURBQVNBLENBQUMyQjtJQUN2RCxJQUFJWixPQUFPQyxHQUFHLEtBQUtwQix1REFBZUEsSUFBSW1CLE9BQU9FLEdBQUcsS0FBS3BCLHVEQUFlQSxFQUFFO1FBQ2xFLE1BQU0sSUFBSStCLE1BQU07SUFDcEI7SUFDQSxNQUFNVCxZQUFZcEIsaURBQVNBLENBQUNzQixRQUFRSCxHQUFHO0lBQ3ZDLE9BQU96QixzREFBYyxDQUFDMEIsV0FBV0csTUFBTUM7QUFDM0MsRUFDQSwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jc2EvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvZGlzdC9lc20vYXBpLmpzPzBmZDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZWQyNTUxOSBmcm9tIFwiQHN0YWJsZWxpYi9lZDI1NTE5XCI7XG5pbXBvcnQgeyByYW5kb21CeXRlcyB9IGZyb20gXCJAc3RhYmxlbGliL3JhbmRvbVwiO1xuaW1wb3J0IHsgZnJvbU1pbGlzZWNvbmRzIH0gZnJvbSBcIkB3YWxsZXRjb25uZWN0L3RpbWVcIjtcbmltcG9ydCB7IEpXVF9JUklESVVNX0FMRywgSldUX0lSSURJVU1fVFlQLCBLRVlfUEFJUl9TRUVEX0xFTkdUSCwgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcbmltcG9ydCB7IGRlY29kZUlzcywgZGVjb2RlSldULCBlbmNvZGVEYXRhLCBlbmNvZGVJc3MsIGVuY29kZUpXVCwgfSBmcm9tIFwiLi91dGlsc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlS2V5UGFpcihzZWVkID0gcmFuZG9tQnl0ZXMoS0VZX1BBSVJfU0VFRF9MRU5HVEgpKSB7XG4gICAgcmV0dXJuIGVkMjU1MTkuZ2VuZXJhdGVLZXlQYWlyRnJvbVNlZWQoc2VlZCk7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2lnbkpXVChzdWIsIGF1ZCwgdHRsLCBrZXlQYWlyLCBpYXQgPSBmcm9tTWlsaXNlY29uZHMoRGF0ZS5ub3coKSkpIHtcbiAgICBjb25zdCBoZWFkZXIgPSB7IGFsZzogSldUX0lSSURJVU1fQUxHLCB0eXA6IEpXVF9JUklESVVNX1RZUCB9O1xuICAgIGNvbnN0IGlzcyA9IGVuY29kZUlzcyhrZXlQYWlyLnB1YmxpY0tleSk7XG4gICAgY29uc3QgZXhwID0gaWF0ICsgdHRsO1xuICAgIGNvbnN0IHBheWxvYWQgPSB7IGlzcywgc3ViLCBhdWQsIGlhdCwgZXhwIH07XG4gICAgY29uc3QgZGF0YSA9IGVuY29kZURhdGEoeyBoZWFkZXIsIHBheWxvYWQgfSk7XG4gICAgY29uc3Qgc2lnbmF0dXJlID0gZWQyNTUxOS5zaWduKGtleVBhaXIuc2VjcmV0S2V5LCBkYXRhKTtcbiAgICByZXR1cm4gZW5jb2RlSldUKHsgaGVhZGVyLCBwYXlsb2FkLCBzaWduYXR1cmUgfSk7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdmVyaWZ5SldUKGp3dCkge1xuICAgIGNvbnN0IHsgaGVhZGVyLCBwYXlsb2FkLCBkYXRhLCBzaWduYXR1cmUgfSA9IGRlY29kZUpXVChqd3QpO1xuICAgIGlmIChoZWFkZXIuYWxnICE9PSBKV1RfSVJJRElVTV9BTEcgfHwgaGVhZGVyLnR5cCAhPT0gSldUX0lSSURJVU1fVFlQKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkpXVCBtdXN0IHVzZSBFZERTQSBhbGdvcml0aG1cIik7XG4gICAgfVxuICAgIGNvbnN0IHB1YmxpY0tleSA9IGRlY29kZUlzcyhwYXlsb2FkLmlzcyk7XG4gICAgcmV0dXJuIGVkMjU1MTkudmVyaWZ5KHB1YmxpY0tleSwgZGF0YSwgc2lnbmF0dXJlKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwaS5qcy5tYXAiXSwibmFtZXMiOlsiZWQyNTUxOSIsInJhbmRvbUJ5dGVzIiwiZnJvbU1pbGlzZWNvbmRzIiwiSldUX0lSSURJVU1fQUxHIiwiSldUX0lSSURJVU1fVFlQIiwiS0VZX1BBSVJfU0VFRF9MRU5HVEgiLCJkZWNvZGVJc3MiLCJkZWNvZGVKV1QiLCJlbmNvZGVEYXRhIiwiZW5jb2RlSXNzIiwiZW5jb2RlSldUIiwiZ2VuZXJhdGVLZXlQYWlyIiwic2VlZCIsImdlbmVyYXRlS2V5UGFpckZyb21TZWVkIiwic2lnbkpXVCIsInN1YiIsImF1ZCIsInR0bCIsImtleVBhaXIiLCJpYXQiLCJEYXRlIiwibm93IiwiaGVhZGVyIiwiYWxnIiwidHlwIiwiaXNzIiwicHVibGljS2V5IiwiZXhwIiwicGF5bG9hZCIsImRhdGEiLCJzaWduYXR1cmUiLCJzaWduIiwic2VjcmV0S2V5IiwidmVyaWZ5SldUIiwiand0IiwiRXJyb3IiLCJ2ZXJpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/relay-auth/dist/esm/api.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/relay-auth/dist/esm/constants.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/@walletconnect/relay-auth/dist/esm/constants.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DATA_ENCODING: () => (/* binding */ DATA_ENCODING),\n/* harmony export */   DID_DELIMITER: () => (/* binding */ DID_DELIMITER),\n/* harmony export */   DID_METHOD: () => (/* binding */ DID_METHOD),\n/* harmony export */   DID_PREFIX: () => (/* binding */ DID_PREFIX),\n/* harmony export */   JSON_ENCODING: () => (/* binding */ JSON_ENCODING),\n/* harmony export */   JWT_DELIMITER: () => (/* binding */ JWT_DELIMITER),\n/* harmony export */   JWT_ENCODING: () => (/* binding */ JWT_ENCODING),\n/* harmony export */   JWT_IRIDIUM_ALG: () => (/* binding */ JWT_IRIDIUM_ALG),\n/* harmony export */   JWT_IRIDIUM_TYP: () => (/* binding */ JWT_IRIDIUM_TYP),\n/* harmony export */   KEY_PAIR_SEED_LENGTH: () => (/* binding */ KEY_PAIR_SEED_LENGTH),\n/* harmony export */   MULTICODEC_ED25519_BASE: () => (/* binding */ MULTICODEC_ED25519_BASE),\n/* harmony export */   MULTICODEC_ED25519_ENCODING: () => (/* binding */ MULTICODEC_ED25519_ENCODING),\n/* harmony export */   MULTICODEC_ED25519_HEADER: () => (/* binding */ MULTICODEC_ED25519_HEADER),\n/* harmony export */   MULTICODEC_ED25519_LENGTH: () => (/* binding */ MULTICODEC_ED25519_LENGTH)\n/* harmony export */ });\nconst JWT_IRIDIUM_ALG = \"EdDSA\";\nconst JWT_IRIDIUM_TYP = \"JWT\";\nconst JWT_DELIMITER = \".\";\nconst JWT_ENCODING = \"base64url\";\nconst JSON_ENCODING = \"utf8\";\nconst DATA_ENCODING = \"utf8\";\nconst DID_DELIMITER = \":\";\nconst DID_PREFIX = \"did\";\nconst DID_METHOD = \"key\";\nconst MULTICODEC_ED25519_ENCODING = \"base58btc\";\nconst MULTICODEC_ED25519_BASE = \"z\";\nconst MULTICODEC_ED25519_HEADER = \"K36\";\nconst MULTICODEC_ED25519_LENGTH = 32;\nconst KEY_PAIR_SEED_LENGTH = 32; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvZGlzdC9lc20vY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU8sTUFBTUEsa0JBQWtCLFFBQVE7QUFDaEMsTUFBTUMsa0JBQWtCLE1BQU07QUFDOUIsTUFBTUMsZ0JBQWdCLElBQUk7QUFDMUIsTUFBTUMsZUFBZSxZQUFZO0FBQ2pDLE1BQU1DLGdCQUFnQixPQUFPO0FBQzdCLE1BQU1DLGdCQUFnQixPQUFPO0FBQzdCLE1BQU1DLGdCQUFnQixJQUFJO0FBQzFCLE1BQU1DLGFBQWEsTUFBTTtBQUN6QixNQUFNQyxhQUFhLE1BQU07QUFDekIsTUFBTUMsOEJBQThCLFlBQVk7QUFDaEQsTUFBTUMsMEJBQTBCLElBQUk7QUFDcEMsTUFBTUMsNEJBQTRCLE1BQU07QUFDeEMsTUFBTUMsNEJBQTRCLEdBQUc7QUFDckMsTUFBTUMsdUJBQXVCLEdBQUcsQ0FDdkMscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hdXRoL2Rpc3QvZXNtL2NvbnN0YW50cy5qcz81OTY0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBKV1RfSVJJRElVTV9BTEcgPSBcIkVkRFNBXCI7XG5leHBvcnQgY29uc3QgSldUX0lSSURJVU1fVFlQID0gXCJKV1RcIjtcbmV4cG9ydCBjb25zdCBKV1RfREVMSU1JVEVSID0gXCIuXCI7XG5leHBvcnQgY29uc3QgSldUX0VOQ09ESU5HID0gXCJiYXNlNjR1cmxcIjtcbmV4cG9ydCBjb25zdCBKU09OX0VOQ09ESU5HID0gXCJ1dGY4XCI7XG5leHBvcnQgY29uc3QgREFUQV9FTkNPRElORyA9IFwidXRmOFwiO1xuZXhwb3J0IGNvbnN0IERJRF9ERUxJTUlURVIgPSBcIjpcIjtcbmV4cG9ydCBjb25zdCBESURfUFJFRklYID0gXCJkaWRcIjtcbmV4cG9ydCBjb25zdCBESURfTUVUSE9EID0gXCJrZXlcIjtcbmV4cG9ydCBjb25zdCBNVUxUSUNPREVDX0VEMjU1MTlfRU5DT0RJTkcgPSBcImJhc2U1OGJ0Y1wiO1xuZXhwb3J0IGNvbnN0IE1VTFRJQ09ERUNfRUQyNTUxOV9CQVNFID0gXCJ6XCI7XG5leHBvcnQgY29uc3QgTVVMVElDT0RFQ19FRDI1NTE5X0hFQURFUiA9IFwiSzM2XCI7XG5leHBvcnQgY29uc3QgTVVMVElDT0RFQ19FRDI1NTE5X0xFTkdUSCA9IDMyO1xuZXhwb3J0IGNvbnN0IEtFWV9QQUlSX1NFRURfTEVOR1RIID0gMzI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbIkpXVF9JUklESVVNX0FMRyIsIkpXVF9JUklESVVNX1RZUCIsIkpXVF9ERUxJTUlURVIiLCJKV1RfRU5DT0RJTkciLCJKU09OX0VOQ09ESU5HIiwiREFUQV9FTkNPRElORyIsIkRJRF9ERUxJTUlURVIiLCJESURfUFJFRklYIiwiRElEX01FVEhPRCIsIk1VTFRJQ09ERUNfRUQyNTUxOV9FTkNPRElORyIsIk1VTFRJQ09ERUNfRUQyNTUxOV9CQVNFIiwiTVVMVElDT0RFQ19FRDI1NTE5X0hFQURFUiIsIk1VTFRJQ09ERUNfRUQyNTUxOV9MRU5HVEgiLCJLRVlfUEFJUl9TRUVEX0xFTkdUSCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/relay-auth/dist/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/relay-auth/dist/esm/index.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@walletconnect/relay-auth/dist/esm/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DATA_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DATA_ENCODING),\n/* harmony export */   DID_DELIMITER: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DID_DELIMITER),\n/* harmony export */   DID_METHOD: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DID_METHOD),\n/* harmony export */   DID_PREFIX: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DID_PREFIX),\n/* harmony export */   JSON_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JSON_ENCODING),\n/* harmony export */   JWT_DELIMITER: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_DELIMITER),\n/* harmony export */   JWT_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_ENCODING),\n/* harmony export */   JWT_IRIDIUM_ALG: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_IRIDIUM_ALG),\n/* harmony export */   JWT_IRIDIUM_TYP: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_IRIDIUM_TYP),\n/* harmony export */   KEY_PAIR_SEED_LENGTH: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.KEY_PAIR_SEED_LENGTH),\n/* harmony export */   MULTICODEC_ED25519_BASE: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_BASE),\n/* harmony export */   MULTICODEC_ED25519_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_ENCODING),\n/* harmony export */   MULTICODEC_ED25519_HEADER: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_HEADER),\n/* harmony export */   MULTICODEC_ED25519_LENGTH: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_LENGTH),\n/* harmony export */   decodeData: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeData),\n/* harmony export */   decodeIss: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeIss),\n/* harmony export */   decodeJSON: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeJSON),\n/* harmony export */   decodeJWT: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeJWT),\n/* harmony export */   decodeSig: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeSig),\n/* harmony export */   encodeData: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeData),\n/* harmony export */   encodeIss: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeIss),\n/* harmony export */   encodeJSON: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeJSON),\n/* harmony export */   encodeJWT: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeJWT),\n/* harmony export */   encodeSig: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeSig),\n/* harmony export */   generateKeyPair: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.generateKeyPair),\n/* harmony export */   signJWT: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.signJWT),\n/* harmony export */   verifyJWT: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.verifyJWT)\n/* harmony export */ });\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api */ \"(ssr)/../../node_modules/@walletconnect/relay-auth/dist/esm/api.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/@walletconnect/relay-auth/dist/esm/constants.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ \"(ssr)/../../node_modules/@walletconnect/relay-auth/dist/esm/types.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _types__WEBPACK_IMPORTED_MODULE_2__) if([\"default\",\"generateKeyPair\",\"signJWT\",\"verifyJWT\",\"DATA_ENCODING\",\"DID_DELIMITER\",\"DID_METHOD\",\"DID_PREFIX\",\"JSON_ENCODING\",\"JWT_DELIMITER\",\"JWT_ENCODING\",\"JWT_IRIDIUM_ALG\",\"JWT_IRIDIUM_TYP\",\"KEY_PAIR_SEED_LENGTH\",\"MULTICODEC_ED25519_BASE\",\"MULTICODEC_ED25519_ENCODING\",\"MULTICODEC_ED25519_HEADER\",\"MULTICODEC_ED25519_LENGTH\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _types__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(ssr)/../../node_modules/@walletconnect/relay-auth/dist/esm/utils.js\");\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0I7QUFDTTtBQUNKO0FBQ0EsQ0FDeEIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hdXRoL2Rpc3QvZXNtL2luZGV4LmpzPzQyMDciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vYXBpXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9jb25zdGFudHNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3R5cGVzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi91dGlsc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/relay-auth/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/relay-auth/dist/esm/types.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@walletconnect/relay-auth/dist/esm/types.js ***!
  \**********************************************************************/
/***/ (() => {

eval("//# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jc2EvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3JlbGF5LWF1dGgvZGlzdC9lc20vdHlwZXMuanM/ZDIzOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUNBQWlDIiwiZmlsZSI6Iihzc3IpLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hdXRoL2Rpc3QvZXNtL3R5cGVzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/relay-auth/dist/esm/types.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/relay-auth/dist/esm/utils.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@walletconnect/relay-auth/dist/esm/utils.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeData: () => (/* binding */ decodeData),\n/* harmony export */   decodeIss: () => (/* binding */ decodeIss),\n/* harmony export */   decodeJSON: () => (/* binding */ decodeJSON),\n/* harmony export */   decodeJWT: () => (/* binding */ decodeJWT),\n/* harmony export */   decodeSig: () => (/* binding */ decodeSig),\n/* harmony export */   encodeData: () => (/* binding */ encodeData),\n/* harmony export */   encodeIss: () => (/* binding */ encodeIss),\n/* harmony export */   encodeJSON: () => (/* binding */ encodeJSON),\n/* harmony export */   encodeJWT: () => (/* binding */ encodeJWT),\n/* harmony export */   encodeSig: () => (/* binding */ encodeSig)\n/* harmony export */ });\n/* harmony import */ var uint8arrays_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8arrays/concat */ \"(ssr)/../../node_modules/uint8arrays/esm/src/concat.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/to-string */ \"(ssr)/../../node_modules/uint8arrays/esm/src/to-string.js\");\n/* harmony import */ var uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uint8arrays/from-string */ \"(ssr)/../../node_modules/uint8arrays/esm/src/from-string.js\");\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/../../node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/@walletconnect/relay-auth/dist/esm/constants.js\");\n\n\n\n\n\nfunction decodeJSON(str) {\n    return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_3__.safeJsonParse)((0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)((0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(str, _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING), _constants__WEBPACK_IMPORTED_MODULE_4__.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)((0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_3__.safeJsonStringify)(val), _constants__WEBPACK_IMPORTED_MODULE_4__.JSON_ENCODING), _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    const header = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(_constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_HEADER, _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    const multicodec = _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_BASE + (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)((0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_0__.concat)([\n        header,\n        publicKey\n    ]), _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    return [\n        _constants__WEBPACK_IMPORTED_MODULE_4__.DID_PREFIX,\n        _constants__WEBPACK_IMPORTED_MODULE_4__.DID_METHOD,\n        multicodec\n    ].join(_constants__WEBPACK_IMPORTED_MODULE_4__.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(_constants__WEBPACK_IMPORTED_MODULE_4__.DID_DELIMITER);\n    if (prefix !== _constants__WEBPACK_IMPORTED_MODULE_4__.DID_PREFIX || method !== _constants__WEBPACK_IMPORTED_MODULE_4__.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    const base = multicodec.slice(0, 1);\n    if (base !== _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_BASE) {\n        throw new Error(`Issuer must be a key in mulicodec format`);\n    }\n    const bytes = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(multicodec.slice(1), _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    const type = (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(bytes.slice(0, 2), _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    if (type !== _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_HEADER) {\n        throw new Error(`Issuer must be a public key with type \"Ed25519\"`);\n    }\n    const publicKey = bytes.slice(2);\n    if (publicKey.length !== _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\nfunction encodeSig(bytes) {\n    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(bytes, _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(encoded, _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING);\n}\nfunction encodeData(params) {\n    return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)([\n        encodeJSON(params.header),\n        encodeJSON(params.payload)\n    ].join(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER), _constants__WEBPACK_IMPORTED_MODULE_4__.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    const params = (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(data, _constants__WEBPACK_IMPORTED_MODULE_4__.DATA_ENCODING).split(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER);\n    const header = decodeJSON(params[0]);\n    const payload = decodeJSON(params[1]);\n    return {\n        header,\n        payload\n    };\n}\nfunction encodeJWT(params) {\n    return [\n        encodeJSON(params.header),\n        encodeJSON(params.payload),\n        encodeSig(params.signature)\n    ].join(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    const params = jwt.split(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER);\n    const header = decodeJSON(params[0]);\n    const payload = decodeJSON(params[1]);\n    const signature = decodeSig(params[2]);\n    const data = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(params.slice(0, 2).join(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER), _constants__WEBPACK_IMPORTED_MODULE_4__.DATA_ENCODING);\n    return {\n        header,\n        payload,\n        signature,\n        data\n    };\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/relay-auth/dist/esm/utils.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/safe-json/dist/esm/index.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/@walletconnect/safe-json/dist/esm/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   safeJsonParse: () => (/* binding */ safeJsonParse),\n/* harmony export */   safeJsonStringify: () => (/* binding */ safeJsonStringify)\n/* harmony export */ });\nconst JSONStringify = (data)=>JSON.stringify(data, (_, value)=>typeof value === \"bigint\" ? value.toString() + \"n\" : value);\nconst JSONParse = (json)=>{\n    const numbersBiggerThanMaxInt = /([\\[:])?(\\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\\}\\]])/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, '$1\"$2n\"$3');\n    return JSON.parse(serializedData, (_, value)=>{\n        const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n        if (isCustomFormatBigInt) return BigInt(value.substring(0, value.length - 1));\n        return value;\n    });\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    } catch (_a) {\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3NhZmUtanNvbi9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLE1BQU1BLGdCQUFnQkMsQ0FBQUEsT0FBUUMsS0FBS0MsU0FBUyxDQUFDRixNQUFNLENBQUNHLEdBQUdDLFFBQVUsT0FBT0EsVUFBVSxXQUFXQSxNQUFNQyxRQUFRLEtBQUssTUFBTUQ7QUFDdEgsTUFBTUUsWUFBWUMsQ0FBQUE7SUFDZCxNQUFNQywwQkFBMEI7SUFDaEMsTUFBTUMsaUJBQWlCRixLQUFLRyxPQUFPLENBQUNGLHlCQUF5QjtJQUM3RCxPQUFPUCxLQUFLVSxLQUFLLENBQUNGLGdCQUFnQixDQUFDTixHQUFHQztRQUNsQyxNQUFNUSx1QkFBdUIsT0FBT1IsVUFBVSxZQUFZQSxNQUFNUyxLQUFLLENBQUM7UUFDdEUsSUFBSUQsc0JBQ0EsT0FBT0UsT0FBT1YsTUFBTVcsU0FBUyxDQUFDLEdBQUdYLE1BQU1ZLE1BQU0sR0FBRztRQUNwRCxPQUFPWjtJQUNYO0FBQ0o7QUFDTyxTQUFTYSxjQUFjYixLQUFLO0lBQy9CLElBQUksT0FBT0EsVUFBVSxVQUFVO1FBQzNCLE1BQU0sSUFBSWMsTUFBTSxDQUFDLHFDQUFxQyxFQUFFLE9BQU9kLE1BQU0sQ0FBQztJQUMxRTtJQUNBLElBQUk7UUFDQSxPQUFPRSxVQUFVRjtJQUNyQixFQUNBLE9BQU9lLElBQUk7UUFDUCxPQUFPZjtJQUNYO0FBQ0o7QUFDTyxTQUFTZ0Isa0JBQWtCaEIsS0FBSztJQUNuQyxPQUFPLE9BQU9BLFVBQVUsV0FBV0EsUUFBUUwsY0FBY0ssVUFBVTtBQUN2RSxFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NzYS8uLi8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3Qvc2FmZS1qc29uL2Rpc3QvZXNtL2luZGV4LmpzPzg4M2MiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSlNPTlN0cmluZ2lmeSA9IGRhdGEgPT4gSlNPTi5zdHJpbmdpZnkoZGF0YSwgKF8sIHZhbHVlKSA9PiB0eXBlb2YgdmFsdWUgPT09IFwiYmlnaW50XCIgPyB2YWx1ZS50b1N0cmluZygpICsgXCJuXCIgOiB2YWx1ZSk7XG5jb25zdCBKU09OUGFyc2UgPSBqc29uID0+IHtcbiAgICBjb25zdCBudW1iZXJzQmlnZ2VyVGhhbk1heEludCA9IC8oW1xcWzpdKT8oXFxkezE3LH18KD86WzldKD86WzEtOV0wNzE5OTI1NDc0MDk5MXwwWzEtOV03MTk5MjU0NzQwOTkxfDAwWzgtOV0xOTkyNTQ3NDA5OTF8MDA3WzItOV05OTI1NDc0MDk5MXwwMDcxOTlbMy05XTU0NzQwOTkxfDAwNzE5OTJbNi05XTQ3NDA5OTF8MDA3MTk5MjVbNS05XTc0MDk5MXwwMDcxOTkyNTRbOC05XTQwOTkxfDAwNzE5OTI1NDdbNS05XTA5OTF8MDA3MTk5MjU0NzRbMS05XTk5MXwwMDcxOTkyNTQ3NDA5OVsyLTldKSkpKFssXFx9XFxdXSkvZztcbiAgICBjb25zdCBzZXJpYWxpemVkRGF0YSA9IGpzb24ucmVwbGFjZShudW1iZXJzQmlnZ2VyVGhhbk1heEludCwgXCIkMVxcXCIkMm5cXFwiJDNcIik7XG4gICAgcmV0dXJuIEpTT04ucGFyc2Uoc2VyaWFsaXplZERhdGEsIChfLCB2YWx1ZSkgPT4ge1xuICAgICAgICBjb25zdCBpc0N1c3RvbUZvcm1hdEJpZ0ludCA9IHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiAmJiB2YWx1ZS5tYXRjaCgvXlxcZCtuJC8pO1xuICAgICAgICBpZiAoaXNDdXN0b21Gb3JtYXRCaWdJbnQpXG4gICAgICAgICAgICByZXR1cm4gQmlnSW50KHZhbHVlLnN1YnN0cmluZygwLCB2YWx1ZS5sZW5ndGggLSAxKSk7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9KTtcbn07XG5leHBvcnQgZnVuY3Rpb24gc2FmZUpzb25QYXJzZSh2YWx1ZSkge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3Qgc2FmZSBqc29uIHBhcnNlIHZhbHVlIG9mIHR5cGUgJHt0eXBlb2YgdmFsdWV9YCk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBKU09OUGFyc2UodmFsdWUpO1xuICAgIH1cbiAgICBjYXRjaCAoX2EpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBzYWZlSnNvblN0cmluZ2lmeSh2YWx1ZSkge1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgPyB2YWx1ZSA6IEpTT05TdHJpbmdpZnkodmFsdWUpIHx8IFwiXCI7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiSlNPTlN0cmluZ2lmeSIsImRhdGEiLCJKU09OIiwic3RyaW5naWZ5IiwiXyIsInZhbHVlIiwidG9TdHJpbmciLCJKU09OUGFyc2UiLCJqc29uIiwibnVtYmVyc0JpZ2dlclRoYW5NYXhJbnQiLCJzZXJpYWxpemVkRGF0YSIsInJlcGxhY2UiLCJwYXJzZSIsImlzQ3VzdG9tRm9ybWF0QmlnSW50IiwibWF0Y2giLCJCaWdJbnQiLCJzdWJzdHJpbmciLCJsZW5ndGgiLCJzYWZlSnNvblBhcnNlIiwiRXJyb3IiLCJfYSIsInNhZmVKc29uU3RyaW5naWZ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/safe-json/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/sign-client/dist/index.es.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@walletconnect/sign-client/dist/index.es.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ENGINE_CONTEXT: () => (/* binding */ ce),\n/* harmony export */   ENGINE_QUEUE_STATES: () => (/* binding */ I),\n/* harmony export */   ENGINE_RPC_OPTS: () => (/* binding */ V),\n/* harmony export */   HISTORY_CONTEXT: () => (/* binding */ rs),\n/* harmony export */   HISTORY_EVENTS: () => (/* binding */ is),\n/* harmony export */   HISTORY_STORAGE_VERSION: () => (/* binding */ ns),\n/* harmony export */   METHODS_TO_VERIFY: () => (/* binding */ pe),\n/* harmony export */   PROPOSAL_CONTEXT: () => (/* binding */ ne),\n/* harmony export */   PROPOSAL_EXPIRY: () => (/* binding */ os),\n/* harmony export */   PROPOSAL_EXPIRY_MESSAGE: () => (/* binding */ oe),\n/* harmony export */   REQUEST_CONTEXT: () => (/* binding */ le),\n/* harmony export */   SESSION_CONTEXT: () => (/* binding */ ae),\n/* harmony export */   SESSION_EXPIRY: () => (/* binding */ A),\n/* harmony export */   SESSION_REQUEST_EXPIRY_BOUNDARIES: () => (/* binding */ U),\n/* harmony export */   SIGN_CLIENT_CONTEXT: () => (/* binding */ H),\n/* harmony export */   SIGN_CLIENT_DEFAULT: () => (/* binding */ M),\n/* harmony export */   SIGN_CLIENT_EVENTS: () => (/* binding */ ss),\n/* harmony export */   SIGN_CLIENT_PROTOCOL: () => (/* binding */ X),\n/* harmony export */   SIGN_CLIENT_STORAGE_OPTIONS: () => (/* binding */ ts),\n/* harmony export */   SIGN_CLIENT_STORAGE_PREFIX: () => (/* binding */ G),\n/* harmony export */   SIGN_CLIENT_VERSION: () => (/* binding */ F),\n/* harmony export */   SessionStore: () => (/* binding */ ms),\n/* harmony export */   SignClient: () => (/* binding */ ws),\n/* harmony export */   WALLETCONNECT_DEEPLINK_CHOICE: () => (/* binding */ W),\n/* harmony export */   \"default\": () => (/* binding */ Q)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/core */ \"(ssr)/../../node_modules/@walletconnect/core/dist/index.es.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/logger */ \"(ssr)/../../node_modules/@walletconnect/logger/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/types */ \"(ssr)/../../node_modules/@walletconnect/types/dist/index.es.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/../../node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/../../node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\n\n\n\n\nconst X = \"wc\", F = 2, H = \"client\", G = `${X}@${F}:${H}:`, M = {\n    name: H,\n    logger: \"error\",\n    controller: !1,\n    relayUrl: \"wss://relay.walletconnect.com\"\n}, ss = {\n    session_proposal: \"session_proposal\",\n    session_update: \"session_update\",\n    session_extend: \"session_extend\",\n    session_ping: \"session_ping\",\n    session_delete: \"session_delete\",\n    session_expire: \"session_expire\",\n    session_request: \"session_request\",\n    session_request_sent: \"session_request_sent\",\n    session_event: \"session_event\",\n    proposal_expire: \"proposal_expire\"\n}, ts = {\n    database: \":memory:\"\n}, W = \"WALLETCONNECT_DEEPLINK_CHOICE\", is = {\n    created: \"history_created\",\n    updated: \"history_updated\",\n    deleted: \"history_deleted\",\n    sync: \"history_sync\"\n}, rs = \"history\", ns = \"0.3\", ne = \"proposal\", os = _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.THIRTY_DAYS, oe = \"Proposal expired\", ae = \"session\", A = _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.SEVEN_DAYS, ce = \"engine\", V = {\n    wc_sessionPropose: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1100\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1101\n        }\n    },\n    wc_sessionSettle: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1102\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1103\n        }\n    },\n    wc_sessionUpdate: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1104\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1105\n        }\n    },\n    wc_sessionExtend: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1106\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1107\n        }\n    },\n    wc_sessionRequest: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1108\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1109\n        }\n    },\n    wc_sessionEvent: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1110\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1111\n        }\n    },\n    wc_sessionDelete: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1112\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_DAY,\n            prompt: !1,\n            tag: 1113\n        }\n    },\n    wc_sessionPing: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.THIRTY_SECONDS,\n            prompt: !1,\n            tag: 1114\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.THIRTY_SECONDS,\n            prompt: !1,\n            tag: 1115\n        }\n    }\n}, U = {\n    min: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES,\n    max: _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.SEVEN_DAYS\n}, I = {\n    idle: \"IDLE\",\n    active: \"ACTIVE\"\n}, le = \"request\", pe = [\n    \"wc_sessionPropose\",\n    \"wc_sessionRequest\",\n    \"wc_authRequest\"\n];\nvar as = Object.defineProperty, cs = Object.defineProperties, ls = Object.getOwnPropertyDescriptors, he = Object.getOwnPropertySymbols, ps = Object.prototype.hasOwnProperty, hs = Object.prototype.propertyIsEnumerable, de = (m, r, e)=>r in m ? as(m, r, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: e\n    }) : m[r] = e, g = (m, r)=>{\n    for(var e in r || (r = {}))ps.call(r, e) && de(m, e, r[e]);\n    if (he) for (var e of he(r))hs.call(r, e) && de(m, e, r[e]);\n    return m;\n}, b = (m, r)=>cs(m, ls(r));\nclass ds extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.IEngine {\n    constructor(r){\n        super(r), this.name = ce, this.events = new (events__WEBPACK_IMPORTED_MODULE_1___default()), this.initialized = !1, this.ignoredPayloadTypes = [\n            _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.TYPE_1\n        ], this.requestQueue = {\n            state: I.idle,\n            queue: []\n        }, this.sessionRequestQueue = {\n            state: I.idle,\n            queue: []\n        }, this.requestQueueDelay = _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.ONE_SECOND, this.init = async ()=>{\n            this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.registerPairingEvents(), this.client.core.pairing.register({\n                methods: Object.keys(V)\n            }), this.initialized = !0, setTimeout(()=>{\n                this.sessionRequestQueue.queue = this.getPendingSessionRequests(), this.processSessionRequestQueue();\n            }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.toMiliseconds)(this.requestQueueDelay)));\n        }, this.connect = async (e)=>{\n            await this.isInitialized();\n            const s = b(g({}, e), {\n                requiredNamespaces: e.requiredNamespaces || {},\n                optionalNamespaces: e.optionalNamespaces || {}\n            });\n            await this.isValidConnect(s);\n            const { pairingTopic: t, requiredNamespaces: i, optionalNamespaces: n, sessionProperties: o, relays: a } = s;\n            let c = t, p, d = !1;\n            if (c && (d = this.client.core.pairing.pairings.get(c).active), !c || !d) {\n                const { topic: v, uri: S } = await this.client.core.pairing.create();\n                c = v, p = S;\n            }\n            const h = await this.client.core.crypto.generateKeyPair(), R = g({\n                requiredNamespaces: i,\n                optionalNamespaces: n,\n                relays: a ?? [\n                    {\n                        protocol: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_DEFAULT_PROTOCOL\n                    }\n                ],\n                proposer: {\n                    publicKey: h,\n                    metadata: this.client.metadata\n                }\n            }, o && {\n                sessionProperties: o\n            }), { reject: w, resolve: T, done: K } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES, oe);\n            if (this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), async ({ error: v, session: S })=>{\n                if (v) w(v);\n                else if (S) {\n                    S.self.publicKey = h;\n                    const B = b(g({}, S), {\n                        requiredNamespaces: S.requiredNamespaces,\n                        optionalNamespaces: S.optionalNamespaces\n                    });\n                    await this.client.session.set(S.topic, B), await this.setExpiry(S.topic, S.expiry), c && await this.client.core.pairing.updateMetadata({\n                        topic: c,\n                        metadata: S.peer.metadata\n                    }), T(B);\n                }\n            }), !c) {\n                const { message: v } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `connect() pairing topic: ${c}`);\n                throw new Error(v);\n            }\n            const L = await this.sendRequest({\n                topic: c,\n                method: \"wc_sessionPropose\",\n                params: R\n            }), ge = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES);\n            return await this.setProposal(L, g({\n                id: L,\n                expiry: ge\n            }, R)), {\n                uri: p,\n                approval: K\n            };\n        }, this.pair = async (e)=>(await this.isInitialized(), await this.client.core.pairing.pair(e)), this.approve = async (e)=>{\n            await this.isInitialized(), await this.isValidApprove(e);\n            const { id: s, relayProtocol: t, namespaces: i, sessionProperties: n } = e, o = this.client.proposal.get(s);\n            let { pairingTopic: a, proposer: c, requiredNamespaces: p, optionalNamespaces: d } = o;\n            a = a || \"\", (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(p) || (p = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getRequiredNamespacesFromNamespaces)(i, \"approve()\"));\n            const h = await this.client.core.crypto.generateKeyPair(), R = c.publicKey, w = await this.client.core.crypto.generateSharedKey(h, R);\n            a && s && (await this.client.core.pairing.updateMetadata({\n                topic: a,\n                metadata: c.metadata\n            }), await this.sendResult({\n                id: s,\n                topic: a,\n                result: {\n                    relay: {\n                        protocol: t ?? \"irn\"\n                    },\n                    responderPublicKey: h\n                }\n            }), await this.client.proposal.delete(s, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), await this.client.core.pairing.activate({\n                topic: a\n            }));\n            const T = g({\n                relay: {\n                    protocol: t ?? \"irn\"\n                },\n                namespaces: i,\n                requiredNamespaces: p,\n                optionalNamespaces: d,\n                pairingTopic: a,\n                controller: {\n                    publicKey: h,\n                    metadata: this.client.metadata\n                },\n                expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(A)\n            }, n && {\n                sessionProperties: n\n            });\n            await this.client.core.relayer.subscribe(w), await this.sendRequest({\n                topic: w,\n                method: \"wc_sessionSettle\",\n                params: T,\n                throwOnFailedPublish: !0\n            });\n            const K = b(g({}, T), {\n                topic: w,\n                pairingTopic: a,\n                acknowledged: !1,\n                self: T.controller,\n                peer: {\n                    publicKey: c.publicKey,\n                    metadata: c.metadata\n                },\n                controller: h\n            });\n            return await this.client.session.set(w, K), await this.setExpiry(w, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(A)), {\n                topic: w,\n                acknowledged: ()=>new Promise((L)=>setTimeout(()=>L(this.client.session.get(w)), 500))\n            };\n        }, this.reject = async (e)=>{\n            await this.isInitialized(), await this.isValidReject(e);\n            const { id: s, reason: t } = e, { pairingTopic: i } = this.client.proposal.get(s);\n            i && (await this.sendError(s, i, t), await this.client.proposal.delete(s, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")));\n        }, this.update = async (e)=>{\n            await this.isInitialized(), await this.isValidUpdate(e);\n            const { topic: s, namespaces: t } = e, i = await this.sendRequest({\n                topic: s,\n                method: \"wc_sessionUpdate\",\n                params: {\n                    namespaces: t\n                }\n            }), { done: n, resolve: o, reject: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)();\n            return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", i), ({ error: c })=>{\n                c ? a(c) : o();\n            }), await this.client.session.update(s, {\n                namespaces: t\n            }), {\n                acknowledged: n\n            };\n        }, this.extend = async (e)=>{\n            await this.isInitialized(), await this.isValidExtend(e);\n            const { topic: s } = e, t = await this.sendRequest({\n                topic: s,\n                method: \"wc_sessionExtend\",\n                params: {}\n            }), { done: i, resolve: n, reject: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)();\n            return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", t), ({ error: a })=>{\n                a ? o(a) : n();\n            }), await this.setExpiry(s, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(A)), {\n                acknowledged: i\n            };\n        }, this.request = async (e)=>{\n            await this.isInitialized(), await this.isValidRequest(e);\n            const { chainId: s, request: t, topic: i, expiry: n } = e, o = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), { done: a, resolve: c, reject: p } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(n, \"Request expired. Please try again.\");\n            return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", o), ({ error: d, result: h })=>{\n                d ? p(d) : c(h);\n            }), await Promise.all([\n                new Promise(async (d)=>{\n                    await this.sendRequest({\n                        clientRpcId: o,\n                        topic: i,\n                        method: \"wc_sessionRequest\",\n                        params: {\n                            request: t,\n                            chainId: s\n                        },\n                        expiry: n,\n                        throwOnFailedPublish: !0\n                    }).catch((h)=>p(h)), this.client.events.emit(\"session_request_sent\", {\n                        topic: i,\n                        request: t,\n                        chainId: s,\n                        id: o\n                    }), d();\n                }),\n                new Promise(async (d)=>{\n                    const h = await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getDeepLink)(this.client.core.storage, W);\n                    (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.handleDeeplinkRedirect)({\n                        id: o,\n                        topic: i,\n                        wcDeepLink: h\n                    }), d();\n                }),\n                a()\n            ]).then((d)=>d[2]);\n        }, this.respond = async (e)=>{\n            await this.isInitialized(), await this.isValidRespond(e);\n            const { topic: s, response: t } = e, { id: i } = t;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? await this.sendResult({\n                id: i,\n                topic: s,\n                result: t.result,\n                throwOnFailedPublish: !0\n            }) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && await this.sendError(i, s, t.error), this.cleanupAfterResponse(e);\n        }, this.ping = async (e)=>{\n            await this.isInitialized(), await this.isValidPing(e);\n            const { topic: s } = e;\n            if (this.client.session.keys.includes(s)) {\n                const t = await this.sendRequest({\n                    topic: s,\n                    method: \"wc_sessionPing\",\n                    params: {}\n                }), { done: i, resolve: n, reject: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)();\n                this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", t), ({ error: a })=>{\n                    a ? o(a) : n();\n                }), await i();\n            } else this.client.core.pairing.pairings.keys.includes(s) && await this.client.core.pairing.ping({\n                topic: s\n            });\n        }, this.emit = async (e)=>{\n            await this.isInitialized(), await this.isValidEmit(e);\n            const { topic: s, event: t, chainId: i } = e;\n            await this.sendRequest({\n                topic: s,\n                method: \"wc_sessionEvent\",\n                params: {\n                    event: t,\n                    chainId: i\n                }\n            });\n        }, this.disconnect = async (e)=>{\n            await this.isInitialized(), await this.isValidDisconnect(e);\n            const { topic: s } = e;\n            this.client.session.keys.includes(s) ? (await this.sendRequest({\n                topic: s,\n                method: \"wc_sessionDelete\",\n                params: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"),\n                throwOnFailedPublish: !0\n            }), await this.deleteSession(s)) : await this.client.core.pairing.disconnect({\n                topic: s\n            });\n        }, this.find = (e)=>(this.isInitialized(), this.client.session.getAll().filter((s)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isSessionCompatible)(s, e))), this.getPendingSessionRequests = ()=>(this.isInitialized(), this.client.pendingRequest.getAll()), this.cleanupDuplicatePairings = async (e)=>{\n            if (e.pairingTopic) try {\n                const s = this.client.core.pairing.pairings.get(e.pairingTopic), t = this.client.core.pairing.pairings.getAll().filter((i)=>{\n                    var n, o;\n                    return ((n = i.peerMetadata) == null ? void 0 : n.url) && ((o = i.peerMetadata) == null ? void 0 : o.url) === e.peer.metadata.url && i.topic && i.topic !== s.topic;\n                });\n                if (t.length === 0) return;\n                this.client.logger.info(`Cleaning up ${t.length} duplicate pairing(s)`), await Promise.all(t.map((i)=>this.client.core.pairing.disconnect({\n                        topic: i.topic\n                    }))), this.client.logger.info(\"Duplicate pairings clean up finished\");\n            } catch (s) {\n                this.client.logger.error(s);\n            }\n        }, this.deleteSession = async (e, s)=>{\n            const { self: t } = this.client.session.get(e);\n            await this.client.core.relayer.unsubscribe(e), this.client.session.delete(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), this.client.core.crypto.keychain.has(t.publicKey) && await this.client.core.crypto.deleteKeyPair(t.publicKey), this.client.core.crypto.keychain.has(e) && await this.client.core.crypto.deleteSymKey(e), s || this.client.core.expirer.del(e), this.client.core.storage.removeItem(W).catch((i)=>this.client.logger.warn(i)), this.getPendingSessionRequests().forEach((i)=>{\n                i.topic === e && this.deletePendingSessionRequest(i.id, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"));\n            });\n        }, this.deleteProposal = async (e, s)=>{\n            await Promise.all([\n                this.client.proposal.delete(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")),\n                s ? Promise.resolve() : this.client.core.expirer.del(e)\n            ]);\n        }, this.deletePendingSessionRequest = async (e, s, t = !1)=>{\n            await Promise.all([\n                this.client.pendingRequest.delete(e, s),\n                t ? Promise.resolve() : this.client.core.expirer.del(e)\n            ]), this.sessionRequestQueue.queue = this.sessionRequestQueue.queue.filter((i)=>i.id !== e), t && (this.sessionRequestQueue.state = I.idle);\n        }, this.setExpiry = async (e, s)=>{\n            this.client.session.keys.includes(e) && await this.client.session.update(e, {\n                expiry: s\n            }), this.client.core.expirer.set(e, s);\n        }, this.setProposal = async (e, s)=>{\n            await this.client.proposal.set(e, s), this.client.core.expirer.set(e, s.expiry);\n        }, this.setPendingSessionRequest = async (e)=>{\n            const s = V.wc_sessionRequest.req.ttl, { id: t, topic: i, params: n, verifyContext: o } = e;\n            await this.client.pendingRequest.set(t, {\n                id: t,\n                topic: i,\n                params: n,\n                verifyContext: o\n            }), s && this.client.core.expirer.set(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(s));\n        }, this.sendRequest = async (e)=>{\n            const { topic: s, method: t, params: i, expiry: n, relayRpcId: o, clientRpcId: a, throwOnFailedPublish: c } = e, p = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(t, i, a);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isBrowser)() && pe.includes(t)) {\n                const R = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify(p));\n                this.client.core.verify.register({\n                    attestationId: R\n                });\n            }\n            const d = await this.client.core.crypto.encode(s, p), h = V[t].req;\n            return n && (h.ttl = n), o && (h.id = o), this.client.core.history.set(s, p), c ? (h.internal = b(g({}, h.internal), {\n                throwOnFailedPublish: !0\n            }), await this.client.core.relayer.publish(s, d, h)) : this.client.core.relayer.publish(s, d, h).catch((R)=>this.client.logger.error(R)), p.id;\n        }, this.sendResult = async (e)=>{\n            const { id: s, topic: t, result: i, throwOnFailedPublish: n } = e, o = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcResult)(s, i), a = await this.client.core.crypto.encode(t, o), c = await this.client.core.history.get(t, s), p = V[c.request.method].res;\n            n ? (p.internal = b(g({}, p.internal), {\n                throwOnFailedPublish: !0\n            }), await this.client.core.relayer.publish(t, a, p)) : this.client.core.relayer.publish(t, a, p).catch((d)=>this.client.logger.error(d)), await this.client.core.history.resolve(o);\n        }, this.sendError = async (e, s, t)=>{\n            const i = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError)(e, t), n = await this.client.core.crypto.encode(s, i), o = await this.client.core.history.get(s, e), a = V[o.request.method].res;\n            this.client.core.relayer.publish(s, n, a), await this.client.core.history.resolve(i);\n        }, this.cleanup = async ()=>{\n            const e = [], s = [];\n            this.client.session.getAll().forEach((t)=>{\n                (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(t.expiry) && e.push(t.topic);\n            }), this.client.proposal.getAll().forEach((t)=>{\n                (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(t.expiry) && s.push(t.id);\n            }), await Promise.all([\n                ...e.map((t)=>this.deleteSession(t)),\n                ...s.map((t)=>this.deleteProposal(t))\n            ]);\n        }, this.onRelayEventRequest = async (e)=>{\n            this.requestQueue.queue.push(e), await this.processRequestsQueue();\n        }, this.processRequestsQueue = async ()=>{\n            if (this.requestQueue.state === I.active) {\n                this.client.logger.info(\"Request queue already active, skipping...\");\n                return;\n            }\n            for(this.client.logger.info(`Request queue starting with ${this.requestQueue.queue.length} requests`); this.requestQueue.queue.length > 0;){\n                this.requestQueue.state = I.active;\n                const e = this.requestQueue.queue.shift();\n                if (e) try {\n                    this.processRequest(e), await new Promise((s)=>setTimeout(s, 300));\n                } catch (s) {\n                    this.client.logger.warn(s);\n                }\n            }\n            this.requestQueue.state = I.idle;\n        }, this.processRequest = (e)=>{\n            const { topic: s, payload: t } = e, i = t.method;\n            switch(i){\n                case \"wc_sessionPropose\":\n                    return this.onSessionProposeRequest(s, t);\n                case \"wc_sessionSettle\":\n                    return this.onSessionSettleRequest(s, t);\n                case \"wc_sessionUpdate\":\n                    return this.onSessionUpdateRequest(s, t);\n                case \"wc_sessionExtend\":\n                    return this.onSessionExtendRequest(s, t);\n                case \"wc_sessionPing\":\n                    return this.onSessionPingRequest(s, t);\n                case \"wc_sessionDelete\":\n                    return this.onSessionDeleteRequest(s, t);\n                case \"wc_sessionRequest\":\n                    return this.onSessionRequest(s, t);\n                case \"wc_sessionEvent\":\n                    return this.onSessionEventRequest(s, t);\n                default:\n                    return this.client.logger.info(`Unsupported request method ${i}`);\n            }\n        }, this.onRelayEventResponse = async (e)=>{\n            const { topic: s, payload: t } = e, i = (await this.client.core.history.get(s, t.id)).request.method;\n            switch(i){\n                case \"wc_sessionPropose\":\n                    return this.onSessionProposeResponse(s, t);\n                case \"wc_sessionSettle\":\n                    return this.onSessionSettleResponse(s, t);\n                case \"wc_sessionUpdate\":\n                    return this.onSessionUpdateResponse(s, t);\n                case \"wc_sessionExtend\":\n                    return this.onSessionExtendResponse(s, t);\n                case \"wc_sessionPing\":\n                    return this.onSessionPingResponse(s, t);\n                case \"wc_sessionRequest\":\n                    return this.onSessionRequestResponse(s, t);\n                default:\n                    return this.client.logger.info(`Unsupported response method ${i}`);\n            }\n        }, this.onRelayEventUnknownPayload = (e)=>{\n            const { topic: s } = e, { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `Decoded payload on topic ${s} is not identifiable as a JSON-RPC request or a response.`);\n            throw new Error(t);\n        }, this.onSessionProposeRequest = async (e, s)=>{\n            const { params: t, id: i } = s;\n            try {\n                this.isValidConnect(g({}, s.params));\n                const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.FIVE_MINUTES), o = g({\n                    id: i,\n                    pairingTopic: e,\n                    expiry: n\n                }, t);\n                await this.setProposal(i, o);\n                const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify(s)), c = await this.getVerifyContext(a, o.proposer.metadata);\n                this.client.events.emit(\"session_proposal\", {\n                    id: i,\n                    params: o,\n                    verifyContext: c\n                });\n            } catch (n) {\n                await this.sendError(i, e, n), this.client.logger.error(n);\n            }\n        }, this.onSessionProposeResponse = async (e, s)=>{\n            const { id: t } = s;\n            if ((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s)) {\n                const { result: i } = s;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    result: i\n                });\n                const n = this.client.proposal.get(t);\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    proposal: n\n                });\n                const o = n.proposer.publicKey;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    selfPublicKey: o\n                });\n                const a = i.responderPublicKey;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    peerPublicKey: a\n                });\n                const c = await this.client.core.crypto.generateSharedKey(o, a);\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    sessionTopic: c\n                });\n                const p = await this.client.core.relayer.subscribe(c);\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    subscriptionId: p\n                }), await this.client.core.pairing.activate({\n                    topic: e\n                });\n            } else (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && (await this.client.proposal.delete(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), {\n                error: s.error\n            }));\n        }, this.onSessionSettleRequest = async (e, s)=>{\n            const { id: t, params: i } = s;\n            try {\n                this.isValidSessionSettleRequest(i);\n                const { relay: n, controller: o, expiry: a, namespaces: c, requiredNamespaces: p, optionalNamespaces: d, sessionProperties: h, pairingTopic: R } = s.params, w = g({\n                    topic: e,\n                    relay: n,\n                    expiry: a,\n                    namespaces: c,\n                    acknowledged: !0,\n                    pairingTopic: R,\n                    requiredNamespaces: p,\n                    optionalNamespaces: d,\n                    controller: o.publicKey,\n                    self: {\n                        publicKey: \"\",\n                        metadata: this.client.metadata\n                    },\n                    peer: {\n                        publicKey: o.publicKey,\n                        metadata: o.metadata\n                    }\n                }, h && {\n                    sessionProperties: h\n                });\n                await this.sendResult({\n                    id: s.id,\n                    topic: e,\n                    result: !0\n                }), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), {\n                    session: w\n                }), this.cleanupDuplicatePairings(w);\n            } catch (n) {\n                await this.sendError(t, e, n), this.client.logger.error(n);\n            }\n        }, this.onSessionSettleResponse = async (e, s)=>{\n            const { id: t } = s;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s) ? (await this.client.session.update(e, {\n                acknowledged: !0\n            }), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_approve\", t), {})) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && (await this.client.session.delete(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_approve\", t), {\n                error: s.error\n            }));\n        }, this.onSessionUpdateRequest = async (e, s)=>{\n            const { params: t, id: i } = s;\n            try {\n                const n = `${e}_session_update`, o = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.get(n);\n                if (o && this.isRequestOutOfSync(o, i)) {\n                    this.client.logger.info(`Discarding out of sync request - ${i}`);\n                    return;\n                }\n                this.isValidUpdate(g({\n                    topic: e\n                }, t)), await this.client.session.update(e, {\n                    namespaces: t.namespaces\n                }), await this.sendResult({\n                    id: i,\n                    topic: e,\n                    result: !0\n                }), this.client.events.emit(\"session_update\", {\n                    id: i,\n                    topic: e,\n                    params: t\n                }), _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.set(n, i);\n            } catch (n) {\n                await this.sendError(i, e, n), this.client.logger.error(n);\n            }\n        }, this.isRequestOutOfSync = (e, s)=>parseInt(s.toString().slice(0, -3)) <= parseInt(e.toString().slice(0, -3)), this.onSessionUpdateResponse = (e, s)=>{\n            const { id: t } = s;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", t), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", t), {\n                error: s.error\n            });\n        }, this.onSessionExtendRequest = async (e, s)=>{\n            const { id: t } = s;\n            try {\n                this.isValidExtend({\n                    topic: e\n                }), await this.setExpiry(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(A)), await this.sendResult({\n                    id: t,\n                    topic: e,\n                    result: !0\n                }), this.client.events.emit(\"session_extend\", {\n                    id: t,\n                    topic: e\n                });\n            } catch (i) {\n                await this.sendError(t, e, i), this.client.logger.error(i);\n            }\n        }, this.onSessionExtendResponse = (e, s)=>{\n            const { id: t } = s;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", t), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", t), {\n                error: s.error\n            });\n        }, this.onSessionPingRequest = async (e, s)=>{\n            const { id: t } = s;\n            try {\n                this.isValidPing({\n                    topic: e\n                }), await this.sendResult({\n                    id: t,\n                    topic: e,\n                    result: !0\n                }), this.client.events.emit(\"session_ping\", {\n                    id: t,\n                    topic: e\n                });\n            } catch (i) {\n                await this.sendError(t, e, i), this.client.logger.error(i);\n            }\n        }, this.onSessionPingResponse = (e, s)=>{\n            const { id: t } = s;\n            setTimeout(()=>{\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", t), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", t), {\n                    error: s.error\n                });\n            }, 500);\n        }, this.onSessionDeleteRequest = async (e, s)=>{\n            const { id: t } = s;\n            try {\n                this.isValidDisconnect({\n                    topic: e,\n                    reason: s.params\n                }), await Promise.all([\n                    new Promise((i)=>{\n                        this.client.core.relayer.once(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_EVENTS.publish, async ()=>{\n                            i(await this.deleteSession(e));\n                        });\n                    }),\n                    this.sendResult({\n                        id: t,\n                        topic: e,\n                        result: !0\n                    })\n                ]), this.client.events.emit(\"session_delete\", {\n                    id: t,\n                    topic: e\n                });\n            } catch (i) {\n                this.client.logger.error(i);\n            }\n        }, this.onSessionRequest = async (e, s)=>{\n            const { id: t, params: i } = s;\n            try {\n                this.isValidRequest(g({\n                    topic: e\n                }, i));\n                const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(\"wc_sessionRequest\", i, t))), o = this.client.session.get(e), a = await this.getVerifyContext(n, o.peer.metadata), c = {\n                    id: t,\n                    topic: e,\n                    params: i,\n                    verifyContext: a\n                };\n                await this.setPendingSessionRequest(c), this.addSessionRequestToSessionRequestQueue(c), this.processSessionRequestQueue();\n            } catch (n) {\n                await this.sendError(t, e, n), this.client.logger.error(n);\n            }\n        }, this.onSessionRequestResponse = (e, s)=>{\n            const { id: t } = s;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", t), {\n                result: s.result\n            }) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", t), {\n                error: s.error\n            });\n        }, this.onSessionEventRequest = async (e, s)=>{\n            const { id: t, params: i } = s;\n            try {\n                const n = `${e}_session_event_${i.event.name}`, o = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.get(n);\n                if (o && this.isRequestOutOfSync(o, t)) {\n                    this.client.logger.info(`Discarding out of sync request - ${t}`);\n                    return;\n                }\n                this.isValidEmit(g({\n                    topic: e\n                }, i)), this.client.events.emit(\"session_event\", {\n                    id: t,\n                    topic: e,\n                    params: i\n                }), _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.set(n, t);\n            } catch (n) {\n                await this.sendError(t, e, n), this.client.logger.error(n);\n            }\n        }, this.addSessionRequestToSessionRequestQueue = (e)=>{\n            this.sessionRequestQueue.queue.push(e);\n        }, this.cleanupAfterResponse = (e)=>{\n            this.deletePendingSessionRequest(e.response.id, {\n                message: \"fulfilled\",\n                code: 0\n            }), setTimeout(()=>{\n                this.sessionRequestQueue.state = I.idle, this.processSessionRequestQueue();\n            }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.toMiliseconds)(this.requestQueueDelay));\n        }, this.processSessionRequestQueue = ()=>{\n            if (this.sessionRequestQueue.state === I.active) {\n                this.client.logger.info(\"session request queue is already active.\");\n                return;\n            }\n            const e = this.sessionRequestQueue.queue[0];\n            if (!e) {\n                this.client.logger.info(\"session request queue is empty.\");\n                return;\n            }\n            try {\n                this.sessionRequestQueue.state = I.active, this.client.events.emit(\"session_request\", e);\n            } catch (s) {\n                this.client.logger.error(s);\n            }\n        }, this.onPairingCreated = (e)=>{\n            if (e.active) return;\n            const s = this.client.proposal.getAll().find((t)=>t.pairingTopic === e.topic);\n            s && this.onSessionProposeRequest(e.topic, (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(\"wc_sessionPropose\", {\n                requiredNamespaces: s.requiredNamespaces,\n                optionalNamespaces: s.optionalNamespaces,\n                relays: s.relays,\n                proposer: s.proposer,\n                sessionProperties: s.sessionProperties\n            }, s.id));\n        }, this.isValidConnect = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `connect() params: ${JSON.stringify(e)}`);\n                throw new Error(a);\n            }\n            const { pairingTopic: s, requiredNamespaces: t, optionalNamespaces: i, sessionProperties: n, relays: o } = e;\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(s) || await this.isValidPairingTopic(s), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRelays)(o, !0)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `connect() relays: ${o}`);\n                throw new Error(a);\n            }\n            !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(t) && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(t) !== 0 && this.validateNamespaces(t, \"requiredNamespaces\"), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(i) && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(i) !== 0 && this.validateNamespaces(i, \"optionalNamespaces\"), (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(n) || this.validateSessionProps(n, \"sessionProperties\");\n        }, this.validateNamespaces = (e, s)=>{\n            const t = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequiredNamespaces)(e, \"connect()\", s);\n            if (t) throw new Error(t.message);\n        }, this.isValidApprove = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) throw new Error((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `approve() params: ${e}`).message);\n            const { id: s, namespaces: t, relayProtocol: i, sessionProperties: n } = e;\n            await this.isValidProposalId(s);\n            const o = this.client.proposal.get(s), a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(t, \"approve()\");\n            if (a) throw new Error(a.message);\n            const c = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isConformingNamespaces)(o.requiredNamespaces, t, \"approve()\");\n            if (c) throw new Error(c.message);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(i, !0)) {\n                const { message: p } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `approve() relayProtocol: ${i}`);\n                throw new Error(p);\n            }\n            (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(n) || this.validateSessionProps(n, \"sessionProperties\");\n        }, this.isValidReject = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `reject() params: ${e}`);\n                throw new Error(i);\n            }\n            const { id: s, reason: t } = e;\n            if (await this.isValidProposalId(s), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidErrorReason)(t)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `reject() reason: ${JSON.stringify(t)}`);\n                throw new Error(i);\n            }\n        }, this.isValidSessionSettleRequest = (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `onSessionSettleRequest() params: ${e}`);\n                throw new Error(c);\n            }\n            const { relay: s, controller: t, namespaces: i, expiry: n } = e;\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRelay)(s)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", \"onSessionSettleRequest() relay protocol should be a string\");\n                throw new Error(c);\n            }\n            const o = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidController)(t, \"onSessionSettleRequest()\");\n            if (o) throw new Error(o.message);\n            const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(i, \"onSessionSettleRequest()\");\n            if (a) throw new Error(a.message);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(n)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", \"onSessionSettleRequest()\");\n                throw new Error(c);\n            }\n        }, this.isValidUpdate = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `update() params: ${e}`);\n                throw new Error(a);\n            }\n            const { topic: s, namespaces: t } = e;\n            await this.isValidSessionTopic(s);\n            const i = this.client.session.get(s), n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(t, \"update()\");\n            if (n) throw new Error(n.message);\n            const o = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isConformingNamespaces)(i.requiredNamespaces, t, \"update()\");\n            if (o) throw new Error(o.message);\n        }, this.isValidExtend = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `extend() params: ${e}`);\n                throw new Error(t);\n            }\n            const { topic: s } = e;\n            await this.isValidSessionTopic(s);\n        }, this.isValidRequest = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() params: ${e}`);\n                throw new Error(a);\n            }\n            const { topic: s, request: t, chainId: i, expiry: n } = e;\n            await this.isValidSessionTopic(s);\n            const { namespaces: o } = this.client.session.get(s);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesChainId)(o, i)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() chainId: ${i}`);\n                throw new Error(a);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequest)(t)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() ${JSON.stringify(t)}`);\n                throw new Error(a);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesRequest)(o, i, t.method)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() method: ${t.method}`);\n                throw new Error(a);\n            }\n            if (n && !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequestExpiry)(n, U)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() expiry: ${n}. Expiry must be a number (in seconds) between ${U.min} and ${U.max}`);\n                throw new Error(a);\n            }\n        }, this.isValidRespond = async (e)=>{\n            var s;\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `respond() params: ${e}`);\n                throw new Error(n);\n            }\n            const { topic: t, response: i } = e;\n            try {\n                await this.isValidSessionTopic(t);\n            } catch (n) {\n                throw (s = e?.response) != null && s.id && this.cleanupAfterResponse(e), n;\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidResponse)(i)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `respond() response: ${JSON.stringify(i)}`);\n                throw new Error(n);\n            }\n        }, this.isValidPing = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `ping() params: ${e}`);\n                throw new Error(t);\n            }\n            const { topic: s } = e;\n            await this.isValidSessionOrPairingTopic(s);\n        }, this.isValidEmit = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() params: ${e}`);\n                throw new Error(o);\n            }\n            const { topic: s, event: t, chainId: i } = e;\n            await this.isValidSessionTopic(s);\n            const { namespaces: n } = this.client.session.get(s);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesChainId)(n, i)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() chainId: ${i}`);\n                throw new Error(o);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidEvent)(t)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() event: ${JSON.stringify(t)}`);\n                throw new Error(o);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesEvent)(n, i, t.name)) {\n                const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() event: ${JSON.stringify(t)}`);\n                throw new Error(o);\n            }\n        }, this.isValidDisconnect = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `disconnect() params: ${e}`);\n                throw new Error(t);\n            }\n            const { topic: s } = e;\n            await this.isValidSessionOrPairingTopic(s);\n        }, this.getVerifyContext = async (e, s)=>{\n            const t = {\n                verified: {\n                    verifyUrl: s.verifyUrl || _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.VERIFY_SERVER,\n                    validation: \"UNKNOWN\",\n                    origin: s.url || \"\"\n                }\n            };\n            try {\n                const i = await this.client.core.verify.resolve({\n                    attestationId: e,\n                    verifyUrl: s.verifyUrl\n                });\n                i && (t.verified.origin = i.origin, t.verified.isScam = i.isScam, t.verified.validation = i.origin === new URL(s.url).origin ? \"VALID\" : \"INVALID\");\n            } catch (i) {\n                this.client.logger.info(i);\n            }\n            return this.client.logger.info(`Verify context: ${JSON.stringify(t)}`), t;\n        }, this.validateSessionProps = (e, s)=>{\n            Object.values(e).forEach((t)=>{\n                if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(t, !1)) {\n                    const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `${s} must be in Record<string, string> format. Received: ${JSON.stringify(t)}`);\n                    throw new Error(i);\n                }\n            });\n        };\n    }\n    async isInitialized() {\n        if (!this.initialized) {\n            const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(r);\n        }\n        await this.client.core.relayer.confirmOnlineStateOrThrow();\n    }\n    registerRelayerEvents() {\n        this.client.core.relayer.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_EVENTS.message, async (r)=>{\n            const { topic: e, message: s } = r;\n            if (this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(s))) return;\n            const t = await this.client.core.crypto.decode(e, s);\n            try {\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcRequest)(t) ? (this.client.core.history.set(e, t), this.onRelayEventRequest({\n                    topic: e,\n                    payload: t\n                })) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResponse)(t) ? (await this.client.core.history.resolve(t), await this.onRelayEventResponse({\n                    topic: e,\n                    payload: t\n                }), this.client.core.history.delete(e, t.id)) : this.onRelayEventUnknownPayload({\n                    topic: e,\n                    payload: t\n                });\n            } catch (i) {\n                this.client.logger.error(i);\n            }\n        });\n    }\n    registerExpirerEvents() {\n        this.client.core.expirer.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EXPIRER_EVENTS.expired, async (r)=>{\n            const { topic: e, id: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseExpirerTarget)(r.target);\n            if (s && this.client.pendingRequest.keys.includes(s)) return await this.deletePendingSessionRequest(s, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\"), !0);\n            e ? this.client.session.keys.includes(e) && (await this.deleteSession(e, !0), this.client.events.emit(\"session_expire\", {\n                topic: e\n            })) : s && (await this.deleteProposal(s, !0), this.client.events.emit(\"proposal_expire\", {\n                id: s\n            }));\n        });\n    }\n    registerPairingEvents() {\n        this.client.core.pairing.events.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.PAIRING_EVENTS.create, (r)=>this.onPairingCreated(r));\n    }\n    isValidPairingTopic(r) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(r, !1)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `pairing topic should be a string: ${r}`);\n            throw new Error(e);\n        }\n        if (!this.client.core.pairing.pairings.keys.includes(r)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `pairing topic doesn't exist: ${r}`);\n            throw new Error(e);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.core.pairing.pairings.get(r).expiry)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `pairing topic: ${r}`);\n            throw new Error(e);\n        }\n    }\n    async isValidSessionTopic(r) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(r, !1)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `session topic should be a string: ${r}`);\n            throw new Error(e);\n        }\n        if (!this.client.session.keys.includes(r)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `session topic doesn't exist: ${r}`);\n            throw new Error(e);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.session.get(r).expiry)) {\n            await this.deleteSession(r);\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `session topic: ${r}`);\n            throw new Error(e);\n        }\n    }\n    async isValidSessionOrPairingTopic(r) {\n        if (this.client.session.keys.includes(r)) await this.isValidSessionTopic(r);\n        else if (this.client.core.pairing.pairings.keys.includes(r)) this.isValidPairingTopic(r);\n        else if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(r, !1)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `session or pairing topic doesn't exist: ${r}`);\n            throw new Error(e);\n        } else {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `session or pairing topic should be a string: ${r}`);\n            throw new Error(e);\n        }\n    }\n    async isValidProposalId(r) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidId)(r)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `proposal id should be a number: ${r}`);\n            throw new Error(e);\n        }\n        if (!this.client.proposal.keys.includes(r)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `proposal id doesn't exist: ${r}`);\n            throw new Error(e);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.proposal.get(r).expiry)) {\n            await this.deleteProposal(r);\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `proposal id: ${r}`);\n            throw new Error(e);\n        }\n    }\n}\nclass us extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(r, e){\n        super(r, e, ne, G), this.core = r, this.logger = e;\n    }\n}\nclass ue extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(r, e){\n        super(r, e, ae, G), this.core = r, this.logger = e;\n    }\n}\nclass gs extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(r, e){\n        super(r, e, le, G, (s)=>s.id), this.core = r, this.logger = e;\n    }\n}\nclass Q extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.ISignClient {\n    constructor(r){\n        super(r), this.protocol = X, this.version = F, this.name = M.name, this.events = new events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter, this.on = (s, t)=>this.events.on(s, t), this.once = (s, t)=>this.events.once(s, t), this.off = (s, t)=>this.events.off(s, t), this.removeListener = (s, t)=>this.events.removeListener(s, t), this.removeAllListeners = (s)=>this.events.removeAllListeners(s), this.connect = async (s)=>{\n            try {\n                return await this.engine.connect(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.pair = async (s)=>{\n            try {\n                return await this.engine.pair(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.approve = async (s)=>{\n            try {\n                return await this.engine.approve(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.reject = async (s)=>{\n            try {\n                return await this.engine.reject(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.update = async (s)=>{\n            try {\n                return await this.engine.update(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.extend = async (s)=>{\n            try {\n                return await this.engine.extend(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.request = async (s)=>{\n            try {\n                return await this.engine.request(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.respond = async (s)=>{\n            try {\n                return await this.engine.respond(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.ping = async (s)=>{\n            try {\n                return await this.engine.ping(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.emit = async (s)=>{\n            try {\n                return await this.engine.emit(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.disconnect = async (s)=>{\n            try {\n                return await this.engine.disconnect(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.find = (s)=>{\n            try {\n                return this.engine.find(s);\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.getPendingSessionRequests = ()=>{\n            try {\n                return this.engine.getPendingSessionRequests();\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.name = r?.name || M.name, this.metadata = r?.metadata || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getAppMetadata)();\n        const e = typeof r?.logger < \"u\" && typeof r?.logger != \"string\" ? r.logger : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getDefaultLoggerOptions)({\n            level: r?.logger || M.logger\n        }));\n        this.core = r?.core || new _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Core(r), this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.generateChildLogger)(e, this.name), this.session = new ue(this.core, this.logger), this.proposal = new us(this.core, this.logger), this.pendingRequest = new gs(this.core, this.logger), this.engine = new ds(this);\n    }\n    static async init(r) {\n        const e = new Q(r);\n        return await e.initialize(), e;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getLoggerContext)(this.logger);\n    }\n    get pairing() {\n        return this.core.pairing.pairings;\n    }\n    async initialize() {\n        this.logger.trace(\"Initialized\");\n        try {\n            await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.engine.init(), this.core.verify.init({\n                verifyUrl: this.metadata.verifyUrl\n            }), this.logger.info(\"SignClient Initialization Success\");\n        } catch (r) {\n            throw this.logger.info(\"SignClient Initialization Failure\"), this.logger.error(r.message), r;\n        }\n    }\n}\nconst ms = ue, ws = Q;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/sign-client/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/time/dist/cjs/constants/index.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/@walletconnect/time/dist/cjs/constants/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../../node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./misc */ \"(ssr)/../../node_modules/@walletconnect/time/dist/cjs/constants/misc.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./time */ \"(ssr)/../../node_modules/@walletconnect/time/dist/cjs/constants/time.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvY29uc3RhbnRzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFVBQVVDLG1CQUFPQSxDQUFDLDBEQUFPO0FBQy9CRCxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLHVGQUFRLEdBQUdIO0FBQ3hDRSxRQUFRRSxZQUFZLENBQUNELG1CQUFPQSxDQUFDLHVGQUFRLEdBQUdILFVBQ3hDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NzYS8uLi8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9jb25zdGFudHMvaW5kZXguanM/NjZjNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9taXNjXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3RpbWVcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJfX2V4cG9ydFN0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/time/dist/cjs/constants/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/time/dist/cjs/constants/misc.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@walletconnect/time/dist/cjs/constants/misc.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ONE_THOUSAND = exports.ONE_HUNDRED = void 0;\nexports.ONE_HUNDRED = 100;\nexports.ONE_THOUSAND = 1000; //# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvY29uc3RhbnRzL21pc2MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG9CQUFvQixHQUFHQSxtQkFBbUIsR0FBRyxLQUFLO0FBQ2xEQSxtQkFBbUIsR0FBRztBQUN0QkEsb0JBQW9CLEdBQUcsTUFDdkIsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC90aW1lL2Rpc3QvY2pzL2NvbnN0YW50cy9taXNjLmpzP2EzNmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk9ORV9USE9VU0FORCA9IGV4cG9ydHMuT05FX0hVTkRSRUQgPSB2b2lkIDA7XG5leHBvcnRzLk9ORV9IVU5EUkVEID0gMTAwO1xuZXhwb3J0cy5PTkVfVEhPVVNBTkQgPSAxMDAwO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWlzYy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJPTkVfVEhPVVNBTkQiLCJPTkVfSFVORFJFRCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/time/dist/cjs/constants/misc.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/time/dist/cjs/constants/time.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@walletconnect/time/dist/cjs/constants/time.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ONE_YEAR = exports.FOUR_WEEKS = exports.THREE_WEEKS = exports.TWO_WEEKS = exports.ONE_WEEK = exports.THIRTY_DAYS = exports.SEVEN_DAYS = exports.FIVE_DAYS = exports.THREE_DAYS = exports.ONE_DAY = exports.TWENTY_FOUR_HOURS = exports.TWELVE_HOURS = exports.SIX_HOURS = exports.THREE_HOURS = exports.ONE_HOUR = exports.SIXTY_MINUTES = exports.THIRTY_MINUTES = exports.TEN_MINUTES = exports.FIVE_MINUTES = exports.ONE_MINUTE = exports.SIXTY_SECONDS = exports.THIRTY_SECONDS = exports.TEN_SECONDS = exports.FIVE_SECONDS = exports.ONE_SECOND = void 0;\nexports.ONE_SECOND = 1;\nexports.FIVE_SECONDS = 5;\nexports.TEN_SECONDS = 10;\nexports.THIRTY_SECONDS = 30;\nexports.SIXTY_SECONDS = 60;\nexports.ONE_MINUTE = exports.SIXTY_SECONDS;\nexports.FIVE_MINUTES = exports.ONE_MINUTE * 5;\nexports.TEN_MINUTES = exports.ONE_MINUTE * 10;\nexports.THIRTY_MINUTES = exports.ONE_MINUTE * 30;\nexports.SIXTY_MINUTES = exports.ONE_MINUTE * 60;\nexports.ONE_HOUR = exports.SIXTY_MINUTES;\nexports.THREE_HOURS = exports.ONE_HOUR * 3;\nexports.SIX_HOURS = exports.ONE_HOUR * 6;\nexports.TWELVE_HOURS = exports.ONE_HOUR * 12;\nexports.TWENTY_FOUR_HOURS = exports.ONE_HOUR * 24;\nexports.ONE_DAY = exports.TWENTY_FOUR_HOURS;\nexports.THREE_DAYS = exports.ONE_DAY * 3;\nexports.FIVE_DAYS = exports.ONE_DAY * 5;\nexports.SEVEN_DAYS = exports.ONE_DAY * 7;\nexports.THIRTY_DAYS = exports.ONE_DAY * 30;\nexports.ONE_WEEK = exports.SEVEN_DAYS;\nexports.TWO_WEEKS = exports.ONE_WEEK * 2;\nexports.THREE_WEEKS = exports.ONE_WEEK * 3;\nexports.FOUR_WEEKS = exports.ONE_WEEK * 4;\nexports.ONE_YEAR = exports.ONE_DAY * 365; //# sourceMappingURL=time.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvY29uc3RhbnRzL3RpbWUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGdCQUFnQixHQUFHQSxrQkFBa0IsR0FBR0EsbUJBQW1CLEdBQUdBLGlCQUFpQixHQUFHQSxnQkFBZ0IsR0FBR0EsbUJBQW1CLEdBQUdBLGtCQUFrQixHQUFHQSxpQkFBaUIsR0FBR0Esa0JBQWtCLEdBQUdBLGVBQWUsR0FBR0EseUJBQXlCLEdBQUdBLG9CQUFvQixHQUFHQSxpQkFBaUIsR0FBR0EsbUJBQW1CLEdBQUdBLGdCQUFnQixHQUFHQSxxQkFBcUIsR0FBR0Esc0JBQXNCLEdBQUdBLG1CQUFtQixHQUFHQSxvQkFBb0IsR0FBR0Esa0JBQWtCLEdBQUdBLHFCQUFxQixHQUFHQSxzQkFBc0IsR0FBR0EsbUJBQW1CLEdBQUdBLG9CQUFvQixHQUFHQSxrQkFBa0IsR0FBRyxLQUFLO0FBQ3RpQkEsa0JBQWtCLEdBQUc7QUFDckJBLG9CQUFvQixHQUFHO0FBQ3ZCQSxtQkFBbUIsR0FBRztBQUN0QkEsc0JBQXNCLEdBQUc7QUFDekJBLHFCQUFxQixHQUFHO0FBQ3hCQSxrQkFBa0IsR0FBR0EsUUFBUXNCLGFBQWE7QUFDMUN0QixvQkFBb0IsR0FBR0EsUUFBUXFCLFVBQVUsR0FBRztBQUM1Q3JCLG1CQUFtQixHQUFHQSxRQUFRcUIsVUFBVSxHQUFHO0FBQzNDckIsc0JBQXNCLEdBQUdBLFFBQVFxQixVQUFVLEdBQUc7QUFDOUNyQixxQkFBcUIsR0FBR0EsUUFBUXFCLFVBQVUsR0FBRztBQUM3Q3JCLGdCQUFnQixHQUFHQSxRQUFRaUIsYUFBYTtBQUN4Q2pCLG1CQUFtQixHQUFHQSxRQUFRZ0IsUUFBUSxHQUFHO0FBQ3pDaEIsaUJBQWlCLEdBQUdBLFFBQVFnQixRQUFRLEdBQUc7QUFDdkNoQixvQkFBb0IsR0FBR0EsUUFBUWdCLFFBQVEsR0FBRztBQUMxQ2hCLHlCQUF5QixHQUFHQSxRQUFRZ0IsUUFBUSxHQUFHO0FBQy9DaEIsZUFBZSxHQUFHQSxRQUFRWSxpQkFBaUI7QUFDM0NaLGtCQUFrQixHQUFHQSxRQUFRVyxPQUFPLEdBQUc7QUFDdkNYLGlCQUFpQixHQUFHQSxRQUFRVyxPQUFPLEdBQUc7QUFDdENYLGtCQUFrQixHQUFHQSxRQUFRVyxPQUFPLEdBQUc7QUFDdkNYLG1CQUFtQixHQUFHQSxRQUFRVyxPQUFPLEdBQUc7QUFDeENYLGdCQUFnQixHQUFHQSxRQUFRUSxVQUFVO0FBQ3JDUixpQkFBaUIsR0FBR0EsUUFBUU0sUUFBUSxHQUFHO0FBQ3ZDTixtQkFBbUIsR0FBR0EsUUFBUU0sUUFBUSxHQUFHO0FBQ3pDTixrQkFBa0IsR0FBR0EsUUFBUU0sUUFBUSxHQUFHO0FBQ3hDTixnQkFBZ0IsR0FBR0EsUUFBUVcsT0FBTyxHQUFHLEtBQ3JDLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NzYS8uLi8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9jb25zdGFudHMvdGltZS5qcz8yNDczIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5PTkVfWUVBUiA9IGV4cG9ydHMuRk9VUl9XRUVLUyA9IGV4cG9ydHMuVEhSRUVfV0VFS1MgPSBleHBvcnRzLlRXT19XRUVLUyA9IGV4cG9ydHMuT05FX1dFRUsgPSBleHBvcnRzLlRISVJUWV9EQVlTID0gZXhwb3J0cy5TRVZFTl9EQVlTID0gZXhwb3J0cy5GSVZFX0RBWVMgPSBleHBvcnRzLlRIUkVFX0RBWVMgPSBleHBvcnRzLk9ORV9EQVkgPSBleHBvcnRzLlRXRU5UWV9GT1VSX0hPVVJTID0gZXhwb3J0cy5UV0VMVkVfSE9VUlMgPSBleHBvcnRzLlNJWF9IT1VSUyA9IGV4cG9ydHMuVEhSRUVfSE9VUlMgPSBleHBvcnRzLk9ORV9IT1VSID0gZXhwb3J0cy5TSVhUWV9NSU5VVEVTID0gZXhwb3J0cy5USElSVFlfTUlOVVRFUyA9IGV4cG9ydHMuVEVOX01JTlVURVMgPSBleHBvcnRzLkZJVkVfTUlOVVRFUyA9IGV4cG9ydHMuT05FX01JTlVURSA9IGV4cG9ydHMuU0lYVFlfU0VDT05EUyA9IGV4cG9ydHMuVEhJUlRZX1NFQ09ORFMgPSBleHBvcnRzLlRFTl9TRUNPTkRTID0gZXhwb3J0cy5GSVZFX1NFQ09ORFMgPSBleHBvcnRzLk9ORV9TRUNPTkQgPSB2b2lkIDA7XG5leHBvcnRzLk9ORV9TRUNPTkQgPSAxO1xuZXhwb3J0cy5GSVZFX1NFQ09ORFMgPSA1O1xuZXhwb3J0cy5URU5fU0VDT05EUyA9IDEwO1xuZXhwb3J0cy5USElSVFlfU0VDT05EUyA9IDMwO1xuZXhwb3J0cy5TSVhUWV9TRUNPTkRTID0gNjA7XG5leHBvcnRzLk9ORV9NSU5VVEUgPSBleHBvcnRzLlNJWFRZX1NFQ09ORFM7XG5leHBvcnRzLkZJVkVfTUlOVVRFUyA9IGV4cG9ydHMuT05FX01JTlVURSAqIDU7XG5leHBvcnRzLlRFTl9NSU5VVEVTID0gZXhwb3J0cy5PTkVfTUlOVVRFICogMTA7XG5leHBvcnRzLlRISVJUWV9NSU5VVEVTID0gZXhwb3J0cy5PTkVfTUlOVVRFICogMzA7XG5leHBvcnRzLlNJWFRZX01JTlVURVMgPSBleHBvcnRzLk9ORV9NSU5VVEUgKiA2MDtcbmV4cG9ydHMuT05FX0hPVVIgPSBleHBvcnRzLlNJWFRZX01JTlVURVM7XG5leHBvcnRzLlRIUkVFX0hPVVJTID0gZXhwb3J0cy5PTkVfSE9VUiAqIDM7XG5leHBvcnRzLlNJWF9IT1VSUyA9IGV4cG9ydHMuT05FX0hPVVIgKiA2O1xuZXhwb3J0cy5UV0VMVkVfSE9VUlMgPSBleHBvcnRzLk9ORV9IT1VSICogMTI7XG5leHBvcnRzLlRXRU5UWV9GT1VSX0hPVVJTID0gZXhwb3J0cy5PTkVfSE9VUiAqIDI0O1xuZXhwb3J0cy5PTkVfREFZID0gZXhwb3J0cy5UV0VOVFlfRk9VUl9IT1VSUztcbmV4cG9ydHMuVEhSRUVfREFZUyA9IGV4cG9ydHMuT05FX0RBWSAqIDM7XG5leHBvcnRzLkZJVkVfREFZUyA9IGV4cG9ydHMuT05FX0RBWSAqIDU7XG5leHBvcnRzLlNFVkVOX0RBWVMgPSBleHBvcnRzLk9ORV9EQVkgKiA3O1xuZXhwb3J0cy5USElSVFlfREFZUyA9IGV4cG9ydHMuT05FX0RBWSAqIDMwO1xuZXhwb3J0cy5PTkVfV0VFSyA9IGV4cG9ydHMuU0VWRU5fREFZUztcbmV4cG9ydHMuVFdPX1dFRUtTID0gZXhwb3J0cy5PTkVfV0VFSyAqIDI7XG5leHBvcnRzLlRIUkVFX1dFRUtTID0gZXhwb3J0cy5PTkVfV0VFSyAqIDM7XG5leHBvcnRzLkZPVVJfV0VFS1MgPSBleHBvcnRzLk9ORV9XRUVLICogNDtcbmV4cG9ydHMuT05FX1lFQVIgPSBleHBvcnRzLk9ORV9EQVkgKiAzNjU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10aW1lLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIk9ORV9ZRUFSIiwiRk9VUl9XRUVLUyIsIlRIUkVFX1dFRUtTIiwiVFdPX1dFRUtTIiwiT05FX1dFRUsiLCJUSElSVFlfREFZUyIsIlNFVkVOX0RBWVMiLCJGSVZFX0RBWVMiLCJUSFJFRV9EQVlTIiwiT05FX0RBWSIsIlRXRU5UWV9GT1VSX0hPVVJTIiwiVFdFTFZFX0hPVVJTIiwiU0lYX0hPVVJTIiwiVEhSRUVfSE9VUlMiLCJPTkVfSE9VUiIsIlNJWFRZX01JTlVURVMiLCJUSElSVFlfTUlOVVRFUyIsIlRFTl9NSU5VVEVTIiwiRklWRV9NSU5VVEVTIiwiT05FX01JTlVURSIsIlNJWFRZX1NFQ09ORFMiLCJUSElSVFlfU0VDT05EUyIsIlRFTl9TRUNPTkRTIiwiRklWRV9TRUNPTkRTIiwiT05FX1NFQ09ORCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/time/dist/cjs/constants/time.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/time/dist/cjs/index.js":
/*!****************************************************************!*\
  !*** ../../node_modules/@walletconnect/time/dist/cjs/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../../node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./utils */ \"(ssr)/../../node_modules/@walletconnect/time/dist/cjs/utils/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./watch */ \"(ssr)/../../node_modules/@walletconnect/time/dist/cjs/watch.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/../../node_modules/@walletconnect/time/dist/cjs/types/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/@walletconnect/time/dist/cjs/constants/index.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsMERBQU87QUFDL0JELFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMscUZBQVMsR0FBR0g7QUFDekNFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsK0VBQVMsR0FBR0g7QUFDekNFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMscUZBQVMsR0FBR0g7QUFDekNFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsNkZBQWEsR0FBR0gsVUFDN0MsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC90aW1lL2Rpc3QvY2pzL2luZGV4LmpzPzU1NjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXRpbHNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vd2F0Y2hcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29uc3RhbnRzXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiX19leHBvcnRTdGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/time/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/time/dist/cjs/types/index.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@walletconnect/time/dist/cjs/types/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../../node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./watch */ \"(ssr)/../../node_modules/@walletconnect/time/dist/cjs/types/watch.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvdHlwZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsMERBQU87QUFDL0JELFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMscUZBQVMsR0FBR0gsVUFDekMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC90aW1lL2Rpc3QvY2pzL3R5cGVzL2luZGV4LmpzPzE2ZGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vd2F0Y2hcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJfX2V4cG9ydFN0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/time/dist/cjs/types/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/time/dist/cjs/types/watch.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@walletconnect/time/dist/cjs/types/watch.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.IWatch = void 0;\nclass IWatch {\n}\nexports.IWatch = IWatch; //# sourceMappingURL=watch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvdHlwZXMvd2F0Y2guanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGNBQWMsR0FBRyxLQUFLO0FBQ3RCLE1BQU1FO0FBQ047QUFDQUYsY0FBYyxHQUFHRSxRQUNqQixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jc2EvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvdHlwZXMvd2F0Y2guanM/N2M0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSVdhdGNoID0gdm9pZCAwO1xuY2xhc3MgSVdhdGNoIHtcbn1cbmV4cG9ydHMuSVdhdGNoID0gSVdhdGNoO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2F0Y2guanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiSVdhdGNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/time/dist/cjs/types/watch.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/time/dist/cjs/utils/convert.js":
/*!************************************************************************!*\
  !*** ../../node_modules/@walletconnect/time/dist/cjs/utils/convert.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.fromMiliseconds = exports.toMiliseconds = void 0;\nconst constants_1 = __webpack_require__(/*! ../constants */ \"(ssr)/../../node_modules/@walletconnect/time/dist/cjs/constants/index.js\");\nfunction toMiliseconds(seconds) {\n    return seconds * constants_1.ONE_THOUSAND;\n}\nexports.toMiliseconds = toMiliseconds;\nfunction fromMiliseconds(miliseconds) {\n    return Math.floor(miliseconds / constants_1.ONE_THOUSAND);\n}\nexports.fromMiliseconds = fromMiliseconds; //# sourceMappingURL=convert.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvdXRpbHMvY29udmVydC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsdUJBQXVCLEdBQUdBLHFCQUFxQixHQUFHLEtBQUs7QUFDdkQsTUFBTUksY0FBY0MsbUJBQU9BLENBQUMsOEZBQWM7QUFDMUMsU0FBU0YsY0FBY0csT0FBTztJQUMxQixPQUFPQSxVQUFVRixZQUFZRyxZQUFZO0FBQzdDO0FBQ0FQLHFCQUFxQixHQUFHRztBQUN4QixTQUFTRCxnQkFBZ0JNLFdBQVc7SUFDaEMsT0FBT0MsS0FBS0MsS0FBSyxDQUFDRixjQUFjSixZQUFZRyxZQUFZO0FBQzVEO0FBQ0FQLHVCQUF1QixHQUFHRSxpQkFDMUIsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC90aW1lL2Rpc3QvY2pzL3V0aWxzL2NvbnZlcnQuanM/ZTBmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZnJvbU1pbGlzZWNvbmRzID0gZXhwb3J0cy50b01pbGlzZWNvbmRzID0gdm9pZCAwO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi4vY29uc3RhbnRzXCIpO1xuZnVuY3Rpb24gdG9NaWxpc2Vjb25kcyhzZWNvbmRzKSB7XG4gICAgcmV0dXJuIHNlY29uZHMgKiBjb25zdGFudHNfMS5PTkVfVEhPVVNBTkQ7XG59XG5leHBvcnRzLnRvTWlsaXNlY29uZHMgPSB0b01pbGlzZWNvbmRzO1xuZnVuY3Rpb24gZnJvbU1pbGlzZWNvbmRzKG1pbGlzZWNvbmRzKSB7XG4gICAgcmV0dXJuIE1hdGguZmxvb3IobWlsaXNlY29uZHMgLyBjb25zdGFudHNfMS5PTkVfVEhPVVNBTkQpO1xufVxuZXhwb3J0cy5mcm9tTWlsaXNlY29uZHMgPSBmcm9tTWlsaXNlY29uZHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb252ZXJ0LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImZyb21NaWxpc2Vjb25kcyIsInRvTWlsaXNlY29uZHMiLCJjb25zdGFudHNfMSIsInJlcXVpcmUiLCJzZWNvbmRzIiwiT05FX1RIT1VTQU5EIiwibWlsaXNlY29uZHMiLCJNYXRoIiwiZmxvb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/time/dist/cjs/utils/convert.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/time/dist/cjs/utils/delay.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@walletconnect/time/dist/cjs/utils/delay.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.delay = void 0;\nfunction delay(timeout) {\n    return new Promise((resolve)=>{\n        setTimeout(()=>{\n            resolve(true);\n        }, timeout);\n    });\n}\nexports.delay = delay; //# sourceMappingURL=delay.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvdXRpbHMvZGVsYXkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGFBQWEsR0FBRyxLQUFLO0FBQ3JCLFNBQVNFLE1BQU1DLE9BQU87SUFDbEIsT0FBTyxJQUFJQyxRQUFRQyxDQUFBQTtRQUNmQyxXQUFXO1lBQ1BELFFBQVE7UUFDWixHQUFHRjtJQUNQO0FBQ0o7QUFDQUgsYUFBYSxHQUFHRSxPQUNoQixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jc2EvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvdXRpbHMvZGVsYXkuanM/YmY3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVsYXkgPSB2b2lkIDA7XG5mdW5jdGlvbiBkZWxheSh0aW1lb3V0KSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7XG4gICAgICAgIH0sIHRpbWVvdXQpO1xuICAgIH0pO1xufVxuZXhwb3J0cy5kZWxheSA9IGRlbGF5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVsYXkuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVsYXkiLCJ0aW1lb3V0IiwiUHJvbWlzZSIsInJlc29sdmUiLCJzZXRUaW1lb3V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/time/dist/cjs/utils/delay.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/time/dist/cjs/utils/index.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@walletconnect/time/dist/cjs/utils/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../../node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./delay */ \"(ssr)/../../node_modules/@walletconnect/time/dist/cjs/utils/delay.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./convert */ \"(ssr)/../../node_modules/@walletconnect/time/dist/cjs/utils/convert.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvdXRpbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsMERBQU87QUFDL0JELFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMscUZBQVMsR0FBR0g7QUFDekNFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMseUZBQVcsR0FBR0gsVUFDM0MsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC90aW1lL2Rpc3QvY2pzL3V0aWxzL2luZGV4LmpzP2E0M2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZGVsYXlcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29udmVydFwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0c2xpYl8xIiwicmVxdWlyZSIsIl9fZXhwb3J0U3RhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/time/dist/cjs/utils/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/time/dist/cjs/watch.js":
/*!****************************************************************!*\
  !*** ../../node_modules/@walletconnect/time/dist/cjs/watch.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Watch = void 0;\nclass Watch {\n    constructor(){\n        this.timestamps = new Map();\n    }\n    start(label) {\n        if (this.timestamps.has(label)) {\n            throw new Error(`Watch already started for label: ${label}`);\n        }\n        this.timestamps.set(label, {\n            started: Date.now()\n        });\n    }\n    stop(label) {\n        const timestamp = this.get(label);\n        if (typeof timestamp.elapsed !== \"undefined\") {\n            throw new Error(`Watch already stopped for label: ${label}`);\n        }\n        const elapsed = Date.now() - timestamp.started;\n        this.timestamps.set(label, {\n            started: timestamp.started,\n            elapsed\n        });\n    }\n    get(label) {\n        const timestamp = this.timestamps.get(label);\n        if (typeof timestamp === \"undefined\") {\n            throw new Error(`No timestamp found for label: ${label}`);\n        }\n        return timestamp;\n    }\n    elapsed(label) {\n        const timestamp = this.get(label);\n        const elapsed = timestamp.elapsed || Date.now() - timestamp.started;\n        return elapsed;\n    }\n}\nexports.Watch = Watch;\nexports[\"default\"] = Watch; //# sourceMappingURL=watch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvd2F0Y2guanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGFBQWEsR0FBRyxLQUFLO0FBQ3JCLE1BQU1FO0lBQ0ZDLGFBQWM7UUFDVixJQUFJLENBQUNDLFVBQVUsR0FBRyxJQUFJQztJQUMxQjtJQUNBQyxNQUFNQyxLQUFLLEVBQUU7UUFDVCxJQUFJLElBQUksQ0FBQ0gsVUFBVSxDQUFDSSxHQUFHLENBQUNELFFBQVE7WUFDNUIsTUFBTSxJQUFJRSxNQUFNLENBQUMsaUNBQWlDLEVBQUVGLE1BQU0sQ0FBQztRQUMvRDtRQUNBLElBQUksQ0FBQ0gsVUFBVSxDQUFDTSxHQUFHLENBQUNILE9BQU87WUFBRUksU0FBU0MsS0FBS0MsR0FBRztRQUFHO0lBQ3JEO0lBQ0FDLEtBQUtQLEtBQUssRUFBRTtRQUNSLE1BQU1RLFlBQVksSUFBSSxDQUFDQyxHQUFHLENBQUNUO1FBQzNCLElBQUksT0FBT1EsVUFBVUUsT0FBTyxLQUFLLGFBQWE7WUFDMUMsTUFBTSxJQUFJUixNQUFNLENBQUMsaUNBQWlDLEVBQUVGLE1BQU0sQ0FBQztRQUMvRDtRQUNBLE1BQU1VLFVBQVVMLEtBQUtDLEdBQUcsS0FBS0UsVUFBVUosT0FBTztRQUM5QyxJQUFJLENBQUNQLFVBQVUsQ0FBQ00sR0FBRyxDQUFDSCxPQUFPO1lBQUVJLFNBQVNJLFVBQVVKLE9BQU87WUFBRU07UUFBUTtJQUNyRTtJQUNBRCxJQUFJVCxLQUFLLEVBQUU7UUFDUCxNQUFNUSxZQUFZLElBQUksQ0FBQ1gsVUFBVSxDQUFDWSxHQUFHLENBQUNUO1FBQ3RDLElBQUksT0FBT1EsY0FBYyxhQUFhO1lBQ2xDLE1BQU0sSUFBSU4sTUFBTSxDQUFDLDhCQUE4QixFQUFFRixNQUFNLENBQUM7UUFDNUQ7UUFDQSxPQUFPUTtJQUNYO0lBQ0FFLFFBQVFWLEtBQUssRUFBRTtRQUNYLE1BQU1RLFlBQVksSUFBSSxDQUFDQyxHQUFHLENBQUNUO1FBQzNCLE1BQU1VLFVBQVVGLFVBQVVFLE9BQU8sSUFBSUwsS0FBS0MsR0FBRyxLQUFLRSxVQUFVSixPQUFPO1FBQ25FLE9BQU9NO0lBQ1g7QUFDSjtBQUNBakIsYUFBYSxHQUFHRTtBQUNoQkYsa0JBQWUsR0FBR0UsT0FDbEIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3NhLy4uLy4uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC90aW1lL2Rpc3QvY2pzL3dhdGNoLmpzPzE3NDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLldhdGNoID0gdm9pZCAwO1xuY2xhc3MgV2F0Y2gge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnRpbWVzdGFtcHMgPSBuZXcgTWFwKCk7XG4gICAgfVxuICAgIHN0YXJ0KGxhYmVsKSB7XG4gICAgICAgIGlmICh0aGlzLnRpbWVzdGFtcHMuaGFzKGxhYmVsKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBXYXRjaCBhbHJlYWR5IHN0YXJ0ZWQgZm9yIGxhYmVsOiAke2xhYmVsfWApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudGltZXN0YW1wcy5zZXQobGFiZWwsIHsgc3RhcnRlZDogRGF0ZS5ub3coKSB9KTtcbiAgICB9XG4gICAgc3RvcChsYWJlbCkge1xuICAgICAgICBjb25zdCB0aW1lc3RhbXAgPSB0aGlzLmdldChsYWJlbCk7XG4gICAgICAgIGlmICh0eXBlb2YgdGltZXN0YW1wLmVsYXBzZWQgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgV2F0Y2ggYWxyZWFkeSBzdG9wcGVkIGZvciBsYWJlbDogJHtsYWJlbH1gKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBlbGFwc2VkID0gRGF0ZS5ub3coKSAtIHRpbWVzdGFtcC5zdGFydGVkO1xuICAgICAgICB0aGlzLnRpbWVzdGFtcHMuc2V0KGxhYmVsLCB7IHN0YXJ0ZWQ6IHRpbWVzdGFtcC5zdGFydGVkLCBlbGFwc2VkIH0pO1xuICAgIH1cbiAgICBnZXQobGFiZWwpIHtcbiAgICAgICAgY29uc3QgdGltZXN0YW1wID0gdGhpcy50aW1lc3RhbXBzLmdldChsYWJlbCk7XG4gICAgICAgIGlmICh0eXBlb2YgdGltZXN0YW1wID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE5vIHRpbWVzdGFtcCBmb3VuZCBmb3IgbGFiZWw6ICR7bGFiZWx9YCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRpbWVzdGFtcDtcbiAgICB9XG4gICAgZWxhcHNlZChsYWJlbCkge1xuICAgICAgICBjb25zdCB0aW1lc3RhbXAgPSB0aGlzLmdldChsYWJlbCk7XG4gICAgICAgIGNvbnN0IGVsYXBzZWQgPSB0aW1lc3RhbXAuZWxhcHNlZCB8fCBEYXRlLm5vdygpIC0gdGltZXN0YW1wLnN0YXJ0ZWQ7XG4gICAgICAgIHJldHVybiBlbGFwc2VkO1xuICAgIH1cbn1cbmV4cG9ydHMuV2F0Y2ggPSBXYXRjaDtcbmV4cG9ydHMuZGVmYXVsdCA9IFdhdGNoO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2F0Y2guanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiV2F0Y2giLCJjb25zdHJ1Y3RvciIsInRpbWVzdGFtcHMiLCJNYXAiLCJzdGFydCIsImxhYmVsIiwiaGFzIiwiRXJyb3IiLCJzZXQiLCJzdGFydGVkIiwiRGF0ZSIsIm5vdyIsInN0b3AiLCJ0aW1lc3RhbXAiLCJnZXQiLCJlbGFwc2VkIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/time/dist/cjs/watch.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/types/dist/index.es.js":
/*!****************************************************************!*\
  !*** ../../node_modules/@walletconnect/types/dist/index.es.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ICore: () => (/* binding */ n),\n/* harmony export */   ICrypto: () => (/* binding */ l),\n/* harmony export */   IEchoClient: () => (/* binding */ v),\n/* harmony export */   IEngine: () => (/* binding */ w),\n/* harmony export */   IEngineEvents: () => (/* binding */ S),\n/* harmony export */   IExpirer: () => (/* binding */ E),\n/* harmony export */   IJsonRpcHistory: () => (/* binding */ h),\n/* harmony export */   IKeyChain: () => (/* binding */ x),\n/* harmony export */   IMessageTracker: () => (/* binding */ a),\n/* harmony export */   IPairing: () => (/* binding */ m),\n/* harmony export */   IPublisher: () => (/* binding */ u),\n/* harmony export */   IRelayer: () => (/* binding */ g),\n/* harmony export */   ISignClient: () => (/* binding */ b),\n/* harmony export */   ISignClientEvents: () => (/* binding */ C),\n/* harmony export */   IStore: () => (/* binding */ p),\n/* harmony export */   ISubscriber: () => (/* binding */ d),\n/* harmony export */   ISubscriberTopicMap: () => (/* binding */ I),\n/* harmony export */   IVerify: () => (/* binding */ y)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/events */ \"(ssr)/../../node_modules/@walletconnect/events/dist/esm/index.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass n extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s){\n        super(), this.opts = s, this.protocol = \"wc\", this.version = 2;\n    }\n}\nclass l {\n    constructor(s, t, o){\n        this.core = s, this.logger = t;\n    }\n}\nclass h extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.core = s, this.logger = t, this.records = new Map;\n    }\n}\nclass a {\n    constructor(s, t){\n        this.logger = s, this.core = t;\n    }\n}\nclass u extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.relayer = s, this.logger = t;\n    }\n}\nclass g extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s){\n        super();\n    }\n}\nclass p {\n    constructor(s, t, o, M){\n        this.core = s, this.logger = t, this.name = o;\n    }\n}\nclass I {\n    constructor(){\n        this.map = new Map;\n    }\n}\nclass d extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.relayer = s, this.logger = t;\n    }\n}\nclass x {\n    constructor(s, t){\n        this.core = s, this.logger = t;\n    }\n}\nclass E extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.core = s, this.logger = t;\n    }\n}\nclass m {\n    constructor(s, t){\n        this.logger = s, this.core = t;\n    }\n}\nclass y {\n    constructor(s, t){\n        this.projectId = s, this.logger = t;\n    }\n}\nclass v {\n    constructor(s, t){\n        this.projectId = s, this.logger = t;\n    }\n}\nclass C extends (events__WEBPACK_IMPORTED_MODULE_1___default()) {\n    constructor(){\n        super();\n    }\n}\nclass b {\n    constructor(s){\n        this.opts = s, this.protocol = \"wc\", this.version = 2;\n    }\n}\nclass S extends events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter {\n    constructor(){\n        super();\n    }\n}\nclass w {\n    constructor(s){\n        this.client = s;\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3R5cGVzL2Rpc3QvaW5kZXguZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWdEO0FBQXlDO0FBQUEsTUFBTUssVUFBVUosMERBQUNBO0lBQUNLLFlBQVlDLENBQUMsQ0FBQztRQUFDLEtBQUssSUFBRyxJQUFJLENBQUNDLElBQUksR0FBQ0QsR0FBRSxJQUFJLENBQUNFLFFBQVEsR0FBQyxNQUFLLElBQUksQ0FBQ0MsT0FBTyxHQUFDO0lBQUM7QUFBQztBQUFDLE1BQU1DO0lBQUVMLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxFQUFDQyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNDLElBQUksR0FBQ1AsR0FBRSxJQUFJLENBQUNRLE1BQU0sR0FBQ0g7SUFBQztBQUFDO0FBQUMsTUFBTUksVUFBVWYsMERBQUNBO0lBQUNLLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsS0FBSyxJQUFHLElBQUksQ0FBQ0UsSUFBSSxHQUFDUCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSCxHQUFFLElBQUksQ0FBQ0ssT0FBTyxHQUFDLElBQUlDO0lBQUc7QUFBQztBQUFDLE1BQU1DO0lBQUViLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDRyxNQUFNLEdBQUNSLEdBQUUsSUFBSSxDQUFDTyxJQUFJLEdBQUNGO0lBQUM7QUFBQztBQUFDLE1BQU1RLFVBQVVuQiwwREFBQ0E7SUFBQ0ssWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxLQUFLLElBQUcsSUFBSSxDQUFDUyxPQUFPLEdBQUNkLEdBQUUsSUFBSSxDQUFDUSxNQUFNLEdBQUNIO0lBQUM7QUFBQztBQUFDLE1BQU1VLFVBQVVyQiwwREFBQ0E7SUFBQ0ssWUFBWUMsQ0FBQyxDQUFDO1FBQUMsS0FBSztJQUFFO0FBQUM7QUFBQyxNQUFNZ0I7SUFBRWpCLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxFQUFDQyxDQUFDLEVBQUNXLENBQUMsQ0FBQztRQUFDLElBQUksQ0FBQ1YsSUFBSSxHQUFDUCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSCxHQUFFLElBQUksQ0FBQ2EsSUFBSSxHQUFDWjtJQUFDO0FBQUM7QUFBQyxNQUFNYTtJQUFFcEIsYUFBYTtRQUFDLElBQUksQ0FBQ3FCLEdBQUcsR0FBQyxJQUFJVDtJQUFHO0FBQUM7QUFBQyxNQUFNVSxVQUFVM0IsMERBQUNBO0lBQUNLLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsS0FBSyxJQUFHLElBQUksQ0FBQ1MsT0FBTyxHQUFDZCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSDtJQUFDO0FBQUM7QUFBQyxNQUFNaUI7SUFBRXZCLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDRSxJQUFJLEdBQUNQLEdBQUUsSUFBSSxDQUFDUSxNQUFNLEdBQUNIO0lBQUM7QUFBQztBQUFDLE1BQU1rQixVQUFVN0IsMERBQUNBO0lBQUNLLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsS0FBSyxJQUFHLElBQUksQ0FBQ0UsSUFBSSxHQUFDUCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSDtJQUFDO0FBQUM7QUFBQyxNQUFNbUI7SUFBRXpCLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDRyxNQUFNLEdBQUNSLEdBQUUsSUFBSSxDQUFDTyxJQUFJLEdBQUNGO0lBQUM7QUFBQztBQUFDLE1BQU1vQjtJQUFFMUIsWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNxQixTQUFTLEdBQUMxQixHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSDtJQUFDO0FBQUM7QUFBQyxNQUFNc0I7SUFBRTVCLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDcUIsU0FBUyxHQUFDMUIsR0FBRSxJQUFJLENBQUNRLE1BQU0sR0FBQ0g7SUFBQztBQUFDO0FBQUMsTUFBTXVCLFVBQVVqQywrQ0FBQ0E7SUFBQ0ksYUFBYTtRQUFDLEtBQUs7SUFBRTtBQUFDO0FBQUMsTUFBTThCO0lBQUU5QixZQUFZQyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNDLElBQUksR0FBQ0QsR0FBRSxJQUFJLENBQUNFLFFBQVEsR0FBQyxNQUFLLElBQUksQ0FBQ0MsT0FBTyxHQUFDO0lBQUM7QUFBQztBQUFDLE1BQU0yQixVQUFVakMsZ0RBQUNBO0lBQUNFLGFBQWE7UUFBQyxLQUFLO0lBQUU7QUFBQztBQUFDLE1BQU1nQztJQUFFaEMsWUFBWUMsQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDZ0MsTUFBTSxHQUFDaEM7SUFBQztBQUFDO0FBQWdULENBQzM2QyxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jc2EvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3R5cGVzL2Rpc3QvaW5kZXguZXMuanM/NTVmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnR7SUV2ZW50cyBhcyBlfWZyb21cIkB3YWxsZXRjb25uZWN0L2V2ZW50c1wiO2ltcG9ydCBjLHtFdmVudEVtaXR0ZXIgYXMgaX1mcm9tXCJldmVudHNcIjtjbGFzcyBuIGV4dGVuZHMgZXtjb25zdHJ1Y3RvcihzKXtzdXBlcigpLHRoaXMub3B0cz1zLHRoaXMucHJvdG9jb2w9XCJ3Y1wiLHRoaXMudmVyc2lvbj0yfX1jbGFzcyBse2NvbnN0cnVjdG9yKHMsdCxvKXt0aGlzLmNvcmU9cyx0aGlzLmxvZ2dlcj10fX1jbGFzcyBoIGV4dGVuZHMgZXtjb25zdHJ1Y3RvcihzLHQpe3N1cGVyKCksdGhpcy5jb3JlPXMsdGhpcy5sb2dnZXI9dCx0aGlzLnJlY29yZHM9bmV3IE1hcH19Y2xhc3MgYXtjb25zdHJ1Y3RvcihzLHQpe3RoaXMubG9nZ2VyPXMsdGhpcy5jb3JlPXR9fWNsYXNzIHUgZXh0ZW5kcyBle2NvbnN0cnVjdG9yKHMsdCl7c3VwZXIoKSx0aGlzLnJlbGF5ZXI9cyx0aGlzLmxvZ2dlcj10fX1jbGFzcyBnIGV4dGVuZHMgZXtjb25zdHJ1Y3RvcihzKXtzdXBlcigpfX1jbGFzcyBwe2NvbnN0cnVjdG9yKHMsdCxvLE0pe3RoaXMuY29yZT1zLHRoaXMubG9nZ2VyPXQsdGhpcy5uYW1lPW99fWNsYXNzIEl7Y29uc3RydWN0b3IoKXt0aGlzLm1hcD1uZXcgTWFwfX1jbGFzcyBkIGV4dGVuZHMgZXtjb25zdHJ1Y3RvcihzLHQpe3N1cGVyKCksdGhpcy5yZWxheWVyPXMsdGhpcy5sb2dnZXI9dH19Y2xhc3MgeHtjb25zdHJ1Y3RvcihzLHQpe3RoaXMuY29yZT1zLHRoaXMubG9nZ2VyPXR9fWNsYXNzIEUgZXh0ZW5kcyBle2NvbnN0cnVjdG9yKHMsdCl7c3VwZXIoKSx0aGlzLmNvcmU9cyx0aGlzLmxvZ2dlcj10fX1jbGFzcyBte2NvbnN0cnVjdG9yKHMsdCl7dGhpcy5sb2dnZXI9cyx0aGlzLmNvcmU9dH19Y2xhc3MgeXtjb25zdHJ1Y3RvcihzLHQpe3RoaXMucHJvamVjdElkPXMsdGhpcy5sb2dnZXI9dH19Y2xhc3Mgdntjb25zdHJ1Y3RvcihzLHQpe3RoaXMucHJvamVjdElkPXMsdGhpcy5sb2dnZXI9dH19Y2xhc3MgQyBleHRlbmRzIGN7Y29uc3RydWN0b3IoKXtzdXBlcigpfX1jbGFzcyBie2NvbnN0cnVjdG9yKHMpe3RoaXMub3B0cz1zLHRoaXMucHJvdG9jb2w9XCJ3Y1wiLHRoaXMudmVyc2lvbj0yfX1jbGFzcyBTIGV4dGVuZHMgaXtjb25zdHJ1Y3Rvcigpe3N1cGVyKCl9fWNsYXNzIHd7Y29uc3RydWN0b3Iocyl7dGhpcy5jbGllbnQ9c319ZXhwb3J0e24gYXMgSUNvcmUsbCBhcyBJQ3J5cHRvLHYgYXMgSUVjaG9DbGllbnQsdyBhcyBJRW5naW5lLFMgYXMgSUVuZ2luZUV2ZW50cyxFIGFzIElFeHBpcmVyLGggYXMgSUpzb25ScGNIaXN0b3J5LHggYXMgSUtleUNoYWluLGEgYXMgSU1lc3NhZ2VUcmFja2VyLG0gYXMgSVBhaXJpbmcsdSBhcyBJUHVibGlzaGVyLGcgYXMgSVJlbGF5ZXIsYiBhcyBJU2lnbkNsaWVudCxDIGFzIElTaWduQ2xpZW50RXZlbnRzLHAgYXMgSVN0b3JlLGQgYXMgSVN1YnNjcmliZXIsSSBhcyBJU3Vic2NyaWJlclRvcGljTWFwLHkgYXMgSVZlcmlmeX07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lcy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJJRXZlbnRzIiwiZSIsImMiLCJFdmVudEVtaXR0ZXIiLCJpIiwibiIsImNvbnN0cnVjdG9yIiwicyIsIm9wdHMiLCJwcm90b2NvbCIsInZlcnNpb24iLCJsIiwidCIsIm8iLCJjb3JlIiwibG9nZ2VyIiwiaCIsInJlY29yZHMiLCJNYXAiLCJhIiwidSIsInJlbGF5ZXIiLCJnIiwicCIsIk0iLCJuYW1lIiwiSSIsIm1hcCIsImQiLCJ4IiwiRSIsIm0iLCJ5IiwicHJvamVjdElkIiwidiIsIkMiLCJiIiwiUyIsInciLCJjbGllbnQiLCJJQ29yZSIsIklDcnlwdG8iLCJJRWNob0NsaWVudCIsIklFbmdpbmUiLCJJRW5naW5lRXZlbnRzIiwiSUV4cGlyZXIiLCJJSnNvblJwY0hpc3RvcnkiLCJJS2V5Q2hhaW4iLCJJTWVzc2FnZVRyYWNrZXIiLCJJUGFpcmluZyIsIklQdWJsaXNoZXIiLCJJUmVsYXllciIsIklTaWduQ2xpZW50IiwiSVNpZ25DbGllbnRFdmVudHMiLCJJU3RvcmUiLCJJU3Vic2NyaWJlciIsIklTdWJzY3JpYmVyVG9waWNNYXAiLCJJVmVyaWZ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/types/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/universal-provider/dist/index.es.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/@walletconnect/universal-provider/dist/index.es.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UniversalProvider: () => (/* binding */ hv),\n/* harmony export */   \"default\": () => (/* binding */ lr)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/sign-client */ \"(ssr)/../../node_modules/@walletconnect/sign-client/dist/index.es.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/../../node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/logger */ \"(ssr)/../../node_modules/@walletconnect/logger/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/jsonrpc-http-connection */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-http-connection/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/jsonrpc-provider */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-provider/dist/esm/index.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/../../node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\n\n\n\n\nconst Ia = \"error\", Wg = \"wss://relay.walletconnect.com\", Fg = \"wc\", Mg = \"universal_provider\", xa = `${Fg}@2:${Mg}:`, qg = \"https://rpc.walletconnect.com/v1/\", Vn = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\"\n};\nvar ge = typeof globalThis < \"u\" ? globalThis :  false ? 0 : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {}, Ui = {\n    exports: {}\n}; /**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */ \n(function(C, u) {\n    (function() {\n        var i, d = \"4.17.21\", P = 200, O = \"Unsupported core-js use. Try https://npms.io/search?q=ponyfill.\", $ = \"Expected a function\", En = \"Invalid `variable` option passed into `_.template`\", zt = \"__lodash_hash_undefined__\", pr = 500, It = \"__lodash_placeholder__\", Ln = 1, Fn = 2, xt = 4, Et = 1, ve = 2, vn = 1, ct = 2, qi = 4, Dn = 8, yt = 16, Hn = 32, St = 64, Mn = 128, Kt = 256, dr = 512, La = 30, Da = \"...\", Ha = 800, Na = 16, Bi = 1, $a = 2, Ua = 3, ht = 1 / 0, kn = 9007199254740991, Wa = 17976931348623157e292, _e = 0 / 0, Nn = 4294967295, Fa = Nn - 1, Ma = Nn >>> 1, qa = [\n            [\n                \"ary\",\n                Mn\n            ],\n            [\n                \"bind\",\n                vn\n            ],\n            [\n                \"bindKey\",\n                ct\n            ],\n            [\n                \"curry\",\n                Dn\n            ],\n            [\n                \"curryRight\",\n                yt\n            ],\n            [\n                \"flip\",\n                dr\n            ],\n            [\n                \"partial\",\n                Hn\n            ],\n            [\n                \"partialRight\",\n                St\n            ],\n            [\n                \"rearg\",\n                Kt\n            ]\n        ], Ot = \"[object Arguments]\", me = \"[object Array]\", Ba = \"[object AsyncFunction]\", Yt = \"[object Boolean]\", Zt = \"[object Date]\", Ga = \"[object DOMException]\", we = \"[object Error]\", Pe = \"[object Function]\", Gi = \"[object GeneratorFunction]\", yn = \"[object Map]\", Jt = \"[object Number]\", za = \"[object Null]\", qn = \"[object Object]\", zi = \"[object Promise]\", Ka = \"[object Proxy]\", Xt = \"[object RegExp]\", Sn = \"[object Set]\", Qt = \"[object String]\", Ae = \"[object Symbol]\", Ya = \"[object Undefined]\", Vt = \"[object WeakMap]\", Za = \"[object WeakSet]\", kt = \"[object ArrayBuffer]\", Rt = \"[object DataView]\", gr = \"[object Float32Array]\", vr = \"[object Float64Array]\", _r = \"[object Int8Array]\", mr = \"[object Int16Array]\", wr = \"[object Int32Array]\", Pr = \"[object Uint8Array]\", Ar = \"[object Uint8ClampedArray]\", Cr = \"[object Uint16Array]\", Ir = \"[object Uint32Array]\", Ja = /\\b__p \\+= '';/g, Xa = /\\b(__p \\+=) '' \\+/g, Qa = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g, Ki = /&(?:amp|lt|gt|quot|#39);/g, Yi = /[&<>\"']/g, Va = RegExp(Ki.source), ka = RegExp(Yi.source), ja = /<%-([\\s\\S]+?)%>/g, no = /<%([\\s\\S]+?)%>/g, Zi = /<%=([\\s\\S]+?)%>/g, to = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/, eo = /^\\w*$/, ro = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, xr = /[\\\\^$.*+?()[\\]{}|]/g, io = RegExp(xr.source), Er = /^\\s+/, so = /\\s/, uo = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/, ao = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/, oo = /,? & /, fo = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g, co = /[()=,{}\\[\\]\\/\\s]/, ho = /\\\\(\\\\)?/g, lo = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g, Ji = /\\w*$/, po = /^[-+]0x[0-9a-f]+$/i, go = /^0b[01]+$/i, vo = /^\\[object .+?Constructor\\]$/, _o = /^0o[0-7]+$/i, mo = /^(?:0|[1-9]\\d*)$/, wo = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g, Ce = /($^)/, Po = /['\\n\\r\\u2028\\u2029\\\\]/g, Ie = \"\\ud800-\\udfff\", Ao = \"\\\\u0300-\\\\u036f\", Co = \"\\\\ufe20-\\\\ufe2f\", Io = \"\\\\u20d0-\\\\u20ff\", Xi = Ao + Co + Io, Qi = \"\\\\u2700-\\\\u27bf\", Vi = \"a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff\", xo = \"\\\\xac\\\\xb1\\\\xd7\\\\xf7\", Eo = \"\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\", yo = \"\\\\u2000-\\\\u206f\", So = \" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\", ki = \"A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde\", ji = \"\\\\ufe0e\\\\ufe0f\", ns = xo + Eo + yo + So, yr = \"['’]\", Oo = \"[\" + Ie + \"]\", ts = \"[\" + ns + \"]\", xe = \"[\" + Xi + \"]\", es = \"\\\\d+\", Ro = \"[\" + Qi + \"]\", rs = \"[\" + Vi + \"]\", is = \"[^\" + Ie + ns + es + Qi + Vi + ki + \"]\", Sr = \"\\ud83c[\\udffb-\\udfff]\", bo = \"(?:\" + xe + \"|\" + Sr + \")\", ss = \"[^\" + Ie + \"]\", Or = \"(?:\\ud83c[\\udde6-\\uddff]){2}\", Rr = \"[\\ud800-\\udbff][\\udc00-\\udfff]\", bt = \"[\" + ki + \"]\", us = \"\\\\u200d\", as = \"(?:\" + rs + \"|\" + is + \")\", To = \"(?:\" + bt + \"|\" + is + \")\", os = \"(?:\" + yr + \"(?:d|ll|m|re|s|t|ve))?\", fs = \"(?:\" + yr + \"(?:D|LL|M|RE|S|T|VE))?\", cs = bo + \"?\", hs = \"[\" + ji + \"]?\", Lo = \"(?:\" + us + \"(?:\" + [\n            ss,\n            Or,\n            Rr\n        ].join(\"|\") + \")\" + hs + cs + \")*\", Do = \"\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])\", Ho = \"\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])\", ls = hs + cs + Lo, No = \"(?:\" + [\n            Ro,\n            Or,\n            Rr\n        ].join(\"|\") + \")\" + ls, $o = \"(?:\" + [\n            ss + xe + \"?\",\n            xe,\n            Or,\n            Rr,\n            Oo\n        ].join(\"|\") + \")\", Uo = RegExp(yr, \"g\"), Wo = RegExp(xe, \"g\"), br = RegExp(Sr + \"(?=\" + Sr + \")|\" + $o + ls, \"g\"), Fo = RegExp([\n            bt + \"?\" + rs + \"+\" + os + \"(?=\" + [\n                ts,\n                bt,\n                \"$\"\n            ].join(\"|\") + \")\",\n            To + \"+\" + fs + \"(?=\" + [\n                ts,\n                bt + as,\n                \"$\"\n            ].join(\"|\") + \")\",\n            bt + \"?\" + as + \"+\" + os,\n            bt + \"+\" + fs,\n            Ho,\n            Do,\n            es,\n            No\n        ].join(\"|\"), \"g\"), Mo = RegExp(\"[\" + us + Ie + Xi + ji + \"]\"), qo = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, Bo = [\n            \"Array\",\n            \"Buffer\",\n            \"DataView\",\n            \"Date\",\n            \"Error\",\n            \"Float32Array\",\n            \"Float64Array\",\n            \"Function\",\n            \"Int8Array\",\n            \"Int16Array\",\n            \"Int32Array\",\n            \"Map\",\n            \"Math\",\n            \"Object\",\n            \"Promise\",\n            \"RegExp\",\n            \"Set\",\n            \"String\",\n            \"Symbol\",\n            \"TypeError\",\n            \"Uint8Array\",\n            \"Uint8ClampedArray\",\n            \"Uint16Array\",\n            \"Uint32Array\",\n            \"WeakMap\",\n            \"_\",\n            \"clearTimeout\",\n            \"isFinite\",\n            \"parseInt\",\n            \"setTimeout\"\n        ], Go = -1, B = {};\n        B[gr] = B[vr] = B[_r] = B[mr] = B[wr] = B[Pr] = B[Ar] = B[Cr] = B[Ir] = !0, B[Ot] = B[me] = B[kt] = B[Yt] = B[Rt] = B[Zt] = B[we] = B[Pe] = B[yn] = B[Jt] = B[qn] = B[Xt] = B[Sn] = B[Qt] = B[Vt] = !1;\n        var q = {};\n        q[Ot] = q[me] = q[kt] = q[Rt] = q[Yt] = q[Zt] = q[gr] = q[vr] = q[_r] = q[mr] = q[wr] = q[yn] = q[Jt] = q[qn] = q[Xt] = q[Sn] = q[Qt] = q[Ae] = q[Pr] = q[Ar] = q[Cr] = q[Ir] = !0, q[we] = q[Pe] = q[Vt] = !1;\n        var zo = {\n            À: \"A\",\n            Á: \"A\",\n            Â: \"A\",\n            Ã: \"A\",\n            Ä: \"A\",\n            Å: \"A\",\n            à: \"a\",\n            á: \"a\",\n            â: \"a\",\n            ã: \"a\",\n            ä: \"a\",\n            å: \"a\",\n            Ç: \"C\",\n            ç: \"c\",\n            Ð: \"D\",\n            ð: \"d\",\n            È: \"E\",\n            É: \"E\",\n            Ê: \"E\",\n            Ë: \"E\",\n            è: \"e\",\n            é: \"e\",\n            ê: \"e\",\n            ë: \"e\",\n            Ì: \"I\",\n            Í: \"I\",\n            Î: \"I\",\n            Ï: \"I\",\n            ì: \"i\",\n            í: \"i\",\n            î: \"i\",\n            ï: \"i\",\n            Ñ: \"N\",\n            ñ: \"n\",\n            Ò: \"O\",\n            Ó: \"O\",\n            Ô: \"O\",\n            Õ: \"O\",\n            Ö: \"O\",\n            Ø: \"O\",\n            ò: \"o\",\n            ó: \"o\",\n            ô: \"o\",\n            õ: \"o\",\n            ö: \"o\",\n            ø: \"o\",\n            Ù: \"U\",\n            Ú: \"U\",\n            Û: \"U\",\n            Ü: \"U\",\n            ù: \"u\",\n            ú: \"u\",\n            û: \"u\",\n            ü: \"u\",\n            Ý: \"Y\",\n            ý: \"y\",\n            ÿ: \"y\",\n            Æ: \"Ae\",\n            æ: \"ae\",\n            Þ: \"Th\",\n            þ: \"th\",\n            ß: \"ss\",\n            Ā: \"A\",\n            Ă: \"A\",\n            Ą: \"A\",\n            ā: \"a\",\n            ă: \"a\",\n            ą: \"a\",\n            Ć: \"C\",\n            Ĉ: \"C\",\n            Ċ: \"C\",\n            Č: \"C\",\n            ć: \"c\",\n            ĉ: \"c\",\n            ċ: \"c\",\n            č: \"c\",\n            Ď: \"D\",\n            Đ: \"D\",\n            ď: \"d\",\n            đ: \"d\",\n            Ē: \"E\",\n            Ĕ: \"E\",\n            Ė: \"E\",\n            Ę: \"E\",\n            Ě: \"E\",\n            ē: \"e\",\n            ĕ: \"e\",\n            ė: \"e\",\n            ę: \"e\",\n            ě: \"e\",\n            Ĝ: \"G\",\n            Ğ: \"G\",\n            Ġ: \"G\",\n            Ģ: \"G\",\n            ĝ: \"g\",\n            ğ: \"g\",\n            ġ: \"g\",\n            ģ: \"g\",\n            Ĥ: \"H\",\n            Ħ: \"H\",\n            ĥ: \"h\",\n            ħ: \"h\",\n            Ĩ: \"I\",\n            Ī: \"I\",\n            Ĭ: \"I\",\n            Į: \"I\",\n            İ: \"I\",\n            ĩ: \"i\",\n            ī: \"i\",\n            ĭ: \"i\",\n            į: \"i\",\n            ı: \"i\",\n            Ĵ: \"J\",\n            ĵ: \"j\",\n            Ķ: \"K\",\n            ķ: \"k\",\n            ĸ: \"k\",\n            Ĺ: \"L\",\n            Ļ: \"L\",\n            Ľ: \"L\",\n            Ŀ: \"L\",\n            Ł: \"L\",\n            ĺ: \"l\",\n            ļ: \"l\",\n            ľ: \"l\",\n            ŀ: \"l\",\n            ł: \"l\",\n            Ń: \"N\",\n            Ņ: \"N\",\n            Ň: \"N\",\n            Ŋ: \"N\",\n            ń: \"n\",\n            ņ: \"n\",\n            ň: \"n\",\n            ŋ: \"n\",\n            Ō: \"O\",\n            Ŏ: \"O\",\n            Ő: \"O\",\n            ō: \"o\",\n            ŏ: \"o\",\n            ő: \"o\",\n            Ŕ: \"R\",\n            Ŗ: \"R\",\n            Ř: \"R\",\n            ŕ: \"r\",\n            ŗ: \"r\",\n            ř: \"r\",\n            Ś: \"S\",\n            Ŝ: \"S\",\n            Ş: \"S\",\n            Š: \"S\",\n            ś: \"s\",\n            ŝ: \"s\",\n            ş: \"s\",\n            š: \"s\",\n            Ţ: \"T\",\n            Ť: \"T\",\n            Ŧ: \"T\",\n            ţ: \"t\",\n            ť: \"t\",\n            ŧ: \"t\",\n            Ũ: \"U\",\n            Ū: \"U\",\n            Ŭ: \"U\",\n            Ů: \"U\",\n            Ű: \"U\",\n            Ų: \"U\",\n            ũ: \"u\",\n            ū: \"u\",\n            ŭ: \"u\",\n            ů: \"u\",\n            ű: \"u\",\n            ų: \"u\",\n            Ŵ: \"W\",\n            ŵ: \"w\",\n            Ŷ: \"Y\",\n            ŷ: \"y\",\n            Ÿ: \"Y\",\n            Ź: \"Z\",\n            Ż: \"Z\",\n            Ž: \"Z\",\n            ź: \"z\",\n            ż: \"z\",\n            ž: \"z\",\n            Ĳ: \"IJ\",\n            ĳ: \"ij\",\n            Œ: \"Oe\",\n            œ: \"oe\",\n            ŉ: \"'n\",\n            ſ: \"s\"\n        }, Ko = {\n            \"&\": \"&amp;\",\n            \"<\": \"&lt;\",\n            \">\": \"&gt;\",\n            '\"': \"&quot;\",\n            \"'\": \"&#39;\"\n        }, Yo = {\n            \"&amp;\": \"&\",\n            \"&lt;\": \"<\",\n            \"&gt;\": \">\",\n            \"&quot;\": '\"',\n            \"&#39;\": \"'\"\n        }, Zo = {\n            \"\\\\\": \"\\\\\",\n            \"'\": \"'\",\n            \"\\n\": \"n\",\n            \"\\r\": \"r\",\n            \"\\u2028\": \"u2028\",\n            \"\\u2029\": \"u2029\"\n        }, Jo = parseFloat, Xo = parseInt, ps = typeof ge == \"object\" && ge && ge.Object === Object && ge, Qo = typeof self == \"object\" && self && self.Object === Object && self, k = ps || Qo || Function(\"return this\")(), Tr = u && !u.nodeType && u, lt = Tr && !0 && C && !C.nodeType && C, ds = lt && lt.exports === Tr, Lr = ds && ps.process, _n = function() {\n            try {\n                var h = lt && lt.require && lt.require(\"util\").types;\n                return h || Lr && Lr.binding && Lr.binding(\"util\");\n            } catch  {}\n        }(), gs = _n && _n.isArrayBuffer, vs = _n && _n.isDate, _s = _n && _n.isMap, ms = _n && _n.isRegExp, ws = _n && _n.isSet, Ps = _n && _n.isTypedArray;\n        function cn(h, g, p) {\n            switch(p.length){\n                case 0:\n                    return h.call(g);\n                case 1:\n                    return h.call(g, p[0]);\n                case 2:\n                    return h.call(g, p[0], p[1]);\n                case 3:\n                    return h.call(g, p[0], p[1], p[2]);\n            }\n            return h.apply(g, p);\n        }\n        function Vo(h, g, p, A) {\n            for(var S = -1, U = h == null ? 0 : h.length; ++S < U;){\n                var X = h[S];\n                g(A, X, p(X), h);\n            }\n            return A;\n        }\n        function mn(h, g) {\n            for(var p = -1, A = h == null ? 0 : h.length; ++p < A && g(h[p], p, h) !== !1;);\n            return h;\n        }\n        function ko(h, g) {\n            for(var p = h == null ? 0 : h.length; p-- && g(h[p], p, h) !== !1;);\n            return h;\n        }\n        function As(h, g) {\n            for(var p = -1, A = h == null ? 0 : h.length; ++p < A;)if (!g(h[p], p, h)) return !1;\n            return !0;\n        }\n        function jn(h, g) {\n            for(var p = -1, A = h == null ? 0 : h.length, S = 0, U = []; ++p < A;){\n                var X = h[p];\n                g(X, p, h) && (U[S++] = X);\n            }\n            return U;\n        }\n        function Ee(h, g) {\n            var p = h == null ? 0 : h.length;\n            return !!p && Tt(h, g, 0) > -1;\n        }\n        function Dr(h, g, p) {\n            for(var A = -1, S = h == null ? 0 : h.length; ++A < S;)if (p(g, h[A])) return !0;\n            return !1;\n        }\n        function G(h, g) {\n            for(var p = -1, A = h == null ? 0 : h.length, S = Array(A); ++p < A;)S[p] = g(h[p], p, h);\n            return S;\n        }\n        function nt(h, g) {\n            for(var p = -1, A = g.length, S = h.length; ++p < A;)h[S + p] = g[p];\n            return h;\n        }\n        function Hr(h, g, p, A) {\n            var S = -1, U = h == null ? 0 : h.length;\n            for(A && U && (p = h[++S]); ++S < U;)p = g(p, h[S], S, h);\n            return p;\n        }\n        function jo(h, g, p, A) {\n            var S = h == null ? 0 : h.length;\n            for(A && S && (p = h[--S]); S--;)p = g(p, h[S], S, h);\n            return p;\n        }\n        function Nr(h, g) {\n            for(var p = -1, A = h == null ? 0 : h.length; ++p < A;)if (g(h[p], p, h)) return !0;\n            return !1;\n        }\n        var nf = $r(\"length\");\n        function tf(h) {\n            return h.split(\"\");\n        }\n        function ef(h) {\n            return h.match(fo) || [];\n        }\n        function Cs(h, g, p) {\n            var A;\n            return p(h, function(S, U, X) {\n                if (g(S, U, X)) return A = U, !1;\n            }), A;\n        }\n        function ye(h, g, p, A) {\n            for(var S = h.length, U = p + (A ? 1 : -1); A ? U-- : ++U < S;)if (g(h[U], U, h)) return U;\n            return -1;\n        }\n        function Tt(h, g, p) {\n            return g === g ? gf(h, g, p) : ye(h, Is, p);\n        }\n        function rf(h, g, p, A) {\n            for(var S = p - 1, U = h.length; ++S < U;)if (A(h[S], g)) return S;\n            return -1;\n        }\n        function Is(h) {\n            return h !== h;\n        }\n        function xs(h, g) {\n            var p = h == null ? 0 : h.length;\n            return p ? Wr(h, g) / p : _e;\n        }\n        function $r(h) {\n            return function(g) {\n                return g == null ? i : g[h];\n            };\n        }\n        function Ur(h) {\n            return function(g) {\n                return h == null ? i : h[g];\n            };\n        }\n        function Es(h, g, p, A, S) {\n            return S(h, function(U, X, M) {\n                p = A ? (A = !1, U) : g(p, U, X, M);\n            }), p;\n        }\n        function sf(h, g) {\n            var p = h.length;\n            for(h.sort(g); p--;)h[p] = h[p].value;\n            return h;\n        }\n        function Wr(h, g) {\n            for(var p, A = -1, S = h.length; ++A < S;){\n                var U = g(h[A]);\n                U !== i && (p = p === i ? U : p + U);\n            }\n            return p;\n        }\n        function Fr(h, g) {\n            for(var p = -1, A = Array(h); ++p < h;)A[p] = g(p);\n            return A;\n        }\n        function uf(h, g) {\n            return G(g, function(p) {\n                return [\n                    p,\n                    h[p]\n                ];\n            });\n        }\n        function ys(h) {\n            return h && h.slice(0, bs(h) + 1).replace(Er, \"\");\n        }\n        function hn(h) {\n            return function(g) {\n                return h(g);\n            };\n        }\n        function Mr(h, g) {\n            return G(g, function(p) {\n                return h[p];\n            });\n        }\n        function jt(h, g) {\n            return h.has(g);\n        }\n        function Ss(h, g) {\n            for(var p = -1, A = h.length; ++p < A && Tt(g, h[p], 0) > -1;);\n            return p;\n        }\n        function Os(h, g) {\n            for(var p = h.length; p-- && Tt(g, h[p], 0) > -1;);\n            return p;\n        }\n        function af(h, g) {\n            for(var p = h.length, A = 0; p--;)h[p] === g && ++A;\n            return A;\n        }\n        var of = Ur(zo), ff = Ur(Ko);\n        function cf(h) {\n            return \"\\\\\" + Zo[h];\n        }\n        function hf(h, g) {\n            return h == null ? i : h[g];\n        }\n        function Lt(h) {\n            return Mo.test(h);\n        }\n        function lf(h) {\n            return qo.test(h);\n        }\n        function pf(h) {\n            for(var g, p = []; !(g = h.next()).done;)p.push(g.value);\n            return p;\n        }\n        function qr(h) {\n            var g = -1, p = Array(h.size);\n            return h.forEach(function(A, S) {\n                p[++g] = [\n                    S,\n                    A\n                ];\n            }), p;\n        }\n        function Rs(h, g) {\n            return function(p) {\n                return h(g(p));\n            };\n        }\n        function tt(h, g) {\n            for(var p = -1, A = h.length, S = 0, U = []; ++p < A;){\n                var X = h[p];\n                (X === g || X === It) && (h[p] = It, U[S++] = p);\n            }\n            return U;\n        }\n        function Se(h) {\n            var g = -1, p = Array(h.size);\n            return h.forEach(function(A) {\n                p[++g] = A;\n            }), p;\n        }\n        function df(h) {\n            var g = -1, p = Array(h.size);\n            return h.forEach(function(A) {\n                p[++g] = [\n                    A,\n                    A\n                ];\n            }), p;\n        }\n        function gf(h, g, p) {\n            for(var A = p - 1, S = h.length; ++A < S;)if (h[A] === g) return A;\n            return -1;\n        }\n        function vf(h, g, p) {\n            for(var A = p + 1; A--;)if (h[A] === g) return A;\n            return A;\n        }\n        function Dt(h) {\n            return Lt(h) ? mf(h) : nf(h);\n        }\n        function On(h) {\n            return Lt(h) ? wf(h) : tf(h);\n        }\n        function bs(h) {\n            for(var g = h.length; g-- && so.test(h.charAt(g)););\n            return g;\n        }\n        var _f = Ur(Yo);\n        function mf(h) {\n            for(var g = br.lastIndex = 0; br.test(h);)++g;\n            return g;\n        }\n        function wf(h) {\n            return h.match(br) || [];\n        }\n        function Pf(h) {\n            return h.match(Fo) || [];\n        }\n        var Af = function h(g) {\n            g = g == null ? k : Ht.defaults(k.Object(), g, Ht.pick(k, Bo));\n            var p = g.Array, A = g.Date, S = g.Error, U = g.Function, X = g.Math, M = g.Object, Br = g.RegExp, Cf = g.String, wn = g.TypeError, Oe = p.prototype, If = U.prototype, Nt = M.prototype, Re = g[\"__core-js_shared__\"], be = If.toString, F = Nt.hasOwnProperty, xf = 0, Ts = function() {\n                var n = /[^.]+$/.exec(Re && Re.keys && Re.keys.IE_PROTO || \"\");\n                return n ? \"Symbol(src)_1.\" + n : \"\";\n            }(), Te = Nt.toString, Ef = be.call(M), yf = k._, Sf = Br(\"^\" + be.call(F).replace(xr, \"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") + \"$\"), Le = ds ? g.Buffer : i, et = g.Symbol, De = g.Uint8Array, Ls = Le ? Le.allocUnsafe : i, He = Rs(M.getPrototypeOf, M), Ds = M.create, Hs = Nt.propertyIsEnumerable, Ne = Oe.splice, Ns = et ? et.isConcatSpreadable : i, ne = et ? et.iterator : i, pt = et ? et.toStringTag : i, $e = function() {\n                try {\n                    var n = mt(M, \"defineProperty\");\n                    return n({}, \"\", {}), n;\n                } catch  {}\n            }(), Of = g.clearTimeout !== k.clearTimeout && g.clearTimeout, Rf = A && A.now !== k.Date.now && A.now, bf = g.setTimeout !== k.setTimeout && g.setTimeout, Ue = X.ceil, We = X.floor, Gr = M.getOwnPropertySymbols, Tf = Le ? Le.isBuffer : i, $s = g.isFinite, Lf = Oe.join, Df = Rs(M.keys, M), Q = X.max, nn = X.min, Hf = A.now, Nf = g.parseInt, Us = X.random, $f = Oe.reverse, zr = mt(g, \"DataView\"), te = mt(g, \"Map\"), Kr = mt(g, \"Promise\"), $t = mt(g, \"Set\"), ee = mt(g, \"WeakMap\"), re = mt(M, \"create\"), Fe = ee && new ee, Ut = {}, Uf = wt(zr), Wf = wt(te), Ff = wt(Kr), Mf = wt($t), qf = wt(ee), Me = et ? et.prototype : i, ie = Me ? Me.valueOf : i, Ws = Me ? Me.toString : i;\n            function a(n) {\n                if (Y(n) && !R(n) && !(n instanceof H)) {\n                    if (n instanceof Pn) return n;\n                    if (F.call(n, \"__wrapped__\")) return Fu(n);\n                }\n                return new Pn(n);\n            }\n            var Wt = function() {\n                function n() {}\n                return function(t) {\n                    if (!K(t)) return {};\n                    if (Ds) return Ds(t);\n                    n.prototype = t;\n                    var e = new n;\n                    return n.prototype = i, e;\n                };\n            }();\n            function qe() {}\n            function Pn(n, t) {\n                this.__wrapped__ = n, this.__actions__ = [], this.__chain__ = !!t, this.__index__ = 0, this.__values__ = i;\n            }\n            a.templateSettings = {\n                escape: ja,\n                evaluate: no,\n                interpolate: Zi,\n                variable: \"\",\n                imports: {\n                    _: a\n                }\n            }, a.prototype = qe.prototype, a.prototype.constructor = a, Pn.prototype = Wt(qe.prototype), Pn.prototype.constructor = Pn;\n            function H(n) {\n                this.__wrapped__ = n, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = Nn, this.__views__ = [];\n            }\n            function Bf() {\n                var n = new H(this.__wrapped__);\n                return n.__actions__ = un(this.__actions__), n.__dir__ = this.__dir__, n.__filtered__ = this.__filtered__, n.__iteratees__ = un(this.__iteratees__), n.__takeCount__ = this.__takeCount__, n.__views__ = un(this.__views__), n;\n            }\n            function Gf() {\n                if (this.__filtered__) {\n                    var n = new H(this);\n                    n.__dir__ = -1, n.__filtered__ = !0;\n                } else n = this.clone(), n.__dir__ *= -1;\n                return n;\n            }\n            function zf() {\n                var n = this.__wrapped__.value(), t = this.__dir__, e = R(n), r = t < 0, s = e ? n.length : 0, o = eh(0, s, this.__views__), f = o.start, c = o.end, l = c - f, v = r ? c : f - 1, _ = this.__iteratees__, m = _.length, w = 0, I = nn(l, this.__takeCount__);\n                if (!e || !r && s == l && I == l) return ou(n, this.__actions__);\n                var E = [];\n                n: for(; l-- && w < I;){\n                    v += t;\n                    for(var T = -1, y = n[v]; ++T < m;){\n                        var D = _[T], N = D.iteratee, dn = D.type, sn = N(y);\n                        if (dn == $a) y = sn;\n                        else if (!sn) {\n                            if (dn == Bi) continue n;\n                            break n;\n                        }\n                    }\n                    E[w++] = y;\n                }\n                return E;\n            }\n            H.prototype = Wt(qe.prototype), H.prototype.constructor = H;\n            function dt(n) {\n                var t = -1, e = n == null ? 0 : n.length;\n                for(this.clear(); ++t < e;){\n                    var r = n[t];\n                    this.set(r[0], r[1]);\n                }\n            }\n            function Kf() {\n                this.__data__ = re ? re(null) : {}, this.size = 0;\n            }\n            function Yf(n) {\n                var t = this.has(n) && delete this.__data__[n];\n                return this.size -= t ? 1 : 0, t;\n            }\n            function Zf(n) {\n                var t = this.__data__;\n                if (re) {\n                    var e = t[n];\n                    return e === zt ? i : e;\n                }\n                return F.call(t, n) ? t[n] : i;\n            }\n            function Jf(n) {\n                var t = this.__data__;\n                return re ? t[n] !== i : F.call(t, n);\n            }\n            function Xf(n, t) {\n                var e = this.__data__;\n                return this.size += this.has(n) ? 0 : 1, e[n] = re && t === i ? zt : t, this;\n            }\n            dt.prototype.clear = Kf, dt.prototype.delete = Yf, dt.prototype.get = Zf, dt.prototype.has = Jf, dt.prototype.set = Xf;\n            function Bn(n) {\n                var t = -1, e = n == null ? 0 : n.length;\n                for(this.clear(); ++t < e;){\n                    var r = n[t];\n                    this.set(r[0], r[1]);\n                }\n            }\n            function Qf() {\n                this.__data__ = [], this.size = 0;\n            }\n            function Vf(n) {\n                var t = this.__data__, e = Be(t, n);\n                if (e < 0) return !1;\n                var r = t.length - 1;\n                return e == r ? t.pop() : Ne.call(t, e, 1), --this.size, !0;\n            }\n            function kf(n) {\n                var t = this.__data__, e = Be(t, n);\n                return e < 0 ? i : t[e][1];\n            }\n            function jf(n) {\n                return Be(this.__data__, n) > -1;\n            }\n            function nc(n, t) {\n                var e = this.__data__, r = Be(e, n);\n                return r < 0 ? (++this.size, e.push([\n                    n,\n                    t\n                ])) : e[r][1] = t, this;\n            }\n            Bn.prototype.clear = Qf, Bn.prototype.delete = Vf, Bn.prototype.get = kf, Bn.prototype.has = jf, Bn.prototype.set = nc;\n            function Gn(n) {\n                var t = -1, e = n == null ? 0 : n.length;\n                for(this.clear(); ++t < e;){\n                    var r = n[t];\n                    this.set(r[0], r[1]);\n                }\n            }\n            function tc() {\n                this.size = 0, this.__data__ = {\n                    hash: new dt,\n                    map: new (te || Bn),\n                    string: new dt\n                };\n            }\n            function ec(n) {\n                var t = nr(this, n).delete(n);\n                return this.size -= t ? 1 : 0, t;\n            }\n            function rc(n) {\n                return nr(this, n).get(n);\n            }\n            function ic(n) {\n                return nr(this, n).has(n);\n            }\n            function sc(n, t) {\n                var e = nr(this, n), r = e.size;\n                return e.set(n, t), this.size += e.size == r ? 0 : 1, this;\n            }\n            Gn.prototype.clear = tc, Gn.prototype.delete = ec, Gn.prototype.get = rc, Gn.prototype.has = ic, Gn.prototype.set = sc;\n            function gt(n) {\n                var t = -1, e = n == null ? 0 : n.length;\n                for(this.__data__ = new Gn; ++t < e;)this.add(n[t]);\n            }\n            function uc(n) {\n                return this.__data__.set(n, zt), this;\n            }\n            function ac(n) {\n                return this.__data__.has(n);\n            }\n            gt.prototype.add = gt.prototype.push = uc, gt.prototype.has = ac;\n            function Rn(n) {\n                var t = this.__data__ = new Bn(n);\n                this.size = t.size;\n            }\n            function oc() {\n                this.__data__ = new Bn, this.size = 0;\n            }\n            function fc(n) {\n                var t = this.__data__, e = t.delete(n);\n                return this.size = t.size, e;\n            }\n            function cc(n) {\n                return this.__data__.get(n);\n            }\n            function hc(n) {\n                return this.__data__.has(n);\n            }\n            function lc(n, t) {\n                var e = this.__data__;\n                if (e instanceof Bn) {\n                    var r = e.__data__;\n                    if (!te || r.length < P - 1) return r.push([\n                        n,\n                        t\n                    ]), this.size = ++e.size, this;\n                    e = this.__data__ = new Gn(r);\n                }\n                return e.set(n, t), this.size = e.size, this;\n            }\n            Rn.prototype.clear = oc, Rn.prototype.delete = fc, Rn.prototype.get = cc, Rn.prototype.has = hc, Rn.prototype.set = lc;\n            function Fs(n, t) {\n                var e = R(n), r = !e && Pt(n), s = !e && !r && at(n), o = !e && !r && !s && Bt(n), f = e || r || s || o, c = f ? Fr(n.length, Cf) : [], l = c.length;\n                for(var v in n)(t || F.call(n, v)) && !(f && (v == \"length\" || s && (v == \"offset\" || v == \"parent\") || o && (v == \"buffer\" || v == \"byteLength\" || v == \"byteOffset\") || Zn(v, l))) && c.push(v);\n                return c;\n            }\n            function Ms(n) {\n                var t = n.length;\n                return t ? n[ei(0, t - 1)] : i;\n            }\n            function pc(n, t) {\n                return tr(un(n), vt(t, 0, n.length));\n            }\n            function dc(n) {\n                return tr(un(n));\n            }\n            function Yr(n, t, e) {\n                (e !== i && !bn(n[t], e) || e === i && !(t in n)) && zn(n, t, e);\n            }\n            function se(n, t, e) {\n                var r = n[t];\n                (!(F.call(n, t) && bn(r, e)) || e === i && !(t in n)) && zn(n, t, e);\n            }\n            function Be(n, t) {\n                for(var e = n.length; e--;)if (bn(n[e][0], t)) return e;\n                return -1;\n            }\n            function gc(n, t, e, r) {\n                return rt(n, function(s, o, f) {\n                    t(r, s, e(s), f);\n                }), r;\n            }\n            function qs(n, t) {\n                return n && Un(t, V(t), n);\n            }\n            function vc(n, t) {\n                return n && Un(t, on(t), n);\n            }\n            function zn(n, t, e) {\n                t == \"__proto__\" && $e ? $e(n, t, {\n                    configurable: !0,\n                    enumerable: !0,\n                    value: e,\n                    writable: !0\n                }) : n[t] = e;\n            }\n            function Zr(n, t) {\n                for(var e = -1, r = t.length, s = p(r), o = n == null; ++e < r;)s[e] = o ? i : Si(n, t[e]);\n                return s;\n            }\n            function vt(n, t, e) {\n                return n === n && (e !== i && (n = n <= e ? n : e), t !== i && (n = n >= t ? n : t)), n;\n            }\n            function An(n, t, e, r, s, o) {\n                var f, c = t & Ln, l = t & Fn, v = t & xt;\n                if (e && (f = s ? e(n, r, s, o) : e(n)), f !== i) return f;\n                if (!K(n)) return n;\n                var _ = R(n);\n                if (_) {\n                    if (f = ih(n), !c) return un(n, f);\n                } else {\n                    var m = tn(n), w = m == Pe || m == Gi;\n                    if (at(n)) return hu(n, c);\n                    if (m == qn || m == Ot || w && !s) {\n                        if (f = l || w ? {} : bu(n), !c) return l ? Zc(n, vc(f, n)) : Yc(n, qs(f, n));\n                    } else {\n                        if (!q[m]) return s ? n : {};\n                        f = sh(n, m, c);\n                    }\n                }\n                o || (o = new Rn);\n                var I = o.get(n);\n                if (I) return I;\n                o.set(n, f), sa(n) ? n.forEach(function(y) {\n                    f.add(An(y, t, e, y, n, o));\n                }) : ra(n) && n.forEach(function(y, D) {\n                    f.set(D, An(y, t, e, D, n, o));\n                });\n                var E = v ? l ? pi : li : l ? on : V, T = _ ? i : E(n);\n                return mn(T || n, function(y, D) {\n                    T && (D = y, y = n[D]), se(f, D, An(y, t, e, D, n, o));\n                }), f;\n            }\n            function _c(n) {\n                var t = V(n);\n                return function(e) {\n                    return Bs(e, n, t);\n                };\n            }\n            function Bs(n, t, e) {\n                var r = e.length;\n                if (n == null) return !r;\n                for(n = M(n); r--;){\n                    var s = e[r], o = t[s], f = n[s];\n                    if (f === i && !(s in n) || !o(f)) return !1;\n                }\n                return !0;\n            }\n            function Gs(n, t, e) {\n                if (typeof n != \"function\") throw new wn($);\n                return le(function() {\n                    n.apply(i, e);\n                }, t);\n            }\n            function ue(n, t, e, r) {\n                var s = -1, o = Ee, f = !0, c = n.length, l = [], v = t.length;\n                if (!c) return l;\n                e && (t = G(t, hn(e))), r ? (o = Dr, f = !1) : t.length >= P && (o = jt, f = !1, t = new gt(t));\n                n: for(; ++s < c;){\n                    var _ = n[s], m = e == null ? _ : e(_);\n                    if (_ = r || _ !== 0 ? _ : 0, f && m === m) {\n                        for(var w = v; w--;)if (t[w] === m) continue n;\n                        l.push(_);\n                    } else o(t, m, r) || l.push(_);\n                }\n                return l;\n            }\n            var rt = vu($n), zs = vu(Xr, !0);\n            function mc(n, t) {\n                var e = !0;\n                return rt(n, function(r, s, o) {\n                    return e = !!t(r, s, o), e;\n                }), e;\n            }\n            function Ge(n, t, e) {\n                for(var r = -1, s = n.length; ++r < s;){\n                    var o = n[r], f = t(o);\n                    if (f != null && (c === i ? f === f && !pn(f) : e(f, c))) var c = f, l = o;\n                }\n                return l;\n            }\n            function wc(n, t, e, r) {\n                var s = n.length;\n                for(e = b(e), e < 0 && (e = -e > s ? 0 : s + e), r = r === i || r > s ? s : b(r), r < 0 && (r += s), r = e > r ? 0 : aa(r); e < r;)n[e++] = t;\n                return n;\n            }\n            function Ks(n, t) {\n                var e = [];\n                return rt(n, function(r, s, o) {\n                    t(r, s, o) && e.push(r);\n                }), e;\n            }\n            function j(n, t, e, r, s) {\n                var o = -1, f = n.length;\n                for(e || (e = ah), s || (s = []); ++o < f;){\n                    var c = n[o];\n                    t > 0 && e(c) ? t > 1 ? j(c, t - 1, e, r, s) : nt(s, c) : r || (s[s.length] = c);\n                }\n                return s;\n            }\n            var Jr = _u(), Ys = _u(!0);\n            function $n(n, t) {\n                return n && Jr(n, t, V);\n            }\n            function Xr(n, t) {\n                return n && Ys(n, t, V);\n            }\n            function ze(n, t) {\n                return jn(t, function(e) {\n                    return Jn(n[e]);\n                });\n            }\n            function _t(n, t) {\n                t = st(t, n);\n                for(var e = 0, r = t.length; n != null && e < r;)n = n[Wn(t[e++])];\n                return e && e == r ? n : i;\n            }\n            function Zs(n, t, e) {\n                var r = t(n);\n                return R(n) ? r : nt(r, e(n));\n            }\n            function en(n) {\n                return n == null ? n === i ? Ya : za : pt && pt in M(n) ? th(n) : dh(n);\n            }\n            function Qr(n, t) {\n                return n > t;\n            }\n            function Pc(n, t) {\n                return n != null && F.call(n, t);\n            }\n            function Ac(n, t) {\n                return n != null && t in M(n);\n            }\n            function Cc(n, t, e) {\n                return n >= nn(t, e) && n < Q(t, e);\n            }\n            function Vr(n, t, e) {\n                for(var r = e ? Dr : Ee, s = n[0].length, o = n.length, f = o, c = p(o), l = 1 / 0, v = []; f--;){\n                    var _ = n[f];\n                    f && t && (_ = G(_, hn(t))), l = nn(_.length, l), c[f] = !e && (t || s >= 120 && _.length >= 120) ? new gt(f && _) : i;\n                }\n                _ = n[0];\n                var m = -1, w = c[0];\n                n: for(; ++m < s && v.length < l;){\n                    var I = _[m], E = t ? t(I) : I;\n                    if (I = e || I !== 0 ? I : 0, !(w ? jt(w, E) : r(v, E, e))) {\n                        for(f = o; --f;){\n                            var T = c[f];\n                            if (!(T ? jt(T, E) : r(n[f], E, e))) continue n;\n                        }\n                        w && w.push(E), v.push(I);\n                    }\n                }\n                return v;\n            }\n            function Ic(n, t, e, r) {\n                return $n(n, function(s, o, f) {\n                    t(r, e(s), o, f);\n                }), r;\n            }\n            function ae(n, t, e) {\n                t = st(t, n), n = Hu(n, t);\n                var r = n == null ? n : n[Wn(In(t))];\n                return r == null ? i : cn(r, n, e);\n            }\n            function Js(n) {\n                return Y(n) && en(n) == Ot;\n            }\n            function xc(n) {\n                return Y(n) && en(n) == kt;\n            }\n            function Ec(n) {\n                return Y(n) && en(n) == Zt;\n            }\n            function oe(n, t, e, r, s) {\n                return n === t ? !0 : n == null || t == null || !Y(n) && !Y(t) ? n !== n && t !== t : yc(n, t, e, r, oe, s);\n            }\n            function yc(n, t, e, r, s, o) {\n                var f = R(n), c = R(t), l = f ? me : tn(n), v = c ? me : tn(t);\n                l = l == Ot ? qn : l, v = v == Ot ? qn : v;\n                var _ = l == qn, m = v == qn, w = l == v;\n                if (w && at(n)) {\n                    if (!at(t)) return !1;\n                    f = !0, _ = !1;\n                }\n                if (w && !_) return o || (o = new Rn), f || Bt(n) ? Su(n, t, e, r, s, o) : jc(n, t, l, e, r, s, o);\n                if (!(e & Et)) {\n                    var I = _ && F.call(n, \"__wrapped__\"), E = m && F.call(t, \"__wrapped__\");\n                    if (I || E) {\n                        var T = I ? n.value() : n, y = E ? t.value() : t;\n                        return o || (o = new Rn), s(T, y, e, r, o);\n                    }\n                }\n                return w ? (o || (o = new Rn), nh(n, t, e, r, s, o)) : !1;\n            }\n            function Sc(n) {\n                return Y(n) && tn(n) == yn;\n            }\n            function kr(n, t, e, r) {\n                var s = e.length, o = s, f = !r;\n                if (n == null) return !o;\n                for(n = M(n); s--;){\n                    var c = e[s];\n                    if (f && c[2] ? c[1] !== n[c[0]] : !(c[0] in n)) return !1;\n                }\n                for(; ++s < o;){\n                    c = e[s];\n                    var l = c[0], v = n[l], _ = c[1];\n                    if (f && c[2]) {\n                        if (v === i && !(l in n)) return !1;\n                    } else {\n                        var m = new Rn;\n                        if (r) var w = r(v, _, l, n, t, m);\n                        if (!(w === i ? oe(_, v, Et | ve, r, m) : w)) return !1;\n                    }\n                }\n                return !0;\n            }\n            function Xs(n) {\n                if (!K(n) || fh(n)) return !1;\n                var t = Jn(n) ? Sf : vo;\n                return t.test(wt(n));\n            }\n            function Oc(n) {\n                return Y(n) && en(n) == Xt;\n            }\n            function Rc(n) {\n                return Y(n) && tn(n) == Sn;\n            }\n            function bc(n) {\n                return Y(n) && ar(n.length) && !!B[en(n)];\n            }\n            function Qs(n) {\n                return typeof n == \"function\" ? n : n == null ? fn : typeof n == \"object\" ? R(n) ? js(n[0], n[1]) : ks(n) : ma(n);\n            }\n            function jr(n) {\n                if (!he(n)) return Df(n);\n                var t = [];\n                for(var e in M(n))F.call(n, e) && e != \"constructor\" && t.push(e);\n                return t;\n            }\n            function Tc(n) {\n                if (!K(n)) return ph(n);\n                var t = he(n), e = [];\n                for(var r in n)r == \"constructor\" && (t || !F.call(n, r)) || e.push(r);\n                return e;\n            }\n            function ni(n, t) {\n                return n < t;\n            }\n            function Vs(n, t) {\n                var e = -1, r = an(n) ? p(n.length) : [];\n                return rt(n, function(s, o, f) {\n                    r[++e] = t(s, o, f);\n                }), r;\n            }\n            function ks(n) {\n                var t = gi(n);\n                return t.length == 1 && t[0][2] ? Lu(t[0][0], t[0][1]) : function(e) {\n                    return e === n || kr(e, n, t);\n                };\n            }\n            function js(n, t) {\n                return _i(n) && Tu(t) ? Lu(Wn(n), t) : function(e) {\n                    var r = Si(e, n);\n                    return r === i && r === t ? Oi(e, n) : oe(t, r, Et | ve);\n                };\n            }\n            function Ke(n, t, e, r, s) {\n                n !== t && Jr(t, function(o, f) {\n                    if (s || (s = new Rn), K(o)) Lc(n, t, f, e, Ke, r, s);\n                    else {\n                        var c = r ? r(wi(n, f), o, f + \"\", n, t, s) : i;\n                        c === i && (c = o), Yr(n, f, c);\n                    }\n                }, on);\n            }\n            function Lc(n, t, e, r, s, o, f) {\n                var c = wi(n, e), l = wi(t, e), v = f.get(l);\n                if (v) {\n                    Yr(n, e, v);\n                    return;\n                }\n                var _ = o ? o(c, l, e + \"\", n, t, f) : i, m = _ === i;\n                if (m) {\n                    var w = R(l), I = !w && at(l), E = !w && !I && Bt(l);\n                    _ = l, w || I || E ? R(c) ? _ = c : Z(c) ? _ = un(c) : I ? (m = !1, _ = hu(l, !0)) : E ? (m = !1, _ = lu(l, !0)) : _ = [] : pe(l) || Pt(l) ? (_ = c, Pt(c) ? _ = oa(c) : (!K(c) || Jn(c)) && (_ = bu(l))) : m = !1;\n                }\n                m && (f.set(l, _), s(_, l, r, o, f), f.delete(l)), Yr(n, e, _);\n            }\n            function nu(n, t) {\n                var e = n.length;\n                if (e) return t += t < 0 ? e : 0, Zn(t, e) ? n[t] : i;\n            }\n            function tu(n, t, e) {\n                t.length ? t = G(t, function(o) {\n                    return R(o) ? function(f) {\n                        return _t(f, o.length === 1 ? o[0] : o);\n                    } : o;\n                }) : t = [\n                    fn\n                ];\n                var r = -1;\n                t = G(t, hn(x()));\n                var s = Vs(n, function(o, f, c) {\n                    var l = G(t, function(v) {\n                        return v(o);\n                    });\n                    return {\n                        criteria: l,\n                        index: ++r,\n                        value: o\n                    };\n                });\n                return sf(s, function(o, f) {\n                    return Kc(o, f, e);\n                });\n            }\n            function Dc(n, t) {\n                return eu(n, t, function(e, r) {\n                    return Oi(n, r);\n                });\n            }\n            function eu(n, t, e) {\n                for(var r = -1, s = t.length, o = {}; ++r < s;){\n                    var f = t[r], c = _t(n, f);\n                    e(c, f) && fe(o, st(f, n), c);\n                }\n                return o;\n            }\n            function Hc(n) {\n                return function(t) {\n                    return _t(t, n);\n                };\n            }\n            function ti(n, t, e, r) {\n                var s = r ? rf : Tt, o = -1, f = t.length, c = n;\n                for(n === t && (t = un(t)), e && (c = G(n, hn(e))); ++o < f;)for(var l = 0, v = t[o], _ = e ? e(v) : v; (l = s(c, _, l, r)) > -1;)c !== n && Ne.call(c, l, 1), Ne.call(n, l, 1);\n                return n;\n            }\n            function ru(n, t) {\n                for(var e = n ? t.length : 0, r = e - 1; e--;){\n                    var s = t[e];\n                    if (e == r || s !== o) {\n                        var o = s;\n                        Zn(s) ? Ne.call(n, s, 1) : si(n, s);\n                    }\n                }\n                return n;\n            }\n            function ei(n, t) {\n                return n + We(Us() * (t - n + 1));\n            }\n            function Nc(n, t, e, r) {\n                for(var s = -1, o = Q(Ue((t - n) / (e || 1)), 0), f = p(o); o--;)f[r ? o : ++s] = n, n += e;\n                return f;\n            }\n            function ri(n, t) {\n                var e = \"\";\n                if (!n || t < 1 || t > kn) return e;\n                do t % 2 && (e += n), t = We(t / 2), t && (n += n);\n                while (t);\n                return e;\n            }\n            function L(n, t) {\n                return Pi(Du(n, t, fn), n + \"\");\n            }\n            function $c(n) {\n                return Ms(Gt(n));\n            }\n            function Uc(n, t) {\n                var e = Gt(n);\n                return tr(e, vt(t, 0, e.length));\n            }\n            function fe(n, t, e, r) {\n                if (!K(n)) return n;\n                t = st(t, n);\n                for(var s = -1, o = t.length, f = o - 1, c = n; c != null && ++s < o;){\n                    var l = Wn(t[s]), v = e;\n                    if (l === \"__proto__\" || l === \"constructor\" || l === \"prototype\") return n;\n                    if (s != f) {\n                        var _ = c[l];\n                        v = r ? r(_, l, c) : i, v === i && (v = K(_) ? _ : Zn(t[s + 1]) ? [] : {});\n                    }\n                    se(c, l, v), c = c[l];\n                }\n                return n;\n            }\n            var iu = Fe ? function(n, t) {\n                return Fe.set(n, t), n;\n            } : fn, Wc = $e ? function(n, t) {\n                return $e(n, \"toString\", {\n                    configurable: !0,\n                    enumerable: !1,\n                    value: bi(t),\n                    writable: !0\n                });\n            } : fn;\n            function Fc(n) {\n                return tr(Gt(n));\n            }\n            function Cn(n, t, e) {\n                var r = -1, s = n.length;\n                t < 0 && (t = -t > s ? 0 : s + t), e = e > s ? s : e, e < 0 && (e += s), s = t > e ? 0 : e - t >>> 0, t >>>= 0;\n                for(var o = p(s); ++r < s;)o[r] = n[r + t];\n                return o;\n            }\n            function Mc(n, t) {\n                var e;\n                return rt(n, function(r, s, o) {\n                    return e = t(r, s, o), !e;\n                }), !!e;\n            }\n            function Ye(n, t, e) {\n                var r = 0, s = n == null ? r : n.length;\n                if (typeof t == \"number\" && t === t && s <= Ma) {\n                    for(; r < s;){\n                        var o = r + s >>> 1, f = n[o];\n                        f !== null && !pn(f) && (e ? f <= t : f < t) ? r = o + 1 : s = o;\n                    }\n                    return s;\n                }\n                return ii(n, t, fn, e);\n            }\n            function ii(n, t, e, r) {\n                var s = 0, o = n == null ? 0 : n.length;\n                if (o === 0) return 0;\n                t = e(t);\n                for(var f = t !== t, c = t === null, l = pn(t), v = t === i; s < o;){\n                    var _ = We((s + o) / 2), m = e(n[_]), w = m !== i, I = m === null, E = m === m, T = pn(m);\n                    if (f) var y = r || E;\n                    else v ? y = E && (r || w) : c ? y = E && w && (r || !I) : l ? y = E && w && !I && (r || !T) : I || T ? y = !1 : y = r ? m <= t : m < t;\n                    y ? s = _ + 1 : o = _;\n                }\n                return nn(o, Fa);\n            }\n            function su(n, t) {\n                for(var e = -1, r = n.length, s = 0, o = []; ++e < r;){\n                    var f = n[e], c = t ? t(f) : f;\n                    if (!e || !bn(c, l)) {\n                        var l = c;\n                        o[s++] = f === 0 ? 0 : f;\n                    }\n                }\n                return o;\n            }\n            function uu(n) {\n                return typeof n == \"number\" ? n : pn(n) ? _e : +n;\n            }\n            function ln(n) {\n                if (typeof n == \"string\") return n;\n                if (R(n)) return G(n, ln) + \"\";\n                if (pn(n)) return Ws ? Ws.call(n) : \"\";\n                var t = n + \"\";\n                return t == \"0\" && 1 / n == -ht ? \"-0\" : t;\n            }\n            function it(n, t, e) {\n                var r = -1, s = Ee, o = n.length, f = !0, c = [], l = c;\n                if (e) f = !1, s = Dr;\n                else if (o >= P) {\n                    var v = t ? null : Vc(n);\n                    if (v) return Se(v);\n                    f = !1, s = jt, l = new gt;\n                } else l = t ? [] : c;\n                n: for(; ++r < o;){\n                    var _ = n[r], m = t ? t(_) : _;\n                    if (_ = e || _ !== 0 ? _ : 0, f && m === m) {\n                        for(var w = l.length; w--;)if (l[w] === m) continue n;\n                        t && l.push(m), c.push(_);\n                    } else s(l, m, e) || (l !== c && l.push(m), c.push(_));\n                }\n                return c;\n            }\n            function si(n, t) {\n                return t = st(t, n), n = Hu(n, t), n == null || delete n[Wn(In(t))];\n            }\n            function au(n, t, e, r) {\n                return fe(n, t, e(_t(n, t)), r);\n            }\n            function Ze(n, t, e, r) {\n                for(var s = n.length, o = r ? s : -1; (r ? o-- : ++o < s) && t(n[o], o, n););\n                return e ? Cn(n, r ? 0 : o, r ? o + 1 : s) : Cn(n, r ? o + 1 : 0, r ? s : o);\n            }\n            function ou(n, t) {\n                var e = n;\n                return e instanceof H && (e = e.value()), Hr(t, function(r, s) {\n                    return s.func.apply(s.thisArg, nt([\n                        r\n                    ], s.args));\n                }, e);\n            }\n            function ui(n, t, e) {\n                var r = n.length;\n                if (r < 2) return r ? it(n[0]) : [];\n                for(var s = -1, o = p(r); ++s < r;)for(var f = n[s], c = -1; ++c < r;)c != s && (o[s] = ue(o[s] || f, n[c], t, e));\n                return it(j(o, 1), t, e);\n            }\n            function fu(n, t, e) {\n                for(var r = -1, s = n.length, o = t.length, f = {}; ++r < s;){\n                    var c = r < o ? t[r] : i;\n                    e(f, n[r], c);\n                }\n                return f;\n            }\n            function ai(n) {\n                return Z(n) ? n : [];\n            }\n            function oi(n) {\n                return typeof n == \"function\" ? n : fn;\n            }\n            function st(n, t) {\n                return R(n) ? n : _i(n, t) ? [\n                    n\n                ] : Wu(W(n));\n            }\n            var qc = L;\n            function ut(n, t, e) {\n                var r = n.length;\n                return e = e === i ? r : e, !t && e >= r ? n : Cn(n, t, e);\n            }\n            var cu = Of || function(n) {\n                return k.clearTimeout(n);\n            };\n            function hu(n, t) {\n                if (t) return n.slice();\n                var e = n.length, r = Ls ? Ls(e) : new n.constructor(e);\n                return n.copy(r), r;\n            }\n            function fi(n) {\n                var t = new n.constructor(n.byteLength);\n                return new De(t).set(new De(n)), t;\n            }\n            function Bc(n, t) {\n                var e = t ? fi(n.buffer) : n.buffer;\n                return new n.constructor(e, n.byteOffset, n.byteLength);\n            }\n            function Gc(n) {\n                var t = new n.constructor(n.source, Ji.exec(n));\n                return t.lastIndex = n.lastIndex, t;\n            }\n            function zc(n) {\n                return ie ? M(ie.call(n)) : {};\n            }\n            function lu(n, t) {\n                var e = t ? fi(n.buffer) : n.buffer;\n                return new n.constructor(e, n.byteOffset, n.length);\n            }\n            function pu(n, t) {\n                if (n !== t) {\n                    var e = n !== i, r = n === null, s = n === n, o = pn(n), f = t !== i, c = t === null, l = t === t, v = pn(t);\n                    if (!c && !v && !o && n > t || o && f && l && !c && !v || r && f && l || !e && l || !s) return 1;\n                    if (!r && !o && !v && n < t || v && e && s && !r && !o || c && e && s || !f && s || !l) return -1;\n                }\n                return 0;\n            }\n            function Kc(n, t, e) {\n                for(var r = -1, s = n.criteria, o = t.criteria, f = s.length, c = e.length; ++r < f;){\n                    var l = pu(s[r], o[r]);\n                    if (l) {\n                        if (r >= c) return l;\n                        var v = e[r];\n                        return l * (v == \"desc\" ? -1 : 1);\n                    }\n                }\n                return n.index - t.index;\n            }\n            function du(n, t, e, r) {\n                for(var s = -1, o = n.length, f = e.length, c = -1, l = t.length, v = Q(o - f, 0), _ = p(l + v), m = !r; ++c < l;)_[c] = t[c];\n                for(; ++s < f;)(m || s < o) && (_[e[s]] = n[s]);\n                for(; v--;)_[c++] = n[s++];\n                return _;\n            }\n            function gu(n, t, e, r) {\n                for(var s = -1, o = n.length, f = -1, c = e.length, l = -1, v = t.length, _ = Q(o - c, 0), m = p(_ + v), w = !r; ++s < _;)m[s] = n[s];\n                for(var I = s; ++l < v;)m[I + l] = t[l];\n                for(; ++f < c;)(w || s < o) && (m[I + e[f]] = n[s++]);\n                return m;\n            }\n            function un(n, t) {\n                var e = -1, r = n.length;\n                for(t || (t = p(r)); ++e < r;)t[e] = n[e];\n                return t;\n            }\n            function Un(n, t, e, r) {\n                var s = !e;\n                e || (e = {});\n                for(var o = -1, f = t.length; ++o < f;){\n                    var c = t[o], l = r ? r(e[c], n[c], c, e, n) : i;\n                    l === i && (l = n[c]), s ? zn(e, c, l) : se(e, c, l);\n                }\n                return e;\n            }\n            function Yc(n, t) {\n                return Un(n, vi(n), t);\n            }\n            function Zc(n, t) {\n                return Un(n, Ou(n), t);\n            }\n            function Je(n, t) {\n                return function(e, r) {\n                    var s = R(e) ? Vo : gc, o = t ? t() : {};\n                    return s(e, n, x(r, 2), o);\n                };\n            }\n            function Ft(n) {\n                return L(function(t, e) {\n                    var r = -1, s = e.length, o = s > 1 ? e[s - 1] : i, f = s > 2 ? e[2] : i;\n                    for(o = n.length > 3 && typeof o == \"function\" ? (s--, o) : i, f && rn(e[0], e[1], f) && (o = s < 3 ? i : o, s = 1), t = M(t); ++r < s;){\n                        var c = e[r];\n                        c && n(t, c, r, o);\n                    }\n                    return t;\n                });\n            }\n            function vu(n, t) {\n                return function(e, r) {\n                    if (e == null) return e;\n                    if (!an(e)) return n(e, r);\n                    for(var s = e.length, o = t ? s : -1, f = M(e); (t ? o-- : ++o < s) && r(f[o], o, f) !== !1;);\n                    return e;\n                };\n            }\n            function _u(n) {\n                return function(t, e, r) {\n                    for(var s = -1, o = M(t), f = r(t), c = f.length; c--;){\n                        var l = f[n ? c : ++s];\n                        if (e(o[l], l, o) === !1) break;\n                    }\n                    return t;\n                };\n            }\n            function Jc(n, t, e) {\n                var r = t & vn, s = ce(n);\n                function o() {\n                    var f = this && this !== k && this instanceof o ? s : n;\n                    return f.apply(r ? e : this, arguments);\n                }\n                return o;\n            }\n            function mu(n) {\n                return function(t) {\n                    t = W(t);\n                    var e = Lt(t) ? On(t) : i, r = e ? e[0] : t.charAt(0), s = e ? ut(e, 1).join(\"\") : t.slice(1);\n                    return r[n]() + s;\n                };\n            }\n            function Mt(n) {\n                return function(t) {\n                    return Hr(va(ga(t).replace(Uo, \"\")), n, \"\");\n                };\n            }\n            function ce(n) {\n                return function() {\n                    var t = arguments;\n                    switch(t.length){\n                        case 0:\n                            return new n;\n                        case 1:\n                            return new n(t[0]);\n                        case 2:\n                            return new n(t[0], t[1]);\n                        case 3:\n                            return new n(t[0], t[1], t[2]);\n                        case 4:\n                            return new n(t[0], t[1], t[2], t[3]);\n                        case 5:\n                            return new n(t[0], t[1], t[2], t[3], t[4]);\n                        case 6:\n                            return new n(t[0], t[1], t[2], t[3], t[4], t[5]);\n                        case 7:\n                            return new n(t[0], t[1], t[2], t[3], t[4], t[5], t[6]);\n                    }\n                    var e = Wt(n.prototype), r = n.apply(e, t);\n                    return K(r) ? r : e;\n                };\n            }\n            function Xc(n, t, e) {\n                var r = ce(n);\n                function s() {\n                    for(var o = arguments.length, f = p(o), c = o, l = qt(s); c--;)f[c] = arguments[c];\n                    var v = o < 3 && f[0] !== l && f[o - 1] !== l ? [] : tt(f, l);\n                    if (o -= v.length, o < e) return Iu(n, t, Xe, s.placeholder, i, f, v, i, i, e - o);\n                    var _ = this && this !== k && this instanceof s ? r : n;\n                    return cn(_, this, f);\n                }\n                return s;\n            }\n            function wu(n) {\n                return function(t, e, r) {\n                    var s = M(t);\n                    if (!an(t)) {\n                        var o = x(e, 3);\n                        t = V(t), e = function(c) {\n                            return o(s[c], c, s);\n                        };\n                    }\n                    var f = n(t, e, r);\n                    return f > -1 ? s[o ? t[f] : f] : i;\n                };\n            }\n            function Pu(n) {\n                return Yn(function(t) {\n                    var e = t.length, r = e, s = Pn.prototype.thru;\n                    for(n && t.reverse(); r--;){\n                        var o = t[r];\n                        if (typeof o != \"function\") throw new wn($);\n                        if (s && !f && je(o) == \"wrapper\") var f = new Pn([], !0);\n                    }\n                    for(r = f ? r : e; ++r < e;){\n                        o = t[r];\n                        var c = je(o), l = c == \"wrapper\" ? di(o) : i;\n                        l && mi(l[0]) && l[1] == (Mn | Dn | Hn | Kt) && !l[4].length && l[9] == 1 ? f = f[je(l[0])].apply(f, l[3]) : f = o.length == 1 && mi(o) ? f[c]() : f.thru(o);\n                    }\n                    return function() {\n                        var v = arguments, _ = v[0];\n                        if (f && v.length == 1 && R(_)) return f.plant(_).value();\n                        for(var m = 0, w = e ? t[m].apply(this, v) : _; ++m < e;)w = t[m].call(this, w);\n                        return w;\n                    };\n                });\n            }\n            function Xe(n, t, e, r, s, o, f, c, l, v) {\n                var _ = t & Mn, m = t & vn, w = t & ct, I = t & (Dn | yt), E = t & dr, T = w ? i : ce(n);\n                function y() {\n                    for(var D = arguments.length, N = p(D), dn = D; dn--;)N[dn] = arguments[dn];\n                    if (I) var sn = qt(y), gn = af(N, sn);\n                    if (r && (N = du(N, r, s, I)), o && (N = gu(N, o, f, I)), D -= gn, I && D < v) {\n                        var J = tt(N, sn);\n                        return Iu(n, t, Xe, y.placeholder, e, N, J, c, l, v - D);\n                    }\n                    var Tn = m ? e : this, Qn = w ? Tn[n] : n;\n                    return D = N.length, c ? N = gh(N, c) : E && D > 1 && N.reverse(), _ && l < D && (N.length = l), this && this !== k && this instanceof y && (Qn = T || ce(Qn)), Qn.apply(Tn, N);\n                }\n                return y;\n            }\n            function Au(n, t) {\n                return function(e, r) {\n                    return Ic(e, n, t(r), {});\n                };\n            }\n            function Qe(n, t) {\n                return function(e, r) {\n                    var s;\n                    if (e === i && r === i) return t;\n                    if (e !== i && (s = e), r !== i) {\n                        if (s === i) return r;\n                        typeof e == \"string\" || typeof r == \"string\" ? (e = ln(e), r = ln(r)) : (e = uu(e), r = uu(r)), s = n(e, r);\n                    }\n                    return s;\n                };\n            }\n            function ci(n) {\n                return Yn(function(t) {\n                    return t = G(t, hn(x())), L(function(e) {\n                        var r = this;\n                        return n(t, function(s) {\n                            return cn(s, r, e);\n                        });\n                    });\n                });\n            }\n            function Ve(n, t) {\n                t = t === i ? \" \" : ln(t);\n                var e = t.length;\n                if (e < 2) return e ? ri(t, n) : t;\n                var r = ri(t, Ue(n / Dt(t)));\n                return Lt(t) ? ut(On(r), 0, n).join(\"\") : r.slice(0, n);\n            }\n            function Qc(n, t, e, r) {\n                var s = t & vn, o = ce(n);\n                function f() {\n                    for(var c = -1, l = arguments.length, v = -1, _ = r.length, m = p(_ + l), w = this && this !== k && this instanceof f ? o : n; ++v < _;)m[v] = r[v];\n                    for(; l--;)m[v++] = arguments[++c];\n                    return cn(w, s ? e : this, m);\n                }\n                return f;\n            }\n            function Cu(n) {\n                return function(t, e, r) {\n                    return r && typeof r != \"number\" && rn(t, e, r) && (e = r = i), t = Xn(t), e === i ? (e = t, t = 0) : e = Xn(e), r = r === i ? t < e ? 1 : -1 : Xn(r), Nc(t, e, r, n);\n                };\n            }\n            function ke(n) {\n                return function(t, e) {\n                    return typeof t == \"string\" && typeof e == \"string\" || (t = xn(t), e = xn(e)), n(t, e);\n                };\n            }\n            function Iu(n, t, e, r, s, o, f, c, l, v) {\n                var _ = t & Dn, m = _ ? f : i, w = _ ? i : f, I = _ ? o : i, E = _ ? i : o;\n                t |= _ ? Hn : St, t &= ~(_ ? St : Hn), t & qi || (t &= ~(vn | ct));\n                var T = [\n                    n,\n                    t,\n                    s,\n                    I,\n                    m,\n                    E,\n                    w,\n                    c,\n                    l,\n                    v\n                ], y = e.apply(i, T);\n                return mi(n) && Nu(y, T), y.placeholder = r, $u(y, n, t);\n            }\n            function hi(n) {\n                var t = X[n];\n                return function(e, r) {\n                    if (e = xn(e), r = r == null ? 0 : nn(b(r), 292), r && $s(e)) {\n                        var s = (W(e) + \"e\").split(\"e\"), o = t(s[0] + \"e\" + (+s[1] + r));\n                        return s = (W(o) + \"e\").split(\"e\"), +(s[0] + \"e\" + (+s[1] - r));\n                    }\n                    return t(e);\n                };\n            }\n            var Vc = $t && 1 / Se(new $t([\n                ,\n                -0\n            ]))[1] == ht ? function(n) {\n                return new $t(n);\n            } : Di;\n            function xu(n) {\n                return function(t) {\n                    var e = tn(t);\n                    return e == yn ? qr(t) : e == Sn ? df(t) : uf(t, n(t));\n                };\n            }\n            function Kn(n, t, e, r, s, o, f, c) {\n                var l = t & ct;\n                if (!l && typeof n != \"function\") throw new wn($);\n                var v = r ? r.length : 0;\n                if (v || (t &= ~(Hn | St), r = s = i), f = f === i ? f : Q(b(f), 0), c = c === i ? c : b(c), v -= s ? s.length : 0, t & St) {\n                    var _ = r, m = s;\n                    r = s = i;\n                }\n                var w = l ? i : di(n), I = [\n                    n,\n                    t,\n                    e,\n                    r,\n                    s,\n                    _,\n                    m,\n                    o,\n                    f,\n                    c\n                ];\n                if (w && lh(I, w), n = I[0], t = I[1], e = I[2], r = I[3], s = I[4], c = I[9] = I[9] === i ? l ? 0 : n.length : Q(I[9] - v, 0), !c && t & (Dn | yt) && (t &= ~(Dn | yt)), !t || t == vn) var E = Jc(n, t, e);\n                else t == Dn || t == yt ? E = Xc(n, t, c) : (t == Hn || t == (vn | Hn)) && !s.length ? E = Qc(n, t, e, r) : E = Xe.apply(i, I);\n                var T = w ? iu : Nu;\n                return $u(T(E, I), n, t);\n            }\n            function Eu(n, t, e, r) {\n                return n === i || bn(n, Nt[e]) && !F.call(r, e) ? t : n;\n            }\n            function yu(n, t, e, r, s, o) {\n                return K(n) && K(t) && (o.set(t, n), Ke(n, t, i, yu, o), o.delete(t)), n;\n            }\n            function kc(n) {\n                return pe(n) ? i : n;\n            }\n            function Su(n, t, e, r, s, o) {\n                var f = e & Et, c = n.length, l = t.length;\n                if (c != l && !(f && l > c)) return !1;\n                var v = o.get(n), _ = o.get(t);\n                if (v && _) return v == t && _ == n;\n                var m = -1, w = !0, I = e & ve ? new gt : i;\n                for(o.set(n, t), o.set(t, n); ++m < c;){\n                    var E = n[m], T = t[m];\n                    if (r) var y = f ? r(T, E, m, t, n, o) : r(E, T, m, n, t, o);\n                    if (y !== i) {\n                        if (y) continue;\n                        w = !1;\n                        break;\n                    }\n                    if (I) {\n                        if (!Nr(t, function(D, N) {\n                            if (!jt(I, N) && (E === D || s(E, D, e, r, o))) return I.push(N);\n                        })) {\n                            w = !1;\n                            break;\n                        }\n                    } else if (!(E === T || s(E, T, e, r, o))) {\n                        w = !1;\n                        break;\n                    }\n                }\n                return o.delete(n), o.delete(t), w;\n            }\n            function jc(n, t, e, r, s, o, f) {\n                switch(e){\n                    case Rt:\n                        if (n.byteLength != t.byteLength || n.byteOffset != t.byteOffset) return !1;\n                        n = n.buffer, t = t.buffer;\n                    case kt:\n                        return !(n.byteLength != t.byteLength || !o(new De(n), new De(t)));\n                    case Yt:\n                    case Zt:\n                    case Jt:\n                        return bn(+n, +t);\n                    case we:\n                        return n.name == t.name && n.message == t.message;\n                    case Xt:\n                    case Qt:\n                        return n == t + \"\";\n                    case yn:\n                        var c = qr;\n                    case Sn:\n                        var l = r & Et;\n                        if (c || (c = Se), n.size != t.size && !l) return !1;\n                        var v = f.get(n);\n                        if (v) return v == t;\n                        r |= ve, f.set(n, t);\n                        var _ = Su(c(n), c(t), r, s, o, f);\n                        return f.delete(n), _;\n                    case Ae:\n                        if (ie) return ie.call(n) == ie.call(t);\n                }\n                return !1;\n            }\n            function nh(n, t, e, r, s, o) {\n                var f = e & Et, c = li(n), l = c.length, v = li(t), _ = v.length;\n                if (l != _ && !f) return !1;\n                for(var m = l; m--;){\n                    var w = c[m];\n                    if (!(f ? w in t : F.call(t, w))) return !1;\n                }\n                var I = o.get(n), E = o.get(t);\n                if (I && E) return I == t && E == n;\n                var T = !0;\n                o.set(n, t), o.set(t, n);\n                for(var y = f; ++m < l;){\n                    w = c[m];\n                    var D = n[w], N = t[w];\n                    if (r) var dn = f ? r(N, D, w, t, n, o) : r(D, N, w, n, t, o);\n                    if (!(dn === i ? D === N || s(D, N, e, r, o) : dn)) {\n                        T = !1;\n                        break;\n                    }\n                    y || (y = w == \"constructor\");\n                }\n                if (T && !y) {\n                    var sn = n.constructor, gn = t.constructor;\n                    sn != gn && \"constructor\" in n && \"constructor\" in t && !(typeof sn == \"function\" && sn instanceof sn && typeof gn == \"function\" && gn instanceof gn) && (T = !1);\n                }\n                return o.delete(n), o.delete(t), T;\n            }\n            function Yn(n) {\n                return Pi(Du(n, i, Bu), n + \"\");\n            }\n            function li(n) {\n                return Zs(n, V, vi);\n            }\n            function pi(n) {\n                return Zs(n, on, Ou);\n            }\n            var di = Fe ? function(n) {\n                return Fe.get(n);\n            } : Di;\n            function je(n) {\n                for(var t = n.name + \"\", e = Ut[t], r = F.call(Ut, t) ? e.length : 0; r--;){\n                    var s = e[r], o = s.func;\n                    if (o == null || o == n) return s.name;\n                }\n                return t;\n            }\n            function qt(n) {\n                var t = F.call(a, \"placeholder\") ? a : n;\n                return t.placeholder;\n            }\n            function x() {\n                var n = a.iteratee || Ti;\n                return n = n === Ti ? Qs : n, arguments.length ? n(arguments[0], arguments[1]) : n;\n            }\n            function nr(n, t) {\n                var e = n.__data__;\n                return oh(t) ? e[typeof t == \"string\" ? \"string\" : \"hash\"] : e.map;\n            }\n            function gi(n) {\n                for(var t = V(n), e = t.length; e--;){\n                    var r = t[e], s = n[r];\n                    t[e] = [\n                        r,\n                        s,\n                        Tu(s)\n                    ];\n                }\n                return t;\n            }\n            function mt(n, t) {\n                var e = hf(n, t);\n                return Xs(e) ? e : i;\n            }\n            function th(n) {\n                var t = F.call(n, pt), e = n[pt];\n                try {\n                    n[pt] = i;\n                    var r = !0;\n                } catch  {}\n                var s = Te.call(n);\n                return r && (t ? n[pt] = e : delete n[pt]), s;\n            }\n            var vi = Gr ? function(n) {\n                return n == null ? [] : (n = M(n), jn(Gr(n), function(t) {\n                    return Hs.call(n, t);\n                }));\n            } : Hi, Ou = Gr ? function(n) {\n                for(var t = []; n;)nt(t, vi(n)), n = He(n);\n                return t;\n            } : Hi, tn = en;\n            (zr && tn(new zr(new ArrayBuffer(1))) != Rt || te && tn(new te) != yn || Kr && tn(Kr.resolve()) != zi || $t && tn(new $t) != Sn || ee && tn(new ee) != Vt) && (tn = function(n) {\n                var t = en(n), e = t == qn ? n.constructor : i, r = e ? wt(e) : \"\";\n                if (r) switch(r){\n                    case Uf:\n                        return Rt;\n                    case Wf:\n                        return yn;\n                    case Ff:\n                        return zi;\n                    case Mf:\n                        return Sn;\n                    case qf:\n                        return Vt;\n                }\n                return t;\n            });\n            function eh(n, t, e) {\n                for(var r = -1, s = e.length; ++r < s;){\n                    var o = e[r], f = o.size;\n                    switch(o.type){\n                        case \"drop\":\n                            n += f;\n                            break;\n                        case \"dropRight\":\n                            t -= f;\n                            break;\n                        case \"take\":\n                            t = nn(t, n + f);\n                            break;\n                        case \"takeRight\":\n                            n = Q(n, t - f);\n                            break;\n                    }\n                }\n                return {\n                    start: n,\n                    end: t\n                };\n            }\n            function rh(n) {\n                var t = n.match(ao);\n                return t ? t[1].split(oo) : [];\n            }\n            function Ru(n, t, e) {\n                t = st(t, n);\n                for(var r = -1, s = t.length, o = !1; ++r < s;){\n                    var f = Wn(t[r]);\n                    if (!(o = n != null && e(n, f))) break;\n                    n = n[f];\n                }\n                return o || ++r != s ? o : (s = n == null ? 0 : n.length, !!s && ar(s) && Zn(f, s) && (R(n) || Pt(n)));\n            }\n            function ih(n) {\n                var t = n.length, e = new n.constructor(t);\n                return t && typeof n[0] == \"string\" && F.call(n, \"index\") && (e.index = n.index, e.input = n.input), e;\n            }\n            function bu(n) {\n                return typeof n.constructor == \"function\" && !he(n) ? Wt(He(n)) : {};\n            }\n            function sh(n, t, e) {\n                var r = n.constructor;\n                switch(t){\n                    case kt:\n                        return fi(n);\n                    case Yt:\n                    case Zt:\n                        return new r(+n);\n                    case Rt:\n                        return Bc(n, e);\n                    case gr:\n                    case vr:\n                    case _r:\n                    case mr:\n                    case wr:\n                    case Pr:\n                    case Ar:\n                    case Cr:\n                    case Ir:\n                        return lu(n, e);\n                    case yn:\n                        return new r;\n                    case Jt:\n                    case Qt:\n                        return new r(n);\n                    case Xt:\n                        return Gc(n);\n                    case Sn:\n                        return new r;\n                    case Ae:\n                        return zc(n);\n                }\n            }\n            function uh(n, t) {\n                var e = t.length;\n                if (!e) return n;\n                var r = e - 1;\n                return t[r] = (e > 1 ? \"& \" : \"\") + t[r], t = t.join(e > 2 ? \", \" : \" \"), n.replace(uo, `{\n/* [wrapped with ` + t + `] */\n`);\n            }\n            function ah(n) {\n                return R(n) || Pt(n) || !!(Ns && n && n[Ns]);\n            }\n            function Zn(n, t) {\n                var e = typeof n;\n                return t = t ?? kn, !!t && (e == \"number\" || e != \"symbol\" && mo.test(n)) && n > -1 && n % 1 == 0 && n < t;\n            }\n            function rn(n, t, e) {\n                if (!K(e)) return !1;\n                var r = typeof t;\n                return (r == \"number\" ? an(e) && Zn(t, e.length) : r == \"string\" && t in e) ? bn(e[t], n) : !1;\n            }\n            function _i(n, t) {\n                if (R(n)) return !1;\n                var e = typeof n;\n                return e == \"number\" || e == \"symbol\" || e == \"boolean\" || n == null || pn(n) ? !0 : eo.test(n) || !to.test(n) || t != null && n in M(t);\n            }\n            function oh(n) {\n                var t = typeof n;\n                return t == \"string\" || t == \"number\" || t == \"symbol\" || t == \"boolean\" ? n !== \"__proto__\" : n === null;\n            }\n            function mi(n) {\n                var t = je(n), e = a[t];\n                if (typeof e != \"function\" || !(t in H.prototype)) return !1;\n                if (n === e) return !0;\n                var r = di(e);\n                return !!r && n === r[0];\n            }\n            function fh(n) {\n                return !!Ts && Ts in n;\n            }\n            var ch = Re ? Jn : Ni;\n            function he(n) {\n                var t = n && n.constructor, e = typeof t == \"function\" && t.prototype || Nt;\n                return n === e;\n            }\n            function Tu(n) {\n                return n === n && !K(n);\n            }\n            function Lu(n, t) {\n                return function(e) {\n                    return e == null ? !1 : e[n] === t && (t !== i || n in M(e));\n                };\n            }\n            function hh(n) {\n                var t = sr(n, function(r) {\n                    return e.size === pr && e.clear(), r;\n                }), e = t.cache;\n                return t;\n            }\n            function lh(n, t) {\n                var e = n[1], r = t[1], s = e | r, o = s < (vn | ct | Mn), f = r == Mn && e == Dn || r == Mn && e == Kt && n[7].length <= t[8] || r == (Mn | Kt) && t[7].length <= t[8] && e == Dn;\n                if (!(o || f)) return n;\n                r & vn && (n[2] = t[2], s |= e & vn ? 0 : qi);\n                var c = t[3];\n                if (c) {\n                    var l = n[3];\n                    n[3] = l ? du(l, c, t[4]) : c, n[4] = l ? tt(n[3], It) : t[4];\n                }\n                return c = t[5], c && (l = n[5], n[5] = l ? gu(l, c, t[6]) : c, n[6] = l ? tt(n[5], It) : t[6]), c = t[7], c && (n[7] = c), r & Mn && (n[8] = n[8] == null ? t[8] : nn(n[8], t[8])), n[9] == null && (n[9] = t[9]), n[0] = t[0], n[1] = s, n;\n            }\n            function ph(n) {\n                var t = [];\n                if (n != null) for(var e in M(n))t.push(e);\n                return t;\n            }\n            function dh(n) {\n                return Te.call(n);\n            }\n            function Du(n, t, e) {\n                return t = Q(t === i ? n.length - 1 : t, 0), function() {\n                    for(var r = arguments, s = -1, o = Q(r.length - t, 0), f = p(o); ++s < o;)f[s] = r[t + s];\n                    s = -1;\n                    for(var c = p(t + 1); ++s < t;)c[s] = r[s];\n                    return c[t] = e(f), cn(n, this, c);\n                };\n            }\n            function Hu(n, t) {\n                return t.length < 2 ? n : _t(n, Cn(t, 0, -1));\n            }\n            function gh(n, t) {\n                for(var e = n.length, r = nn(t.length, e), s = un(n); r--;){\n                    var o = t[r];\n                    n[r] = Zn(o, e) ? s[o] : i;\n                }\n                return n;\n            }\n            function wi(n, t) {\n                if (!(t === \"constructor\" && typeof n[t] == \"function\") && t != \"__proto__\") return n[t];\n            }\n            var Nu = Uu(iu), le = bf || function(n, t) {\n                return k.setTimeout(n, t);\n            }, Pi = Uu(Wc);\n            function $u(n, t, e) {\n                var r = t + \"\";\n                return Pi(n, uh(r, vh(rh(r), e)));\n            }\n            function Uu(n) {\n                var t = 0, e = 0;\n                return function() {\n                    var r = Hf(), s = Na - (r - e);\n                    if (e = r, s > 0) {\n                        if (++t >= Ha) return arguments[0];\n                    } else t = 0;\n                    return n.apply(i, arguments);\n                };\n            }\n            function tr(n, t) {\n                var e = -1, r = n.length, s = r - 1;\n                for(t = t === i ? r : t; ++e < t;){\n                    var o = ei(e, s), f = n[o];\n                    n[o] = n[e], n[e] = f;\n                }\n                return n.length = t, n;\n            }\n            var Wu = hh(function(n) {\n                var t = [];\n                return n.charCodeAt(0) === 46 && t.push(\"\"), n.replace(ro, function(e, r, s, o) {\n                    t.push(s ? o.replace(ho, \"$1\") : r || e);\n                }), t;\n            });\n            function Wn(n) {\n                if (typeof n == \"string\" || pn(n)) return n;\n                var t = n + \"\";\n                return t == \"0\" && 1 / n == -ht ? \"-0\" : t;\n            }\n            function wt(n) {\n                if (n != null) {\n                    try {\n                        return be.call(n);\n                    } catch  {}\n                    try {\n                        return n + \"\";\n                    } catch  {}\n                }\n                return \"\";\n            }\n            function vh(n, t) {\n                return mn(qa, function(e) {\n                    var r = \"_.\" + e[0];\n                    t & e[1] && !Ee(n, r) && n.push(r);\n                }), n.sort();\n            }\n            function Fu(n) {\n                if (n instanceof H) return n.clone();\n                var t = new Pn(n.__wrapped__, n.__chain__);\n                return t.__actions__ = un(n.__actions__), t.__index__ = n.__index__, t.__values__ = n.__values__, t;\n            }\n            function _h(n, t, e) {\n                (e ? rn(n, t, e) : t === i) ? t = 1 : t = Q(b(t), 0);\n                var r = n == null ? 0 : n.length;\n                if (!r || t < 1) return [];\n                for(var s = 0, o = 0, f = p(Ue(r / t)); s < r;)f[o++] = Cn(n, s, s += t);\n                return f;\n            }\n            function mh(n) {\n                for(var t = -1, e = n == null ? 0 : n.length, r = 0, s = []; ++t < e;){\n                    var o = n[t];\n                    o && (s[r++] = o);\n                }\n                return s;\n            }\n            function wh() {\n                var n = arguments.length;\n                if (!n) return [];\n                for(var t = p(n - 1), e = arguments[0], r = n; r--;)t[r - 1] = arguments[r];\n                return nt(R(e) ? un(e) : [\n                    e\n                ], j(t, 1));\n            }\n            var Ph = L(function(n, t) {\n                return Z(n) ? ue(n, j(t, 1, Z, !0)) : [];\n            }), Ah = L(function(n, t) {\n                var e = In(t);\n                return Z(e) && (e = i), Z(n) ? ue(n, j(t, 1, Z, !0), x(e, 2)) : [];\n            }), Ch = L(function(n, t) {\n                var e = In(t);\n                return Z(e) && (e = i), Z(n) ? ue(n, j(t, 1, Z, !0), i, e) : [];\n            });\n            function Ih(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                return r ? (t = e || t === i ? 1 : b(t), Cn(n, t < 0 ? 0 : t, r)) : [];\n            }\n            function xh(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                return r ? (t = e || t === i ? 1 : b(t), t = r - t, Cn(n, 0, t < 0 ? 0 : t)) : [];\n            }\n            function Eh(n, t) {\n                return n && n.length ? Ze(n, x(t, 3), !0, !0) : [];\n            }\n            function yh(n, t) {\n                return n && n.length ? Ze(n, x(t, 3), !0) : [];\n            }\n            function Sh(n, t, e, r) {\n                var s = n == null ? 0 : n.length;\n                return s ? (e && typeof e != \"number\" && rn(n, t, e) && (e = 0, r = s), wc(n, t, e, r)) : [];\n            }\n            function Mu(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                if (!r) return -1;\n                var s = e == null ? 0 : b(e);\n                return s < 0 && (s = Q(r + s, 0)), ye(n, x(t, 3), s);\n            }\n            function qu(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                if (!r) return -1;\n                var s = r - 1;\n                return e !== i && (s = b(e), s = e < 0 ? Q(r + s, 0) : nn(s, r - 1)), ye(n, x(t, 3), s, !0);\n            }\n            function Bu(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? j(n, 1) : [];\n            }\n            function Oh(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? j(n, ht) : [];\n            }\n            function Rh(n, t) {\n                var e = n == null ? 0 : n.length;\n                return e ? (t = t === i ? 1 : b(t), j(n, t)) : [];\n            }\n            function bh(n) {\n                for(var t = -1, e = n == null ? 0 : n.length, r = {}; ++t < e;){\n                    var s = n[t];\n                    r[s[0]] = s[1];\n                }\n                return r;\n            }\n            function Gu(n) {\n                return n && n.length ? n[0] : i;\n            }\n            function Th(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                if (!r) return -1;\n                var s = e == null ? 0 : b(e);\n                return s < 0 && (s = Q(r + s, 0)), Tt(n, t, s);\n            }\n            function Lh(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? Cn(n, 0, -1) : [];\n            }\n            var Dh = L(function(n) {\n                var t = G(n, ai);\n                return t.length && t[0] === n[0] ? Vr(t) : [];\n            }), Hh = L(function(n) {\n                var t = In(n), e = G(n, ai);\n                return t === In(e) ? t = i : e.pop(), e.length && e[0] === n[0] ? Vr(e, x(t, 2)) : [];\n            }), Nh = L(function(n) {\n                var t = In(n), e = G(n, ai);\n                return t = typeof t == \"function\" ? t : i, t && e.pop(), e.length && e[0] === n[0] ? Vr(e, i, t) : [];\n            });\n            function $h(n, t) {\n                return n == null ? \"\" : Lf.call(n, t);\n            }\n            function In(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? n[t - 1] : i;\n            }\n            function Uh(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                if (!r) return -1;\n                var s = r;\n                return e !== i && (s = b(e), s = s < 0 ? Q(r + s, 0) : nn(s, r - 1)), t === t ? vf(n, t, s) : ye(n, Is, s, !0);\n            }\n            function Wh(n, t) {\n                return n && n.length ? nu(n, b(t)) : i;\n            }\n            var Fh = L(zu);\n            function zu(n, t) {\n                return n && n.length && t && t.length ? ti(n, t) : n;\n            }\n            function Mh(n, t, e) {\n                return n && n.length && t && t.length ? ti(n, t, x(e, 2)) : n;\n            }\n            function qh(n, t, e) {\n                return n && n.length && t && t.length ? ti(n, t, i, e) : n;\n            }\n            var Bh = Yn(function(n, t) {\n                var e = n == null ? 0 : n.length, r = Zr(n, t);\n                return ru(n, G(t, function(s) {\n                    return Zn(s, e) ? +s : s;\n                }).sort(pu)), r;\n            });\n            function Gh(n, t) {\n                var e = [];\n                if (!(n && n.length)) return e;\n                var r = -1, s = [], o = n.length;\n                for(t = x(t, 3); ++r < o;){\n                    var f = n[r];\n                    t(f, r, n) && (e.push(f), s.push(r));\n                }\n                return ru(n, s), e;\n            }\n            function Ai(n) {\n                return n == null ? n : $f.call(n);\n            }\n            function zh(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                return r ? (e && typeof e != \"number\" && rn(n, t, e) ? (t = 0, e = r) : (t = t == null ? 0 : b(t), e = e === i ? r : b(e)), Cn(n, t, e)) : [];\n            }\n            function Kh(n, t) {\n                return Ye(n, t);\n            }\n            function Yh(n, t, e) {\n                return ii(n, t, x(e, 2));\n            }\n            function Zh(n, t) {\n                var e = n == null ? 0 : n.length;\n                if (e) {\n                    var r = Ye(n, t);\n                    if (r < e && bn(n[r], t)) return r;\n                }\n                return -1;\n            }\n            function Jh(n, t) {\n                return Ye(n, t, !0);\n            }\n            function Xh(n, t, e) {\n                return ii(n, t, x(e, 2), !0);\n            }\n            function Qh(n, t) {\n                var e = n == null ? 0 : n.length;\n                if (e) {\n                    var r = Ye(n, t, !0) - 1;\n                    if (bn(n[r], t)) return r;\n                }\n                return -1;\n            }\n            function Vh(n) {\n                return n && n.length ? su(n) : [];\n            }\n            function kh(n, t) {\n                return n && n.length ? su(n, x(t, 2)) : [];\n            }\n            function jh(n) {\n                var t = n == null ? 0 : n.length;\n                return t ? Cn(n, 1, t) : [];\n            }\n            function nl(n, t, e) {\n                return n && n.length ? (t = e || t === i ? 1 : b(t), Cn(n, 0, t < 0 ? 0 : t)) : [];\n            }\n            function tl(n, t, e) {\n                var r = n == null ? 0 : n.length;\n                return r ? (t = e || t === i ? 1 : b(t), t = r - t, Cn(n, t < 0 ? 0 : t, r)) : [];\n            }\n            function el(n, t) {\n                return n && n.length ? Ze(n, x(t, 3), !1, !0) : [];\n            }\n            function rl(n, t) {\n                return n && n.length ? Ze(n, x(t, 3)) : [];\n            }\n            var il = L(function(n) {\n                return it(j(n, 1, Z, !0));\n            }), sl = L(function(n) {\n                var t = In(n);\n                return Z(t) && (t = i), it(j(n, 1, Z, !0), x(t, 2));\n            }), ul = L(function(n) {\n                var t = In(n);\n                return t = typeof t == \"function\" ? t : i, it(j(n, 1, Z, !0), i, t);\n            });\n            function al(n) {\n                return n && n.length ? it(n) : [];\n            }\n            function ol(n, t) {\n                return n && n.length ? it(n, x(t, 2)) : [];\n            }\n            function fl(n, t) {\n                return t = typeof t == \"function\" ? t : i, n && n.length ? it(n, i, t) : [];\n            }\n            function Ci(n) {\n                if (!(n && n.length)) return [];\n                var t = 0;\n                return n = jn(n, function(e) {\n                    if (Z(e)) return t = Q(e.length, t), !0;\n                }), Fr(t, function(e) {\n                    return G(n, $r(e));\n                });\n            }\n            function Ku(n, t) {\n                if (!(n && n.length)) return [];\n                var e = Ci(n);\n                return t == null ? e : G(e, function(r) {\n                    return cn(t, i, r);\n                });\n            }\n            var cl = L(function(n, t) {\n                return Z(n) ? ue(n, t) : [];\n            }), hl = L(function(n) {\n                return ui(jn(n, Z));\n            }), ll = L(function(n) {\n                var t = In(n);\n                return Z(t) && (t = i), ui(jn(n, Z), x(t, 2));\n            }), pl = L(function(n) {\n                var t = In(n);\n                return t = typeof t == \"function\" ? t : i, ui(jn(n, Z), i, t);\n            }), dl = L(Ci);\n            function gl(n, t) {\n                return fu(n || [], t || [], se);\n            }\n            function vl(n, t) {\n                return fu(n || [], t || [], fe);\n            }\n            var _l = L(function(n) {\n                var t = n.length, e = t > 1 ? n[t - 1] : i;\n                return e = typeof e == \"function\" ? (n.pop(), e) : i, Ku(n, e);\n            });\n            function Yu(n) {\n                var t = a(n);\n                return t.__chain__ = !0, t;\n            }\n            function ml(n, t) {\n                return t(n), n;\n            }\n            function er(n, t) {\n                return t(n);\n            }\n            var wl = Yn(function(n) {\n                var t = n.length, e = t ? n[0] : 0, r = this.__wrapped__, s = function(o) {\n                    return Zr(o, n);\n                };\n                return t > 1 || this.__actions__.length || !(r instanceof H) || !Zn(e) ? this.thru(s) : (r = r.slice(e, +e + (t ? 1 : 0)), r.__actions__.push({\n                    func: er,\n                    args: [\n                        s\n                    ],\n                    thisArg: i\n                }), new Pn(r, this.__chain__).thru(function(o) {\n                    return t && !o.length && o.push(i), o;\n                }));\n            });\n            function Pl() {\n                return Yu(this);\n            }\n            function Al() {\n                return new Pn(this.value(), this.__chain__);\n            }\n            function Cl() {\n                this.__values__ === i && (this.__values__ = ua(this.value()));\n                var n = this.__index__ >= this.__values__.length, t = n ? i : this.__values__[this.__index__++];\n                return {\n                    done: n,\n                    value: t\n                };\n            }\n            function Il() {\n                return this;\n            }\n            function xl(n) {\n                for(var t, e = this; e instanceof qe;){\n                    var r = Fu(e);\n                    r.__index__ = 0, r.__values__ = i, t ? s.__wrapped__ = r : t = r;\n                    var s = r;\n                    e = e.__wrapped__;\n                }\n                return s.__wrapped__ = n, t;\n            }\n            function El() {\n                var n = this.__wrapped__;\n                if (n instanceof H) {\n                    var t = n;\n                    return this.__actions__.length && (t = new H(this)), t = t.reverse(), t.__actions__.push({\n                        func: er,\n                        args: [\n                            Ai\n                        ],\n                        thisArg: i\n                    }), new Pn(t, this.__chain__);\n                }\n                return this.thru(Ai);\n            }\n            function yl() {\n                return ou(this.__wrapped__, this.__actions__);\n            }\n            var Sl = Je(function(n, t, e) {\n                F.call(n, e) ? ++n[e] : zn(n, e, 1);\n            });\n            function Ol(n, t, e) {\n                var r = R(n) ? As : mc;\n                return e && rn(n, t, e) && (t = i), r(n, x(t, 3));\n            }\n            function Rl(n, t) {\n                var e = R(n) ? jn : Ks;\n                return e(n, x(t, 3));\n            }\n            var bl = wu(Mu), Tl = wu(qu);\n            function Ll(n, t) {\n                return j(rr(n, t), 1);\n            }\n            function Dl(n, t) {\n                return j(rr(n, t), ht);\n            }\n            function Hl(n, t, e) {\n                return e = e === i ? 1 : b(e), j(rr(n, t), e);\n            }\n            function Zu(n, t) {\n                var e = R(n) ? mn : rt;\n                return e(n, x(t, 3));\n            }\n            function Ju(n, t) {\n                var e = R(n) ? ko : zs;\n                return e(n, x(t, 3));\n            }\n            var Nl = Je(function(n, t, e) {\n                F.call(n, e) ? n[e].push(t) : zn(n, e, [\n                    t\n                ]);\n            });\n            function $l(n, t, e, r) {\n                n = an(n) ? n : Gt(n), e = e && !r ? b(e) : 0;\n                var s = n.length;\n                return e < 0 && (e = Q(s + e, 0)), or(n) ? e <= s && n.indexOf(t, e) > -1 : !!s && Tt(n, t, e) > -1;\n            }\n            var Ul = L(function(n, t, e) {\n                var r = -1, s = typeof t == \"function\", o = an(n) ? p(n.length) : [];\n                return rt(n, function(f) {\n                    o[++r] = s ? cn(t, f, e) : ae(f, t, e);\n                }), o;\n            }), Wl = Je(function(n, t, e) {\n                zn(n, e, t);\n            });\n            function rr(n, t) {\n                var e = R(n) ? G : Vs;\n                return e(n, x(t, 3));\n            }\n            function Fl(n, t, e, r) {\n                return n == null ? [] : (R(t) || (t = t == null ? [] : [\n                    t\n                ]), e = r ? i : e, R(e) || (e = e == null ? [] : [\n                    e\n                ]), tu(n, t, e));\n            }\n            var Ml = Je(function(n, t, e) {\n                n[e ? 0 : 1].push(t);\n            }, function() {\n                return [\n                    [],\n                    []\n                ];\n            });\n            function ql(n, t, e) {\n                var r = R(n) ? Hr : Es, s = arguments.length < 3;\n                return r(n, x(t, 4), e, s, rt);\n            }\n            function Bl(n, t, e) {\n                var r = R(n) ? jo : Es, s = arguments.length < 3;\n                return r(n, x(t, 4), e, s, zs);\n            }\n            function Gl(n, t) {\n                var e = R(n) ? jn : Ks;\n                return e(n, ur(x(t, 3)));\n            }\n            function zl(n) {\n                var t = R(n) ? Ms : $c;\n                return t(n);\n            }\n            function Kl(n, t, e) {\n                (e ? rn(n, t, e) : t === i) ? t = 1 : t = b(t);\n                var r = R(n) ? pc : Uc;\n                return r(n, t);\n            }\n            function Yl(n) {\n                var t = R(n) ? dc : Fc;\n                return t(n);\n            }\n            function Zl(n) {\n                if (n == null) return 0;\n                if (an(n)) return or(n) ? Dt(n) : n.length;\n                var t = tn(n);\n                return t == yn || t == Sn ? n.size : jr(n).length;\n            }\n            function Jl(n, t, e) {\n                var r = R(n) ? Nr : Mc;\n                return e && rn(n, t, e) && (t = i), r(n, x(t, 3));\n            }\n            var Xl = L(function(n, t) {\n                if (n == null) return [];\n                var e = t.length;\n                return e > 1 && rn(n, t[0], t[1]) ? t = [] : e > 2 && rn(t[0], t[1], t[2]) && (t = [\n                    t[0]\n                ]), tu(n, j(t, 1), []);\n            }), ir = Rf || function() {\n                return k.Date.now();\n            };\n            function Ql(n, t) {\n                if (typeof t != \"function\") throw new wn($);\n                return n = b(n), function() {\n                    if (--n < 1) return t.apply(this, arguments);\n                };\n            }\n            function Xu(n, t, e) {\n                return t = e ? i : t, t = n && t == null ? n.length : t, Kn(n, Mn, i, i, i, i, t);\n            }\n            function Qu(n, t) {\n                var e;\n                if (typeof t != \"function\") throw new wn($);\n                return n = b(n), function() {\n                    return --n > 0 && (e = t.apply(this, arguments)), n <= 1 && (t = i), e;\n                };\n            }\n            var Ii = L(function(n, t, e) {\n                var r = vn;\n                if (e.length) {\n                    var s = tt(e, qt(Ii));\n                    r |= Hn;\n                }\n                return Kn(n, r, t, e, s);\n            }), Vu = L(function(n, t, e) {\n                var r = vn | ct;\n                if (e.length) {\n                    var s = tt(e, qt(Vu));\n                    r |= Hn;\n                }\n                return Kn(t, r, n, e, s);\n            });\n            function ku(n, t, e) {\n                t = e ? i : t;\n                var r = Kn(n, Dn, i, i, i, i, i, t);\n                return r.placeholder = ku.placeholder, r;\n            }\n            function ju(n, t, e) {\n                t = e ? i : t;\n                var r = Kn(n, yt, i, i, i, i, i, t);\n                return r.placeholder = ju.placeholder, r;\n            }\n            function na(n, t, e) {\n                var r, s, o, f, c, l, v = 0, _ = !1, m = !1, w = !0;\n                if (typeof n != \"function\") throw new wn($);\n                t = xn(t) || 0, K(e) && (_ = !!e.leading, m = \"maxWait\" in e, o = m ? Q(xn(e.maxWait) || 0, t) : o, w = \"trailing\" in e ? !!e.trailing : w);\n                function I(J) {\n                    var Tn = r, Qn = s;\n                    return r = s = i, v = J, f = n.apply(Qn, Tn), f;\n                }\n                function E(J) {\n                    return v = J, c = le(D, t), _ ? I(J) : f;\n                }\n                function T(J) {\n                    var Tn = J - l, Qn = J - v, wa = t - Tn;\n                    return m ? nn(wa, o - Qn) : wa;\n                }\n                function y(J) {\n                    var Tn = J - l, Qn = J - v;\n                    return l === i || Tn >= t || Tn < 0 || m && Qn >= o;\n                }\n                function D() {\n                    var J = ir();\n                    if (y(J)) return N(J);\n                    c = le(D, T(J));\n                }\n                function N(J) {\n                    return c = i, w && r ? I(J) : (r = s = i, f);\n                }\n                function dn() {\n                    c !== i && cu(c), v = 0, r = l = s = c = i;\n                }\n                function sn() {\n                    return c === i ? f : N(ir());\n                }\n                function gn() {\n                    var J = ir(), Tn = y(J);\n                    if (r = arguments, s = this, l = J, Tn) {\n                        if (c === i) return E(l);\n                        if (m) return cu(c), c = le(D, t), I(l);\n                    }\n                    return c === i && (c = le(D, t)), f;\n                }\n                return gn.cancel = dn, gn.flush = sn, gn;\n            }\n            var Vl = L(function(n, t) {\n                return Gs(n, 1, t);\n            }), kl = L(function(n, t, e) {\n                return Gs(n, xn(t) || 0, e);\n            });\n            function jl(n) {\n                return Kn(n, dr);\n            }\n            function sr(n, t) {\n                if (typeof n != \"function\" || t != null && typeof t != \"function\") throw new wn($);\n                var e = function() {\n                    var r = arguments, s = t ? t.apply(this, r) : r[0], o = e.cache;\n                    if (o.has(s)) return o.get(s);\n                    var f = n.apply(this, r);\n                    return e.cache = o.set(s, f) || o, f;\n                };\n                return e.cache = new (sr.Cache || Gn), e;\n            }\n            sr.Cache = Gn;\n            function ur(n) {\n                if (typeof n != \"function\") throw new wn($);\n                return function() {\n                    var t = arguments;\n                    switch(t.length){\n                        case 0:\n                            return !n.call(this);\n                        case 1:\n                            return !n.call(this, t[0]);\n                        case 2:\n                            return !n.call(this, t[0], t[1]);\n                        case 3:\n                            return !n.call(this, t[0], t[1], t[2]);\n                    }\n                    return !n.apply(this, t);\n                };\n            }\n            function np(n) {\n                return Qu(2, n);\n            }\n            var tp = qc(function(n, t) {\n                t = t.length == 1 && R(t[0]) ? G(t[0], hn(x())) : G(j(t, 1), hn(x()));\n                var e = t.length;\n                return L(function(r) {\n                    for(var s = -1, o = nn(r.length, e); ++s < o;)r[s] = t[s].call(this, r[s]);\n                    return cn(n, this, r);\n                });\n            }), xi = L(function(n, t) {\n                var e = tt(t, qt(xi));\n                return Kn(n, Hn, i, t, e);\n            }), ta = L(function(n, t) {\n                var e = tt(t, qt(ta));\n                return Kn(n, St, i, t, e);\n            }), ep = Yn(function(n, t) {\n                return Kn(n, Kt, i, i, i, t);\n            });\n            function rp(n, t) {\n                if (typeof n != \"function\") throw new wn($);\n                return t = t === i ? t : b(t), L(n, t);\n            }\n            function ip(n, t) {\n                if (typeof n != \"function\") throw new wn($);\n                return t = t == null ? 0 : Q(b(t), 0), L(function(e) {\n                    var r = e[t], s = ut(e, 0, t);\n                    return r && nt(s, r), cn(n, this, s);\n                });\n            }\n            function sp(n, t, e) {\n                var r = !0, s = !0;\n                if (typeof n != \"function\") throw new wn($);\n                return K(e) && (r = \"leading\" in e ? !!e.leading : r, s = \"trailing\" in e ? !!e.trailing : s), na(n, t, {\n                    leading: r,\n                    maxWait: t,\n                    trailing: s\n                });\n            }\n            function up(n) {\n                return Xu(n, 1);\n            }\n            function ap(n, t) {\n                return xi(oi(t), n);\n            }\n            function op() {\n                if (!arguments.length) return [];\n                var n = arguments[0];\n                return R(n) ? n : [\n                    n\n                ];\n            }\n            function fp(n) {\n                return An(n, xt);\n            }\n            function cp(n, t) {\n                return t = typeof t == \"function\" ? t : i, An(n, xt, t);\n            }\n            function hp(n) {\n                return An(n, Ln | xt);\n            }\n            function lp(n, t) {\n                return t = typeof t == \"function\" ? t : i, An(n, Ln | xt, t);\n            }\n            function pp(n, t) {\n                return t == null || Bs(n, t, V(t));\n            }\n            function bn(n, t) {\n                return n === t || n !== n && t !== t;\n            }\n            var dp = ke(Qr), gp = ke(function(n, t) {\n                return n >= t;\n            }), Pt = Js(function() {\n                return arguments;\n            }()) ? Js : function(n) {\n                return Y(n) && F.call(n, \"callee\") && !Hs.call(n, \"callee\");\n            }, R = p.isArray, vp = gs ? hn(gs) : xc;\n            function an(n) {\n                return n != null && ar(n.length) && !Jn(n);\n            }\n            function Z(n) {\n                return Y(n) && an(n);\n            }\n            function _p(n) {\n                return n === !0 || n === !1 || Y(n) && en(n) == Yt;\n            }\n            var at = Tf || Ni, mp = vs ? hn(vs) : Ec;\n            function wp(n) {\n                return Y(n) && n.nodeType === 1 && !pe(n);\n            }\n            function Pp(n) {\n                if (n == null) return !0;\n                if (an(n) && (R(n) || typeof n == \"string\" || typeof n.splice == \"function\" || at(n) || Bt(n) || Pt(n))) return !n.length;\n                var t = tn(n);\n                if (t == yn || t == Sn) return !n.size;\n                if (he(n)) return !jr(n).length;\n                for(var e in n)if (F.call(n, e)) return !1;\n                return !0;\n            }\n            function Ap(n, t) {\n                return oe(n, t);\n            }\n            function Cp(n, t, e) {\n                e = typeof e == \"function\" ? e : i;\n                var r = e ? e(n, t) : i;\n                return r === i ? oe(n, t, i, e) : !!r;\n            }\n            function Ei(n) {\n                if (!Y(n)) return !1;\n                var t = en(n);\n                return t == we || t == Ga || typeof n.message == \"string\" && typeof n.name == \"string\" && !pe(n);\n            }\n            function Ip(n) {\n                return typeof n == \"number\" && $s(n);\n            }\n            function Jn(n) {\n                if (!K(n)) return !1;\n                var t = en(n);\n                return t == Pe || t == Gi || t == Ba || t == Ka;\n            }\n            function ea(n) {\n                return typeof n == \"number\" && n == b(n);\n            }\n            function ar(n) {\n                return typeof n == \"number\" && n > -1 && n % 1 == 0 && n <= kn;\n            }\n            function K(n) {\n                var t = typeof n;\n                return n != null && (t == \"object\" || t == \"function\");\n            }\n            function Y(n) {\n                return n != null && typeof n == \"object\";\n            }\n            var ra = _s ? hn(_s) : Sc;\n            function xp(n, t) {\n                return n === t || kr(n, t, gi(t));\n            }\n            function Ep(n, t, e) {\n                return e = typeof e == \"function\" ? e : i, kr(n, t, gi(t), e);\n            }\n            function yp(n) {\n                return ia(n) && n != +n;\n            }\n            function Sp(n) {\n                if (ch(n)) throw new S(O);\n                return Xs(n);\n            }\n            function Op(n) {\n                return n === null;\n            }\n            function Rp(n) {\n                return n == null;\n            }\n            function ia(n) {\n                return typeof n == \"number\" || Y(n) && en(n) == Jt;\n            }\n            function pe(n) {\n                if (!Y(n) || en(n) != qn) return !1;\n                var t = He(n);\n                if (t === null) return !0;\n                var e = F.call(t, \"constructor\") && t.constructor;\n                return typeof e == \"function\" && e instanceof e && be.call(e) == Ef;\n            }\n            var yi = ms ? hn(ms) : Oc;\n            function bp(n) {\n                return ea(n) && n >= -kn && n <= kn;\n            }\n            var sa = ws ? hn(ws) : Rc;\n            function or(n) {\n                return typeof n == \"string\" || !R(n) && Y(n) && en(n) == Qt;\n            }\n            function pn(n) {\n                return typeof n == \"symbol\" || Y(n) && en(n) == Ae;\n            }\n            var Bt = Ps ? hn(Ps) : bc;\n            function Tp(n) {\n                return n === i;\n            }\n            function Lp(n) {\n                return Y(n) && tn(n) == Vt;\n            }\n            function Dp(n) {\n                return Y(n) && en(n) == Za;\n            }\n            var Hp = ke(ni), Np = ke(function(n, t) {\n                return n <= t;\n            });\n            function ua(n) {\n                if (!n) return [];\n                if (an(n)) return or(n) ? On(n) : un(n);\n                if (ne && n[ne]) return pf(n[ne]());\n                var t = tn(n), e = t == yn ? qr : t == Sn ? Se : Gt;\n                return e(n);\n            }\n            function Xn(n) {\n                if (!n) return n === 0 ? n : 0;\n                if (n = xn(n), n === ht || n === -ht) {\n                    var t = n < 0 ? -1 : 1;\n                    return t * Wa;\n                }\n                return n === n ? n : 0;\n            }\n            function b(n) {\n                var t = Xn(n), e = t % 1;\n                return t === t ? e ? t - e : t : 0;\n            }\n            function aa(n) {\n                return n ? vt(b(n), 0, Nn) : 0;\n            }\n            function xn(n) {\n                if (typeof n == \"number\") return n;\n                if (pn(n)) return _e;\n                if (K(n)) {\n                    var t = typeof n.valueOf == \"function\" ? n.valueOf() : n;\n                    n = K(t) ? t + \"\" : t;\n                }\n                if (typeof n != \"string\") return n === 0 ? n : +n;\n                n = ys(n);\n                var e = go.test(n);\n                return e || _o.test(n) ? Xo(n.slice(2), e ? 2 : 8) : po.test(n) ? _e : +n;\n            }\n            function oa(n) {\n                return Un(n, on(n));\n            }\n            function $p(n) {\n                return n ? vt(b(n), -kn, kn) : n === 0 ? n : 0;\n            }\n            function W(n) {\n                return n == null ? \"\" : ln(n);\n            }\n            var Up = Ft(function(n, t) {\n                if (he(t) || an(t)) {\n                    Un(t, V(t), n);\n                    return;\n                }\n                for(var e in t)F.call(t, e) && se(n, e, t[e]);\n            }), fa = Ft(function(n, t) {\n                Un(t, on(t), n);\n            }), fr = Ft(function(n, t, e, r) {\n                Un(t, on(t), n, r);\n            }), Wp = Ft(function(n, t, e, r) {\n                Un(t, V(t), n, r);\n            }), Fp = Yn(Zr);\n            function Mp(n, t) {\n                var e = Wt(n);\n                return t == null ? e : qs(e, t);\n            }\n            var qp = L(function(n, t) {\n                n = M(n);\n                var e = -1, r = t.length, s = r > 2 ? t[2] : i;\n                for(s && rn(t[0], t[1], s) && (r = 1); ++e < r;)for(var o = t[e], f = on(o), c = -1, l = f.length; ++c < l;){\n                    var v = f[c], _ = n[v];\n                    (_ === i || bn(_, Nt[v]) && !F.call(n, v)) && (n[v] = o[v]);\n                }\n                return n;\n            }), Bp = L(function(n) {\n                return n.push(i, yu), cn(ca, i, n);\n            });\n            function Gp(n, t) {\n                return Cs(n, x(t, 3), $n);\n            }\n            function zp(n, t) {\n                return Cs(n, x(t, 3), Xr);\n            }\n            function Kp(n, t) {\n                return n == null ? n : Jr(n, x(t, 3), on);\n            }\n            function Yp(n, t) {\n                return n == null ? n : Ys(n, x(t, 3), on);\n            }\n            function Zp(n, t) {\n                return n && $n(n, x(t, 3));\n            }\n            function Jp(n, t) {\n                return n && Xr(n, x(t, 3));\n            }\n            function Xp(n) {\n                return n == null ? [] : ze(n, V(n));\n            }\n            function Qp(n) {\n                return n == null ? [] : ze(n, on(n));\n            }\n            function Si(n, t, e) {\n                var r = n == null ? i : _t(n, t);\n                return r === i ? e : r;\n            }\n            function Vp(n, t) {\n                return n != null && Ru(n, t, Pc);\n            }\n            function Oi(n, t) {\n                return n != null && Ru(n, t, Ac);\n            }\n            var kp = Au(function(n, t, e) {\n                t != null && typeof t.toString != \"function\" && (t = Te.call(t)), n[t] = e;\n            }, bi(fn)), jp = Au(function(n, t, e) {\n                t != null && typeof t.toString != \"function\" && (t = Te.call(t)), F.call(n, t) ? n[t].push(e) : n[t] = [\n                    e\n                ];\n            }, x), nd = L(ae);\n            function V(n) {\n                return an(n) ? Fs(n) : jr(n);\n            }\n            function on(n) {\n                return an(n) ? Fs(n, !0) : Tc(n);\n            }\n            function td(n, t) {\n                var e = {};\n                return t = x(t, 3), $n(n, function(r, s, o) {\n                    zn(e, t(r, s, o), r);\n                }), e;\n            }\n            function ed(n, t) {\n                var e = {};\n                return t = x(t, 3), $n(n, function(r, s, o) {\n                    zn(e, s, t(r, s, o));\n                }), e;\n            }\n            var rd = Ft(function(n, t, e) {\n                Ke(n, t, e);\n            }), ca = Ft(function(n, t, e, r) {\n                Ke(n, t, e, r);\n            }), id = Yn(function(n, t) {\n                var e = {};\n                if (n == null) return e;\n                var r = !1;\n                t = G(t, function(o) {\n                    return o = st(o, n), r || (r = o.length > 1), o;\n                }), Un(n, pi(n), e), r && (e = An(e, Ln | Fn | xt, kc));\n                for(var s = t.length; s--;)si(e, t[s]);\n                return e;\n            });\n            function sd(n, t) {\n                return ha(n, ur(x(t)));\n            }\n            var ud = Yn(function(n, t) {\n                return n == null ? {} : Dc(n, t);\n            });\n            function ha(n, t) {\n                if (n == null) return {};\n                var e = G(pi(n), function(r) {\n                    return [\n                        r\n                    ];\n                });\n                return t = x(t), eu(n, e, function(r, s) {\n                    return t(r, s[0]);\n                });\n            }\n            function ad(n, t, e) {\n                t = st(t, n);\n                var r = -1, s = t.length;\n                for(s || (s = 1, n = i); ++r < s;){\n                    var o = n == null ? i : n[Wn(t[r])];\n                    o === i && (r = s, o = e), n = Jn(o) ? o.call(n) : o;\n                }\n                return n;\n            }\n            function od(n, t, e) {\n                return n == null ? n : fe(n, t, e);\n            }\n            function fd(n, t, e, r) {\n                return r = typeof r == \"function\" ? r : i, n == null ? n : fe(n, t, e, r);\n            }\n            var la = xu(V), pa = xu(on);\n            function cd(n, t, e) {\n                var r = R(n), s = r || at(n) || Bt(n);\n                if (t = x(t, 4), e == null) {\n                    var o = n && n.constructor;\n                    s ? e = r ? new o : [] : K(n) ? e = Jn(o) ? Wt(He(n)) : {} : e = {};\n                }\n                return (s ? mn : $n)(n, function(f, c, l) {\n                    return t(e, f, c, l);\n                }), e;\n            }\n            function hd(n, t) {\n                return n == null ? !0 : si(n, t);\n            }\n            function ld(n, t, e) {\n                return n == null ? n : au(n, t, oi(e));\n            }\n            function pd(n, t, e, r) {\n                return r = typeof r == \"function\" ? r : i, n == null ? n : au(n, t, oi(e), r);\n            }\n            function Gt(n) {\n                return n == null ? [] : Mr(n, V(n));\n            }\n            function dd(n) {\n                return n == null ? [] : Mr(n, on(n));\n            }\n            function gd(n, t, e) {\n                return e === i && (e = t, t = i), e !== i && (e = xn(e), e = e === e ? e : 0), t !== i && (t = xn(t), t = t === t ? t : 0), vt(xn(n), t, e);\n            }\n            function vd(n, t, e) {\n                return t = Xn(t), e === i ? (e = t, t = 0) : e = Xn(e), n = xn(n), Cc(n, t, e);\n            }\n            function _d(n, t, e) {\n                if (e && typeof e != \"boolean\" && rn(n, t, e) && (t = e = i), e === i && (typeof t == \"boolean\" ? (e = t, t = i) : typeof n == \"boolean\" && (e = n, n = i)), n === i && t === i ? (n = 0, t = 1) : (n = Xn(n), t === i ? (t = n, n = 0) : t = Xn(t)), n > t) {\n                    var r = n;\n                    n = t, t = r;\n                }\n                if (e || n % 1 || t % 1) {\n                    var s = Us();\n                    return nn(n + s * (t - n + Jo(\"1e-\" + ((s + \"\").length - 1))), t);\n                }\n                return ei(n, t);\n            }\n            var md = Mt(function(n, t, e) {\n                return t = t.toLowerCase(), n + (e ? da(t) : t);\n            });\n            function da(n) {\n                return Ri(W(n).toLowerCase());\n            }\n            function ga(n) {\n                return n = W(n), n && n.replace(wo, of).replace(Wo, \"\");\n            }\n            function wd(n, t, e) {\n                n = W(n), t = ln(t);\n                var r = n.length;\n                e = e === i ? r : vt(b(e), 0, r);\n                var s = e;\n                return e -= t.length, e >= 0 && n.slice(e, s) == t;\n            }\n            function Pd(n) {\n                return n = W(n), n && ka.test(n) ? n.replace(Yi, ff) : n;\n            }\n            function Ad(n) {\n                return n = W(n), n && io.test(n) ? n.replace(xr, \"\\\\$&\") : n;\n            }\n            var Cd = Mt(function(n, t, e) {\n                return n + (e ? \"-\" : \"\") + t.toLowerCase();\n            }), Id = Mt(function(n, t, e) {\n                return n + (e ? \" \" : \"\") + t.toLowerCase();\n            }), xd = mu(\"toLowerCase\");\n            function Ed(n, t, e) {\n                n = W(n), t = b(t);\n                var r = t ? Dt(n) : 0;\n                if (!t || r >= t) return n;\n                var s = (t - r) / 2;\n                return Ve(We(s), e) + n + Ve(Ue(s), e);\n            }\n            function yd(n, t, e) {\n                n = W(n), t = b(t);\n                var r = t ? Dt(n) : 0;\n                return t && r < t ? n + Ve(t - r, e) : n;\n            }\n            function Sd(n, t, e) {\n                n = W(n), t = b(t);\n                var r = t ? Dt(n) : 0;\n                return t && r < t ? Ve(t - r, e) + n : n;\n            }\n            function Od(n, t, e) {\n                return e || t == null ? t = 0 : t && (t = +t), Nf(W(n).replace(Er, \"\"), t || 0);\n            }\n            function Rd(n, t, e) {\n                return (e ? rn(n, t, e) : t === i) ? t = 1 : t = b(t), ri(W(n), t);\n            }\n            function bd() {\n                var n = arguments, t = W(n[0]);\n                return n.length < 3 ? t : t.replace(n[1], n[2]);\n            }\n            var Td = Mt(function(n, t, e) {\n                return n + (e ? \"_\" : \"\") + t.toLowerCase();\n            });\n            function Ld(n, t, e) {\n                return e && typeof e != \"number\" && rn(n, t, e) && (t = e = i), e = e === i ? Nn : e >>> 0, e ? (n = W(n), n && (typeof t == \"string\" || t != null && !yi(t)) && (t = ln(t), !t && Lt(n)) ? ut(On(n), 0, e) : n.split(t, e)) : [];\n            }\n            var Dd = Mt(function(n, t, e) {\n                return n + (e ? \" \" : \"\") + Ri(t);\n            });\n            function Hd(n, t, e) {\n                return n = W(n), e = e == null ? 0 : vt(b(e), 0, n.length), t = ln(t), n.slice(e, e + t.length) == t;\n            }\n            function Nd(n, t, e) {\n                var r = a.templateSettings;\n                e && rn(n, t, e) && (t = i), n = W(n), t = fr({}, t, r, Eu);\n                var s = fr({}, t.imports, r.imports, Eu), o = V(s), f = Mr(s, o), c, l, v = 0, _ = t.interpolate || Ce, m = \"__p += '\", w = Br((t.escape || Ce).source + \"|\" + _.source + \"|\" + (_ === Zi ? lo : Ce).source + \"|\" + (t.evaluate || Ce).source + \"|$\", \"g\"), I = \"//# sourceURL=\" + (F.call(t, \"sourceURL\") ? (t.sourceURL + \"\").replace(/\\s/g, \" \") : \"lodash.templateSources[\" + ++Go + \"]\") + `\n`;\n                n.replace(w, function(y, D, N, dn, sn, gn) {\n                    return N || (N = dn), m += n.slice(v, gn).replace(Po, cf), D && (c = !0, m += `' +\n__e(` + D + `) +\n'`), sn && (l = !0, m += `';\n` + sn + `;\n__p += '`), N && (m += `' +\n((__t = (` + N + `)) == null ? '' : __t) +\n'`), v = gn + y.length, y;\n                }), m += `';\n`;\n                var E = F.call(t, \"variable\") && t.variable;\n                if (!E) m = `with (obj) {\n` + m + `\n}\n`;\n                else if (co.test(E)) throw new S(En);\n                m = (l ? m.replace(Ja, \"\") : m).replace(Xa, \"$1\").replace(Qa, \"$1;\"), m = \"function(\" + (E || \"obj\") + `) {\n` + (E ? \"\" : `obj || (obj = {});\n`) + \"var __t, __p = ''\" + (c ? \", __e = _.escape\" : \"\") + (l ? `, __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n` : `;\n`) + m + `return __p\n}`;\n                var T = _a(function() {\n                    return U(o, I + \"return \" + m).apply(i, f);\n                });\n                if (T.source = m, Ei(T)) throw T;\n                return T;\n            }\n            function $d(n) {\n                return W(n).toLowerCase();\n            }\n            function Ud(n) {\n                return W(n).toUpperCase();\n            }\n            function Wd(n, t, e) {\n                if (n = W(n), n && (e || t === i)) return ys(n);\n                if (!n || !(t = ln(t))) return n;\n                var r = On(n), s = On(t), o = Ss(r, s), f = Os(r, s) + 1;\n                return ut(r, o, f).join(\"\");\n            }\n            function Fd(n, t, e) {\n                if (n = W(n), n && (e || t === i)) return n.slice(0, bs(n) + 1);\n                if (!n || !(t = ln(t))) return n;\n                var r = On(n), s = Os(r, On(t)) + 1;\n                return ut(r, 0, s).join(\"\");\n            }\n            function Md(n, t, e) {\n                if (n = W(n), n && (e || t === i)) return n.replace(Er, \"\");\n                if (!n || !(t = ln(t))) return n;\n                var r = On(n), s = Ss(r, On(t));\n                return ut(r, s).join(\"\");\n            }\n            function qd(n, t) {\n                var e = La, r = Da;\n                if (K(t)) {\n                    var s = \"separator\" in t ? t.separator : s;\n                    e = \"length\" in t ? b(t.length) : e, r = \"omission\" in t ? ln(t.omission) : r;\n                }\n                n = W(n);\n                var o = n.length;\n                if (Lt(n)) {\n                    var f = On(n);\n                    o = f.length;\n                }\n                if (e >= o) return n;\n                var c = e - Dt(r);\n                if (c < 1) return r;\n                var l = f ? ut(f, 0, c).join(\"\") : n.slice(0, c);\n                if (s === i) return l + r;\n                if (f && (c += l.length - c), yi(s)) {\n                    if (n.slice(c).search(s)) {\n                        var v, _ = l;\n                        for(s.global || (s = Br(s.source, W(Ji.exec(s)) + \"g\")), s.lastIndex = 0; v = s.exec(_);)var m = v.index;\n                        l = l.slice(0, m === i ? c : m);\n                    }\n                } else if (n.indexOf(ln(s), c) != c) {\n                    var w = l.lastIndexOf(s);\n                    w > -1 && (l = l.slice(0, w));\n                }\n                return l + r;\n            }\n            function Bd(n) {\n                return n = W(n), n && Va.test(n) ? n.replace(Ki, _f) : n;\n            }\n            var Gd = Mt(function(n, t, e) {\n                return n + (e ? \" \" : \"\") + t.toUpperCase();\n            }), Ri = mu(\"toUpperCase\");\n            function va(n, t, e) {\n                return n = W(n), t = e ? i : t, t === i ? lf(n) ? Pf(n) : ef(n) : n.match(t) || [];\n            }\n            var _a = L(function(n, t) {\n                try {\n                    return cn(n, i, t);\n                } catch (e) {\n                    return Ei(e) ? e : new S(e);\n                }\n            }), zd = Yn(function(n, t) {\n                return mn(t, function(e) {\n                    e = Wn(e), zn(n, e, Ii(n[e], n));\n                }), n;\n            });\n            function Kd(n) {\n                var t = n == null ? 0 : n.length, e = x();\n                return n = t ? G(n, function(r) {\n                    if (typeof r[1] != \"function\") throw new wn($);\n                    return [\n                        e(r[0]),\n                        r[1]\n                    ];\n                }) : [], L(function(r) {\n                    for(var s = -1; ++s < t;){\n                        var o = n[s];\n                        if (cn(o[0], this, r)) return cn(o[1], this, r);\n                    }\n                });\n            }\n            function Yd(n) {\n                return _c(An(n, Ln));\n            }\n            function bi(n) {\n                return function() {\n                    return n;\n                };\n            }\n            function Zd(n, t) {\n                return n == null || n !== n ? t : n;\n            }\n            var Jd = Pu(), Xd = Pu(!0);\n            function fn(n) {\n                return n;\n            }\n            function Ti(n) {\n                return Qs(typeof n == \"function\" ? n : An(n, Ln));\n            }\n            function Qd(n) {\n                return ks(An(n, Ln));\n            }\n            function Vd(n, t) {\n                return js(n, An(t, Ln));\n            }\n            var kd = L(function(n, t) {\n                return function(e) {\n                    return ae(e, n, t);\n                };\n            }), jd = L(function(n, t) {\n                return function(e) {\n                    return ae(n, e, t);\n                };\n            });\n            function Li(n, t, e) {\n                var r = V(t), s = ze(t, r);\n                e == null && !(K(t) && (s.length || !r.length)) && (e = t, t = n, n = this, s = ze(t, V(t)));\n                var o = !(K(e) && \"chain\" in e) || !!e.chain, f = Jn(n);\n                return mn(s, function(c) {\n                    var l = t[c];\n                    n[c] = l, f && (n.prototype[c] = function() {\n                        var v = this.__chain__;\n                        if (o || v) {\n                            var _ = n(this.__wrapped__), m = _.__actions__ = un(this.__actions__);\n                            return m.push({\n                                func: l,\n                                args: arguments,\n                                thisArg: n\n                            }), _.__chain__ = v, _;\n                        }\n                        return l.apply(n, nt([\n                            this.value()\n                        ], arguments));\n                    });\n                }), n;\n            }\n            function ng() {\n                return k._ === this && (k._ = yf), this;\n            }\n            function Di() {}\n            function tg(n) {\n                return n = b(n), L(function(t) {\n                    return nu(t, n);\n                });\n            }\n            var eg = ci(G), rg = ci(As), ig = ci(Nr);\n            function ma(n) {\n                return _i(n) ? $r(Wn(n)) : Hc(n);\n            }\n            function sg(n) {\n                return function(t) {\n                    return n == null ? i : _t(n, t);\n                };\n            }\n            var ug = Cu(), ag = Cu(!0);\n            function Hi() {\n                return [];\n            }\n            function Ni() {\n                return !1;\n            }\n            function og() {\n                return {};\n            }\n            function fg() {\n                return \"\";\n            }\n            function cg() {\n                return !0;\n            }\n            function hg(n, t) {\n                if (n = b(n), n < 1 || n > kn) return [];\n                var e = Nn, r = nn(n, Nn);\n                t = x(t), n -= Nn;\n                for(var s = Fr(r, t); ++e < n;)t(e);\n                return s;\n            }\n            function lg(n) {\n                return R(n) ? G(n, Wn) : pn(n) ? [\n                    n\n                ] : un(Wu(W(n)));\n            }\n            function pg(n) {\n                var t = ++xf;\n                return W(n) + t;\n            }\n            var dg = Qe(function(n, t) {\n                return n + t;\n            }, 0), gg = hi(\"ceil\"), vg = Qe(function(n, t) {\n                return n / t;\n            }, 1), _g = hi(\"floor\");\n            function mg(n) {\n                return n && n.length ? Ge(n, fn, Qr) : i;\n            }\n            function wg(n, t) {\n                return n && n.length ? Ge(n, x(t, 2), Qr) : i;\n            }\n            function Pg(n) {\n                return xs(n, fn);\n            }\n            function Ag(n, t) {\n                return xs(n, x(t, 2));\n            }\n            function Cg(n) {\n                return n && n.length ? Ge(n, fn, ni) : i;\n            }\n            function Ig(n, t) {\n                return n && n.length ? Ge(n, x(t, 2), ni) : i;\n            }\n            var xg = Qe(function(n, t) {\n                return n * t;\n            }, 1), Eg = hi(\"round\"), yg = Qe(function(n, t) {\n                return n - t;\n            }, 0);\n            function Sg(n) {\n                return n && n.length ? Wr(n, fn) : 0;\n            }\n            function Og(n, t) {\n                return n && n.length ? Wr(n, x(t, 2)) : 0;\n            }\n            return a.after = Ql, a.ary = Xu, a.assign = Up, a.assignIn = fa, a.assignInWith = fr, a.assignWith = Wp, a.at = Fp, a.before = Qu, a.bind = Ii, a.bindAll = zd, a.bindKey = Vu, a.castArray = op, a.chain = Yu, a.chunk = _h, a.compact = mh, a.concat = wh, a.cond = Kd, a.conforms = Yd, a.constant = bi, a.countBy = Sl, a.create = Mp, a.curry = ku, a.curryRight = ju, a.debounce = na, a.defaults = qp, a.defaultsDeep = Bp, a.defer = Vl, a.delay = kl, a.difference = Ph, a.differenceBy = Ah, a.differenceWith = Ch, a.drop = Ih, a.dropRight = xh, a.dropRightWhile = Eh, a.dropWhile = yh, a.fill = Sh, a.filter = Rl, a.flatMap = Ll, a.flatMapDeep = Dl, a.flatMapDepth = Hl, a.flatten = Bu, a.flattenDeep = Oh, a.flattenDepth = Rh, a.flip = jl, a.flow = Jd, a.flowRight = Xd, a.fromPairs = bh, a.functions = Xp, a.functionsIn = Qp, a.groupBy = Nl, a.initial = Lh, a.intersection = Dh, a.intersectionBy = Hh, a.intersectionWith = Nh, a.invert = kp, a.invertBy = jp, a.invokeMap = Ul, a.iteratee = Ti, a.keyBy = Wl, a.keys = V, a.keysIn = on, a.map = rr, a.mapKeys = td, a.mapValues = ed, a.matches = Qd, a.matchesProperty = Vd, a.memoize = sr, a.merge = rd, a.mergeWith = ca, a.method = kd, a.methodOf = jd, a.mixin = Li, a.negate = ur, a.nthArg = tg, a.omit = id, a.omitBy = sd, a.once = np, a.orderBy = Fl, a.over = eg, a.overArgs = tp, a.overEvery = rg, a.overSome = ig, a.partial = xi, a.partialRight = ta, a.partition = Ml, a.pick = ud, a.pickBy = ha, a.property = ma, a.propertyOf = sg, a.pull = Fh, a.pullAll = zu, a.pullAllBy = Mh, a.pullAllWith = qh, a.pullAt = Bh, a.range = ug, a.rangeRight = ag, a.rearg = ep, a.reject = Gl, a.remove = Gh, a.rest = rp, a.reverse = Ai, a.sampleSize = Kl, a.set = od, a.setWith = fd, a.shuffle = Yl, a.slice = zh, a.sortBy = Xl, a.sortedUniq = Vh, a.sortedUniqBy = kh, a.split = Ld, a.spread = ip, a.tail = jh, a.take = nl, a.takeRight = tl, a.takeRightWhile = el, a.takeWhile = rl, a.tap = ml, a.throttle = sp, a.thru = er, a.toArray = ua, a.toPairs = la, a.toPairsIn = pa, a.toPath = lg, a.toPlainObject = oa, a.transform = cd, a.unary = up, a.union = il, a.unionBy = sl, a.unionWith = ul, a.uniq = al, a.uniqBy = ol, a.uniqWith = fl, a.unset = hd, a.unzip = Ci, a.unzipWith = Ku, a.update = ld, a.updateWith = pd, a.values = Gt, a.valuesIn = dd, a.without = cl, a.words = va, a.wrap = ap, a.xor = hl, a.xorBy = ll, a.xorWith = pl, a.zip = dl, a.zipObject = gl, a.zipObjectDeep = vl, a.zipWith = _l, a.entries = la, a.entriesIn = pa, a.extend = fa, a.extendWith = fr, Li(a, a), a.add = dg, a.attempt = _a, a.camelCase = md, a.capitalize = da, a.ceil = gg, a.clamp = gd, a.clone = fp, a.cloneDeep = hp, a.cloneDeepWith = lp, a.cloneWith = cp, a.conformsTo = pp, a.deburr = ga, a.defaultTo = Zd, a.divide = vg, a.endsWith = wd, a.eq = bn, a.escape = Pd, a.escapeRegExp = Ad, a.every = Ol, a.find = bl, a.findIndex = Mu, a.findKey = Gp, a.findLast = Tl, a.findLastIndex = qu, a.findLastKey = zp, a.floor = _g, a.forEach = Zu, a.forEachRight = Ju, a.forIn = Kp, a.forInRight = Yp, a.forOwn = Zp, a.forOwnRight = Jp, a.get = Si, a.gt = dp, a.gte = gp, a.has = Vp, a.hasIn = Oi, a.head = Gu, a.identity = fn, a.includes = $l, a.indexOf = Th, a.inRange = vd, a.invoke = nd, a.isArguments = Pt, a.isArray = R, a.isArrayBuffer = vp, a.isArrayLike = an, a.isArrayLikeObject = Z, a.isBoolean = _p, a.isBuffer = at, a.isDate = mp, a.isElement = wp, a.isEmpty = Pp, a.isEqual = Ap, a.isEqualWith = Cp, a.isError = Ei, a.isFinite = Ip, a.isFunction = Jn, a.isInteger = ea, a.isLength = ar, a.isMap = ra, a.isMatch = xp, a.isMatchWith = Ep, a.isNaN = yp, a.isNative = Sp, a.isNil = Rp, a.isNull = Op, a.isNumber = ia, a.isObject = K, a.isObjectLike = Y, a.isPlainObject = pe, a.isRegExp = yi, a.isSafeInteger = bp, a.isSet = sa, a.isString = or, a.isSymbol = pn, a.isTypedArray = Bt, a.isUndefined = Tp, a.isWeakMap = Lp, a.isWeakSet = Dp, a.join = $h, a.kebabCase = Cd, a.last = In, a.lastIndexOf = Uh, a.lowerCase = Id, a.lowerFirst = xd, a.lt = Hp, a.lte = Np, a.max = mg, a.maxBy = wg, a.mean = Pg, a.meanBy = Ag, a.min = Cg, a.minBy = Ig, a.stubArray = Hi, a.stubFalse = Ni, a.stubObject = og, a.stubString = fg, a.stubTrue = cg, a.multiply = xg, a.nth = Wh, a.noConflict = ng, a.noop = Di, a.now = ir, a.pad = Ed, a.padEnd = yd, a.padStart = Sd, a.parseInt = Od, a.random = _d, a.reduce = ql, a.reduceRight = Bl, a.repeat = Rd, a.replace = bd, a.result = ad, a.round = Eg, a.runInContext = h, a.sample = zl, a.size = Zl, a.snakeCase = Td, a.some = Jl, a.sortedIndex = Kh, a.sortedIndexBy = Yh, a.sortedIndexOf = Zh, a.sortedLastIndex = Jh, a.sortedLastIndexBy = Xh, a.sortedLastIndexOf = Qh, a.startCase = Dd, a.startsWith = Hd, a.subtract = yg, a.sum = Sg, a.sumBy = Og, a.template = Nd, a.times = hg, a.toFinite = Xn, a.toInteger = b, a.toLength = aa, a.toLower = $d, a.toNumber = xn, a.toSafeInteger = $p, a.toString = W, a.toUpper = Ud, a.trim = Wd, a.trimEnd = Fd, a.trimStart = Md, a.truncate = qd, a.unescape = Bd, a.uniqueId = pg, a.upperCase = Gd, a.upperFirst = Ri, a.each = Zu, a.eachRight = Ju, a.first = Gu, Li(a, function() {\n                var n = {};\n                return $n(a, function(t, e) {\n                    F.call(a.prototype, e) || (n[e] = t);\n                }), n;\n            }(), {\n                chain: !1\n            }), a.VERSION = d, mn([\n                \"bind\",\n                \"bindKey\",\n                \"curry\",\n                \"curryRight\",\n                \"partial\",\n                \"partialRight\"\n            ], function(n) {\n                a[n].placeholder = a;\n            }), mn([\n                \"drop\",\n                \"take\"\n            ], function(n, t) {\n                H.prototype[n] = function(e) {\n                    e = e === i ? 1 : Q(b(e), 0);\n                    var r = this.__filtered__ && !t ? new H(this) : this.clone();\n                    return r.__filtered__ ? r.__takeCount__ = nn(e, r.__takeCount__) : r.__views__.push({\n                        size: nn(e, Nn),\n                        type: n + (r.__dir__ < 0 ? \"Right\" : \"\")\n                    }), r;\n                }, H.prototype[n + \"Right\"] = function(e) {\n                    return this.reverse()[n](e).reverse();\n                };\n            }), mn([\n                \"filter\",\n                \"map\",\n                \"takeWhile\"\n            ], function(n, t) {\n                var e = t + 1, r = e == Bi || e == Ua;\n                H.prototype[n] = function(s) {\n                    var o = this.clone();\n                    return o.__iteratees__.push({\n                        iteratee: x(s, 3),\n                        type: e\n                    }), o.__filtered__ = o.__filtered__ || r, o;\n                };\n            }), mn([\n                \"head\",\n                \"last\"\n            ], function(n, t) {\n                var e = \"take\" + (t ? \"Right\" : \"\");\n                H.prototype[n] = function() {\n                    return this[e](1).value()[0];\n                };\n            }), mn([\n                \"initial\",\n                \"tail\"\n            ], function(n, t) {\n                var e = \"drop\" + (t ? \"\" : \"Right\");\n                H.prototype[n] = function() {\n                    return this.__filtered__ ? new H(this) : this[e](1);\n                };\n            }), H.prototype.compact = function() {\n                return this.filter(fn);\n            }, H.prototype.find = function(n) {\n                return this.filter(n).head();\n            }, H.prototype.findLast = function(n) {\n                return this.reverse().find(n);\n            }, H.prototype.invokeMap = L(function(n, t) {\n                return typeof n == \"function\" ? new H(this) : this.map(function(e) {\n                    return ae(e, n, t);\n                });\n            }), H.prototype.reject = function(n) {\n                return this.filter(ur(x(n)));\n            }, H.prototype.slice = function(n, t) {\n                n = b(n);\n                var e = this;\n                return e.__filtered__ && (n > 0 || t < 0) ? new H(e) : (n < 0 ? e = e.takeRight(-n) : n && (e = e.drop(n)), t !== i && (t = b(t), e = t < 0 ? e.dropRight(-t) : e.take(t - n)), e);\n            }, H.prototype.takeRightWhile = function(n) {\n                return this.reverse().takeWhile(n).reverse();\n            }, H.prototype.toArray = function() {\n                return this.take(Nn);\n            }, $n(H.prototype, function(n, t) {\n                var e = /^(?:filter|find|map|reject)|While$/.test(t), r = /^(?:head|last)$/.test(t), s = a[r ? \"take\" + (t == \"last\" ? \"Right\" : \"\") : t], o = r || /^find/.test(t);\n                s && (a.prototype[t] = function() {\n                    var f = this.__wrapped__, c = r ? [\n                        1\n                    ] : arguments, l = f instanceof H, v = c[0], _ = l || R(f), m = function(D) {\n                        var N = s.apply(a, nt([\n                            D\n                        ], c));\n                        return r && w ? N[0] : N;\n                    };\n                    _ && e && typeof v == \"function\" && v.length != 1 && (l = _ = !1);\n                    var w = this.__chain__, I = !!this.__actions__.length, E = o && !w, T = l && !I;\n                    if (!o && _) {\n                        f = T ? f : new H(this);\n                        var y = n.apply(f, c);\n                        return y.__actions__.push({\n                            func: er,\n                            args: [\n                                m\n                            ],\n                            thisArg: i\n                        }), new Pn(y, w);\n                    }\n                    return E && T ? n.apply(this, c) : (y = this.thru(m), E ? r ? y.value()[0] : y.value() : y);\n                });\n            }), mn([\n                \"pop\",\n                \"push\",\n                \"shift\",\n                \"sort\",\n                \"splice\",\n                \"unshift\"\n            ], function(n) {\n                var t = Oe[n], e = /^(?:push|sort|unshift)$/.test(n) ? \"tap\" : \"thru\", r = /^(?:pop|shift)$/.test(n);\n                a.prototype[n] = function() {\n                    var s = arguments;\n                    if (r && !this.__chain__) {\n                        var o = this.value();\n                        return t.apply(R(o) ? o : [], s);\n                    }\n                    return this[e](function(f) {\n                        return t.apply(R(f) ? f : [], s);\n                    });\n                };\n            }), $n(H.prototype, function(n, t) {\n                var e = a[t];\n                if (e) {\n                    var r = e.name + \"\";\n                    F.call(Ut, r) || (Ut[r] = []), Ut[r].push({\n                        name: t,\n                        func: e\n                    });\n                }\n            }), Ut[Xe(i, ct).name] = [\n                {\n                    name: \"wrapper\",\n                    func: i\n                }\n            ], H.prototype.clone = Bf, H.prototype.reverse = Gf, H.prototype.value = zf, a.prototype.at = wl, a.prototype.chain = Pl, a.prototype.commit = Al, a.prototype.next = Cl, a.prototype.plant = xl, a.prototype.reverse = El, a.prototype.toJSON = a.prototype.valueOf = a.prototype.value = yl, a.prototype.first = a.prototype.head, ne && (a.prototype[ne] = Il), a;\n        }, Ht = Af();\n        lt ? ((lt.exports = Ht)._ = Ht, Tr._ = Ht) : k._ = Ht;\n    }).call(ge);\n})(Ui, Ui.exports);\nvar Bg = Object.defineProperty, Gg = Object.defineProperties, zg = Object.getOwnPropertyDescriptors, Ea = Object.getOwnPropertySymbols, Kg = Object.prototype.hasOwnProperty, Yg = Object.prototype.propertyIsEnumerable, ya = (C, u, i)=>u in C ? Bg(C, u, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: i\n    }) : C[u] = i, cr = (C, u)=>{\n    for(var i in u || (u = {}))Kg.call(u, i) && ya(C, i, u[i]);\n    if (Ea) for (var i of Ea(u))Yg.call(u, i) && ya(C, i, u[i]);\n    return C;\n}, Zg = (C, u)=>Gg(C, zg(u));\nfunction ft(C, u, i) {\n    var d;\n    const P = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseChainId)(C);\n    return ((d = u.rpcMap) == null ? void 0 : d[P.reference]) || `${qg}?chainId=${P.namespace}:${P.reference}&projectId=${i}`;\n}\nfunction Ct(C) {\n    return C.includes(\":\") ? C.split(\":\")[1] : C;\n}\nfunction Sa(C) {\n    return C.map((u)=>`${u.split(\":\")[0]}:${u.split(\":\")[1]}`);\n}\nfunction Jg(C, u) {\n    const i = Object.keys(u.namespaces).filter((P)=>P.includes(C));\n    if (!i.length) return [];\n    const d = [];\n    return i.forEach((P)=>{\n        const O = u.namespaces[P].accounts;\n        d.push(...O);\n    }), d;\n}\nfunction Xg(C = {}, u = {}) {\n    const i = Oa(C), d = Oa(u);\n    return Ui.exports.merge(i, d);\n}\nfunction Oa(C) {\n    var u, i, d, P;\n    const O = {};\n    if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(C)) return O;\n    for (const [$, En] of Object.entries(C)){\n        const zt = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isCaipNamespace)($) ? [\n            $\n        ] : En.chains, pr = En.methods || [], It = En.events || [], Ln = En.rpcMap || {}, Fn = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)($);\n        O[Fn] = Zg(cr(cr({}, O[Fn]), En), {\n            chains: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.mergeArrays)(zt, (u = O[Fn]) == null ? void 0 : u.chains),\n            methods: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.mergeArrays)(pr, (i = O[Fn]) == null ? void 0 : i.methods),\n            events: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.mergeArrays)(It, (d = O[Fn]) == null ? void 0 : d.events),\n            rpcMap: cr(cr({}, Ln), (P = O[Fn]) == null ? void 0 : P.rpcMap)\n        });\n    }\n    return O;\n}\nfunction Qg(C) {\n    return C.includes(\":\") ? C.split(\":\")[2] : C;\n}\nfunction Vg(C) {\n    const u = {};\n    for (const [i, d] of Object.entries(C)){\n        const P = d.methods || [], O = d.events || [], $ = d.accounts || [], En = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isCaipNamespace)(i) ? [\n            i\n        ] : d.chains ? d.chains : Sa(d.accounts);\n        u[i] = {\n            chains: En,\n            methods: P,\n            events: O,\n            accounts: $\n        };\n    }\n    return u;\n}\nfunction Wi(C) {\n    return typeof C == \"number\" ? C : C.includes(\"0x\") ? parseInt(C, 16) : C.includes(\":\") ? Number(C.split(\":\")[1]) : Number(C);\n}\nconst Ra = {}, z = (C)=>Ra[C], Fi = (C, u)=>{\n    Ra[C] = u;\n};\nclass kg {\n    constructor(u){\n        this.name = \"polkadot\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]) || [] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            const P = Ct(i);\n            u[P] = this.createHttpProvider(P, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nclass jg {\n    constructor(u){\n        this.name = \"eip155\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.httpProviders = this.createHttpProviders(), this.chainId = parseInt(this.getDefaultChain());\n    }\n    async request(u) {\n        switch(u.request.method){\n            case \"eth_requestAccounts\":\n                return this.getAccounts();\n            case \"eth_accounts\":\n                return this.getAccounts();\n            case \"wallet_switchEthereumChain\":\n                return await this.handleSwitchChain(u);\n            case \"eth_chainId\":\n                return parseInt(this.getDefaultChain());\n        }\n        return this.namespace.methods.includes(u.request.method) ? await this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(parseInt(u), i), this.chainId = parseInt(u), this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId.toString();\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(`${this.name}:${u}`, this.namespace, this.client.core.projectId);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__.HttpConnection(d, z(\"disableProviderPing\")));\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            const P = parseInt(Ct(i));\n            u[P] = this.createHttpProvider(P, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    getHttpProvider() {\n        const u = this.chainId, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    async handleSwitchChain(u) {\n        var i, d;\n        let P = u.request.params ? (i = u.request.params[0]) == null ? void 0 : i.chainId : \"0x0\";\n        P = P.startsWith(\"0x\") ? P : `0x${P}`;\n        const O = parseInt(P, 16);\n        if (this.isChainApproved(O)) this.setDefaultChain(`${O}`);\n        else if (this.namespace.methods.includes(\"wallet_switchEthereumChain\")) await this.client.request({\n            topic: u.topic,\n            request: {\n                method: u.request.method,\n                params: [\n                    {\n                        chainId: P\n                    }\n                ]\n            },\n            chainId: (d = this.namespace.chains) == null ? void 0 : d[0]\n        }), this.setDefaultChain(`${O}`);\n        else throw new Error(`Failed to switch to chain 'eip155:${O}'. The chain is not approved or the wallet does not support 'wallet_switchEthereumChain' method.`);\n        return null;\n    }\n    isChainApproved(u) {\n        return this.namespace.chains.includes(`${this.name}:${u}`);\n    }\n}\nclass nv {\n    constructor(u){\n        this.name = \"solana\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            const P = Ct(i);\n            u[P] = this.createHttpProvider(P, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nclass tv {\n    constructor(u){\n        this.name = \"cosmos\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            const P = Ct(i);\n            u[P] = this.createHttpProvider(P, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nclass ev {\n    constructor(u){\n        this.name = \"cip34\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            const d = this.getCardanoRPCUrl(i), P = Ct(i);\n            u[P] = this.createHttpProvider(P, d);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    getCardanoRPCUrl(u) {\n        const i = this.namespace.rpcMap;\n        if (i) return i[u];\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || this.getCardanoRPCUrl(u);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nclass rv {\n    constructor(u){\n        this.name = \"elrond\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            const P = Ct(i);\n            u[P] = this.createHttpProvider(P, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nclass iv {\n    constructor(u){\n        this.name = \"multiversx\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        this.httpProviders[u] || this.setHttpProvider(u, i), this.chainId = u, this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${u}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? [\n            ...new Set(u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            const P = Ct(i);\n            u[P] = this.createHttpProvider(P, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(u, this.namespace, this.client.core.projectId);\n        if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nclass sv {\n    constructor(u){\n        this.name = \"near\", this.namespace = u.namespace, this.events = z(\"events\"), this.client = z(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(u) {\n        this.namespace = Object.assign(this.namespace, u);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const u = this.namespace.chains[0];\n        if (!u) throw new Error(\"ChainId not found\");\n        return u.split(\":\")[1];\n    }\n    request(u) {\n        return this.namespace.methods.includes(u.request.method) ? this.client.request(u) : this.getHttpProvider().request(u.request);\n    }\n    setDefaultChain(u, i) {\n        if (this.chainId = u, !this.httpProviders[u]) {\n            const d = i || ft(`${this.name}:${u}`, this.namespace);\n            if (!d) throw new Error(`No RPC url provided for chainId: ${u}`);\n            this.setHttpProvider(u, d);\n        }\n        this.events.emit(Vn.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getAccounts() {\n        const u = this.namespace.accounts;\n        return u ? u.filter((i)=>i.split(\":\")[1] === this.chainId.toString()).map((i)=>i.split(\":\")[2]) || [] : [];\n    }\n    createHttpProviders() {\n        const u = {};\n        return this.namespace.chains.forEach((i)=>{\n            var d;\n            u[i] = this.createHttpProvider(i, (d = this.namespace.rpcMap) == null ? void 0 : d[i]);\n        }), u;\n    }\n    getHttpProvider() {\n        const u = `${this.name}:${this.chainId}`, i = this.httpProviders[u];\n        if (typeof i > \"u\") throw new Error(`JSON-RPC provider for ${u} not found`);\n        return i;\n    }\n    setHttpProvider(u, i) {\n        const d = this.createHttpProvider(u, i);\n        d && (this.httpProviders[u] = d);\n    }\n    createHttpProvider(u, i) {\n        const d = i || ft(u, this.namespace);\n        return typeof d > \"u\" ? void 0 : new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_2__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"](d, z(\"disableProviderPing\")));\n    }\n}\nvar uv = Object.defineProperty, av = Object.defineProperties, ov = Object.getOwnPropertyDescriptors, ba = Object.getOwnPropertySymbols, fv = Object.prototype.hasOwnProperty, cv = Object.prototype.propertyIsEnumerable, Ta = (C, u, i)=>u in C ? uv(C, u, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: i\n    }) : C[u] = i, hr = (C, u)=>{\n    for(var i in u || (u = {}))fv.call(u, i) && Ta(C, i, u[i]);\n    if (ba) for (var i of ba(u))cv.call(u, i) && Ta(C, i, u[i]);\n    return C;\n}, Mi = (C, u)=>av(C, ov(u));\nclass lr {\n    constructor(u){\n        this.events = new (events__WEBPACK_IMPORTED_MODULE_3___default()), this.rpcProviders = {}, this.shouldAbortPairingAttempt = !1, this.maxPairingAttempts = 10, this.disableProviderPing = !1, this.providerOpts = u, this.logger = typeof u?.logger < \"u\" && typeof u?.logger != \"string\" ? u.logger : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getDefaultLoggerOptions)({\n            level: u?.logger || Ia\n        })), this.disableProviderPing = u?.disableProviderPing || !1;\n    }\n    static async init(u) {\n        const i = new lr(u);\n        return await i.initialize(), i;\n    }\n    async request(u, i) {\n        const [d, P] = this.validateChain(i);\n        if (!this.session) throw new Error(\"Please call connect() before request()\");\n        return await this.getProvider(d).request({\n            request: hr({}, u),\n            chainId: `${d}:${P}`,\n            topic: this.session.topic\n        });\n    }\n    sendAsync(u, i, d) {\n        const P = new Date().getTime();\n        this.request(u, d).then((O)=>i(null, (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_4__.formatJsonRpcResult)(P, O))).catch((O)=>i(O, void 0));\n    }\n    async enable() {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        return this.session || await this.connect({\n            namespaces: this.namespaces,\n            optionalNamespaces: this.optionalNamespaces,\n            sessionProperties: this.sessionProperties\n        }), await this.requestAccounts();\n    }\n    async disconnect() {\n        var u;\n        if (!this.session) throw new Error(\"Please call connect() before enable()\");\n        await this.client.disconnect({\n            topic: (u = this.session) == null ? void 0 : u.topic,\n            reason: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")\n        }), await this.cleanup();\n    }\n    async connect(u) {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        if (this.setNamespaces(u), await this.cleanupPendingPairings(), !u.skipPairing) return await this.pair(u.pairingTopic);\n    }\n    on(u, i) {\n        this.events.on(u, i);\n    }\n    once(u, i) {\n        this.events.once(u, i);\n    }\n    removeListener(u, i) {\n        this.events.removeListener(u, i);\n    }\n    off(u, i) {\n        this.events.off(u, i);\n    }\n    get isWalletConnect() {\n        return !0;\n    }\n    async pair(u) {\n        this.shouldAbortPairingAttempt = !1;\n        let i = 0;\n        do {\n            if (this.shouldAbortPairingAttempt) throw new Error(\"Pairing aborted\");\n            if (i >= this.maxPairingAttempts) throw new Error(\"Max auto pairing attempts reached\");\n            const { uri: d, approval: P } = await this.client.connect({\n                pairingTopic: u,\n                requiredNamespaces: this.namespaces,\n                optionalNamespaces: this.optionalNamespaces,\n                sessionProperties: this.sessionProperties\n            });\n            d && (this.uri = d, this.events.emit(\"display_uri\", d)), await P().then((O)=>{\n                this.session = O, this.namespaces || (this.namespaces = Vg(O.namespaces), this.persist(\"namespaces\", this.namespaces));\n            }).catch((O)=>{\n                if (O.message !== _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_6__.PROPOSAL_EXPIRY_MESSAGE) throw O;\n                i++;\n            });\n        }while (!this.session);\n        return this.onConnect(), this.session;\n    }\n    setDefaultChain(u, i) {\n        try {\n            if (!this.session) return;\n            const [d, P] = this.validateChain(u);\n            this.getProvider(d).setDefaultChain(P, i);\n        } catch (d) {\n            if (!/Please call connect/.test(d.message)) throw d;\n        }\n    }\n    async cleanupPendingPairings(u = {}) {\n        this.logger.info(\"Cleaning up inactive pairings...\");\n        const i = this.client.pairing.getAll();\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidArray)(i)) {\n            for (const d of i)u.deletePairings ? this.client.core.expirer.set(d.topic, 0) : await this.client.core.relayer.subscriber.unsubscribe(d.topic);\n            this.logger.info(`Inactive pairings cleared: ${i.length}`);\n        }\n    }\n    abortPairingAttempt() {\n        this.shouldAbortPairingAttempt = !0;\n    }\n    async checkStorage() {\n        if (this.namespaces = await this.getFromStore(\"namespaces\"), this.optionalNamespaces = await this.getFromStore(\"optionalNamespaces\") || {}, this.client.session.length) {\n            const u = this.client.session.keys.length - 1;\n            this.session = this.client.session.get(this.client.session.keys[u]), this.createProviders();\n        }\n    }\n    async initialize() {\n        this.logger.trace(\"Initialized\"), await this.createClient(), await this.checkStorage(), this.registerEventListeners();\n    }\n    async createClient() {\n        this.client = this.providerOpts.client || await _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_6__[\"default\"].init({\n            logger: this.providerOpts.logger || Ia,\n            relayUrl: this.providerOpts.relayUrl || Wg,\n            projectId: this.providerOpts.projectId,\n            metadata: this.providerOpts.metadata,\n            storageOptions: this.providerOpts.storageOptions,\n            storage: this.providerOpts.storage,\n            name: this.providerOpts.name\n        }), this.logger.trace(\"SignClient Initialized\");\n    }\n    createProviders() {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        if (!this.session) throw new Error(\"Session not initialized. Please call connect() before enable()\");\n        const u = [\n            ...new Set(Object.keys(this.session.namespaces).map((i)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)(i)))\n        ];\n        Fi(\"client\", this.client), Fi(\"events\", this.events), Fi(\"disableProviderPing\", this.disableProviderPing), u.forEach((i)=>{\n            if (!this.session) return;\n            const d = Jg(i, this.session), P = Sa(d), O = Xg(this.namespaces, this.optionalNamespaces), $ = Mi(hr({}, O[i]), {\n                accounts: d,\n                chains: P\n            });\n            switch(i){\n                case \"eip155\":\n                    this.rpcProviders[i] = new jg({\n                        namespace: $\n                    });\n                    break;\n                case \"solana\":\n                    this.rpcProviders[i] = new nv({\n                        namespace: $\n                    });\n                    break;\n                case \"cosmos\":\n                    this.rpcProviders[i] = new tv({\n                        namespace: $\n                    });\n                    break;\n                case \"polkadot\":\n                    this.rpcProviders[i] = new kg({\n                        namespace: $\n                    });\n                    break;\n                case \"cip34\":\n                    this.rpcProviders[i] = new ev({\n                        namespace: $\n                    });\n                    break;\n                case \"elrond\":\n                    this.rpcProviders[i] = new rv({\n                        namespace: $\n                    });\n                    break;\n                case \"multiversx\":\n                    this.rpcProviders[i] = new iv({\n                        namespace: $\n                    });\n                    break;\n                case \"near\":\n                    this.rpcProviders[i] = new sv({\n                        namespace: $\n                    });\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client > \"u\") throw new Error(\"Sign Client is not initialized\");\n        this.client.on(\"session_ping\", (u)=>{\n            this.events.emit(\"session_ping\", u);\n        }), this.client.on(\"session_event\", (u)=>{\n            const { params: i } = u, { event: d } = i;\n            if (d.name === \"accountsChanged\") {\n                const P = d.data;\n                P && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidArray)(P) && this.events.emit(\"accountsChanged\", P.map(Qg));\n            } else if (d.name === \"chainChanged\") {\n                const P = i.chainId, O = i.event.data, $ = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)(P), En = Wi(P) !== Wi(O) ? `${$}:${Wi(O)}` : P;\n                this.onChainChanged(En);\n            } else this.events.emit(d.name, d.data);\n            this.events.emit(\"session_event\", u);\n        }), this.client.on(\"session_update\", ({ topic: u, params: i })=>{\n            var d;\n            const { namespaces: P } = i, O = (d = this.client) == null ? void 0 : d.session.get(u);\n            this.session = Mi(hr({}, O), {\n                namespaces: P\n            }), this.onSessionUpdate(), this.events.emit(\"session_update\", {\n                topic: u,\n                params: i\n            });\n        }), this.client.on(\"session_delete\", async (u)=>{\n            await this.cleanup(), this.events.emit(\"session_delete\", u), this.events.emit(\"disconnect\", Mi(hr({}, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), {\n                data: u.topic\n            }));\n        }), this.on(Vn.DEFAULT_CHAIN_CHANGED, (u)=>{\n            this.onChainChanged(u, !0);\n        });\n    }\n    getProvider(u) {\n        if (!this.rpcProviders[u]) throw new Error(`Provider not found: ${u}`);\n        return this.rpcProviders[u];\n    }\n    onSessionUpdate() {\n        Object.keys(this.rpcProviders).forEach((u)=>{\n            var i;\n            this.getProvider(u).updateNamespace((i = this.session) == null ? void 0 : i.namespaces[u]);\n        });\n    }\n    setNamespaces(u) {\n        const { namespaces: i, optionalNamespaces: d, sessionProperties: P } = u;\n        i && Object.keys(i).length && (this.namespaces = i), d && Object.keys(d).length && (this.optionalNamespaces = d), this.sessionProperties = P, this.persist(\"namespaces\", i), this.persist(\"optionalNamespaces\", d);\n    }\n    validateChain(u) {\n        const [i, d] = u?.split(\":\") || [\n            \"\",\n            \"\"\n        ];\n        if (!this.namespaces || !Object.keys(this.namespaces).length) return [\n            i,\n            d\n        ];\n        if (i && !Object.keys(this.namespaces || {}).map(($)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)($)).includes(i)) throw new Error(`Namespace '${i}' is not configured. Please call connect() first with namespace config.`);\n        if (i && d) return [\n            i,\n            d\n        ];\n        const P = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseNamespaceKey)(Object.keys(this.namespaces)[0]), O = this.rpcProviders[P].getDefaultChain();\n        return [\n            P,\n            O\n        ];\n    }\n    async requestAccounts() {\n        const [u] = this.validateChain();\n        return await this.getProvider(u).requestAccounts();\n    }\n    onChainChanged(u, i = !1) {\n        var d;\n        if (!this.namespaces) return;\n        const [P, O] = this.validateChain(u);\n        i || this.getProvider(P).setDefaultChain(O), ((d = this.namespaces[P]) != null ? d : this.namespaces[`${P}:${O}`]).defaultChain = O, this.persist(\"namespaces\", this.namespaces), this.events.emit(\"chainChanged\", O);\n    }\n    onConnect() {\n        this.createProviders(), this.events.emit(\"connect\", {\n            session: this.session\n        });\n    }\n    async cleanup() {\n        this.session = void 0, this.namespaces = void 0, this.optionalNamespaces = void 0, this.sessionProperties = void 0, this.persist(\"namespaces\", void 0), this.persist(\"optionalNamespaces\", void 0), this.persist(\"sessionProperties\", void 0), await this.cleanupPendingPairings({\n            deletePairings: !0\n        });\n    }\n    persist(u, i) {\n        this.client.core.storage.setItem(`${xa}/${u}`, i);\n    }\n    async getFromStore(u) {\n        return await this.client.core.storage.getItem(`${xa}/${u}`);\n    }\n}\nconst hv = lr;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/universal-provider/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/utils/dist/index.es.js":
/*!****************************************************************!*\
  !*** ../../node_modules/@walletconnect/utils/dist/index.es.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BASE10: () => (/* binding */ J),\n/* harmony export */   BASE16: () => (/* binding */ p),\n/* harmony export */   BASE64: () => (/* binding */ F),\n/* harmony export */   COLON: () => (/* binding */ zn),\n/* harmony export */   DEFAULT_DEPTH: () => (/* binding */ ne),\n/* harmony export */   EMPTY_SPACE: () => (/* binding */ q),\n/* harmony export */   ENV_MAP: () => (/* binding */ m),\n/* harmony export */   INTERNAL_ERRORS: () => (/* binding */ tn),\n/* harmony export */   MemoryStore: () => (/* binding */ tr),\n/* harmony export */   ONE_THOUSAND: () => (/* binding */ Yn),\n/* harmony export */   REACT_NATIVE_PRODUCT: () => (/* binding */ je),\n/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ He),\n/* harmony export */   SDK_ERRORS: () => (/* binding */ nn),\n/* harmony export */   SDK_TYPE: () => (/* binding */ De),\n/* harmony export */   SLASH: () => (/* binding */ $e),\n/* harmony export */   TYPE_0: () => (/* binding */ Q),\n/* harmony export */   TYPE_1: () => (/* binding */ _),\n/* harmony export */   UTF8: () => (/* binding */ H),\n/* harmony export */   appendToQueryString: () => (/* binding */ ke),\n/* harmony export */   assertType: () => (/* binding */ nt),\n/* harmony export */   buildApprovedNamespaces: () => (/* binding */ $t),\n/* harmony export */   calcExpiry: () => (/* binding */ pt),\n/* harmony export */   capitalize: () => (/* binding */ ct),\n/* harmony export */   capitalizeWord: () => (/* binding */ Fe),\n/* harmony export */   createDelayedPromise: () => (/* binding */ at),\n/* harmony export */   createExpiringPromise: () => (/* binding */ ut),\n/* harmony export */   decodeTypeByte: () => (/* binding */ $),\n/* harmony export */   decrypt: () => (/* binding */ Fn),\n/* harmony export */   deriveSymKey: () => (/* binding */ Mn),\n/* harmony export */   deserialize: () => (/* binding */ ee),\n/* harmony export */   encodeTypeByte: () => (/* binding */ Re),\n/* harmony export */   encrypt: () => (/* binding */ xn),\n/* harmony export */   engineEvent: () => (/* binding */ yt),\n/* harmony export */   enumify: () => (/* binding */ it),\n/* harmony export */   formatAccountId: () => (/* binding */ be),\n/* harmony export */   formatAccountWithChain: () => (/* binding */ Tn),\n/* harmony export */   formatChainId: () => (/* binding */ Ee),\n/* harmony export */   formatExpirerTarget: () => (/* binding */ re),\n/* harmony export */   formatIdTarget: () => (/* binding */ dt),\n/* harmony export */   formatMessage: () => (/* binding */ $n),\n/* harmony export */   formatMessageContext: () => (/* binding */ tt),\n/* harmony export */   formatRelayParams: () => (/* binding */ ze),\n/* harmony export */   formatRelayRpcUrl: () => (/* binding */ Xn),\n/* harmony export */   formatTopicTarget: () => (/* binding */ lt),\n/* harmony export */   formatUA: () => (/* binding */ Ke),\n/* harmony export */   formatUri: () => (/* binding */ It),\n/* harmony export */   generateKeyPair: () => (/* binding */ kn),\n/* harmony export */   generateRandomBytes32: () => (/* binding */ Vn),\n/* harmony export */   getAccountsChains: () => (/* binding */ A),\n/* harmony export */   getAccountsFromNamespaces: () => (/* binding */ Un),\n/* harmony export */   getAddressFromAccount: () => (/* binding */ Ne),\n/* harmony export */   getAddressesFromAccounts: () => (/* binding */ An),\n/* harmony export */   getAppMetadata: () => (/* binding */ Qn),\n/* harmony export */   getBrowserOnlineStatus: () => (/* binding */ mn),\n/* harmony export */   getBundleId: () => (/* binding */ Jn),\n/* harmony export */   getChainFromAccount: () => (/* binding */ Oe),\n/* harmony export */   getChainsFromAccounts: () => (/* binding */ Se),\n/* harmony export */   getChainsFromNamespace: () => (/* binding */ L),\n/* harmony export */   getChainsFromNamespaces: () => (/* binding */ _n),\n/* harmony export */   getChainsFromRequiredNamespaces: () => (/* binding */ Cn),\n/* harmony export */   getDeepLink: () => (/* binding */ gt),\n/* harmony export */   getDidAddress: () => (/* binding */ Ie),\n/* harmony export */   getDidAddressSegments: () => (/* binding */ x),\n/* harmony export */   getDidChainId: () => (/* binding */ we),\n/* harmony export */   getEnvironment: () => (/* binding */ T),\n/* harmony export */   getHttpUrl: () => (/* binding */ et),\n/* harmony export */   getInternalError: () => (/* binding */ N),\n/* harmony export */   getJavascriptID: () => (/* binding */ Me),\n/* harmony export */   getJavascriptOS: () => (/* binding */ Ve),\n/* harmony export */   getLastItems: () => (/* binding */ xe),\n/* harmony export */   getNamespacedDidChainId: () => (/* binding */ jn),\n/* harmony export */   getNamespacesChains: () => (/* binding */ Qe),\n/* harmony export */   getNamespacesEventsForChainId: () => (/* binding */ Xe),\n/* harmony export */   getNamespacesMethodsForChainId: () => (/* binding */ Ze),\n/* harmony export */   getNodeOnlineStatus: () => (/* binding */ hn),\n/* harmony export */   getReactNativeOnlineStatus: () => (/* binding */ yn),\n/* harmony export */   getRelayClientMetadata: () => (/* binding */ Zn),\n/* harmony export */   getRelayProtocolApi: () => (/* binding */ Et),\n/* harmony export */   getRelayProtocolName: () => (/* binding */ vt),\n/* harmony export */   getRequiredNamespacesFromNamespaces: () => (/* binding */ jt),\n/* harmony export */   getSdkError: () => (/* binding */ U),\n/* harmony export */   getUniqueValues: () => (/* binding */ Y),\n/* harmony export */   handleDeeplinkRedirect: () => (/* binding */ ht),\n/* harmony export */   hasOverlap: () => (/* binding */ O),\n/* harmony export */   hashKey: () => (/* binding */ Kn),\n/* harmony export */   hashMessage: () => (/* binding */ Ln),\n/* harmony export */   isBrowser: () => (/* binding */ D),\n/* harmony export */   isCaipNamespace: () => (/* binding */ oe),\n/* harmony export */   isConformingNamespaces: () => (/* binding */ fn),\n/* harmony export */   isExpired: () => (/* binding */ mt),\n/* harmony export */   isNode: () => (/* binding */ te),\n/* harmony export */   isOnline: () => (/* binding */ er),\n/* harmony export */   isProposalStruct: () => (/* binding */ Vt),\n/* harmony export */   isReactNative: () => (/* binding */ C),\n/* harmony export */   isSessionCompatible: () => (/* binding */ Dt),\n/* harmony export */   isSessionStruct: () => (/* binding */ Mt),\n/* harmony export */   isTypeOneEnvelope: () => (/* binding */ qn),\n/* harmony export */   isUndefined: () => (/* binding */ w),\n/* harmony export */   isValidAccountId: () => (/* binding */ rn),\n/* harmony export */   isValidAccounts: () => (/* binding */ cn),\n/* harmony export */   isValidActions: () => (/* binding */ un),\n/* harmony export */   isValidArray: () => (/* binding */ k),\n/* harmony export */   isValidChainId: () => (/* binding */ V),\n/* harmony export */   isValidChains: () => (/* binding */ on),\n/* harmony export */   isValidController: () => (/* binding */ Kt),\n/* harmony export */   isValidErrorReason: () => (/* binding */ qt),\n/* harmony export */   isValidEvent: () => (/* binding */ Wt),\n/* harmony export */   isValidId: () => (/* binding */ Ft),\n/* harmony export */   isValidNamespaceAccounts: () => (/* binding */ an),\n/* harmony export */   isValidNamespaceActions: () => (/* binding */ ce),\n/* harmony export */   isValidNamespaceChains: () => (/* binding */ sn),\n/* harmony export */   isValidNamespaceMethodsOrEvents: () => (/* binding */ ie),\n/* harmony export */   isValidNamespaces: () => (/* binding */ ln),\n/* harmony export */   isValidNamespacesChainId: () => (/* binding */ zt),\n/* harmony export */   isValidNamespacesEvent: () => (/* binding */ Jt),\n/* harmony export */   isValidNamespacesRequest: () => (/* binding */ Yt),\n/* harmony export */   isValidNumber: () => (/* binding */ G),\n/* harmony export */   isValidObject: () => (/* binding */ B),\n/* harmony export */   isValidParams: () => (/* binding */ Ht),\n/* harmony export */   isValidRelay: () => (/* binding */ dn),\n/* harmony export */   isValidRelays: () => (/* binding */ xt),\n/* harmony export */   isValidRequest: () => (/* binding */ Bt),\n/* harmony export */   isValidRequestExpiry: () => (/* binding */ Xt),\n/* harmony export */   isValidRequiredNamespaces: () => (/* binding */ Lt),\n/* harmony export */   isValidResponse: () => (/* binding */ Gt),\n/* harmony export */   isValidString: () => (/* binding */ h),\n/* harmony export */   isValidUrl: () => (/* binding */ kt),\n/* harmony export */   mapEntries: () => (/* binding */ st),\n/* harmony export */   mapToObj: () => (/* binding */ rt),\n/* harmony export */   mergeArrays: () => (/* binding */ S),\n/* harmony export */   normalizeNamespaces: () => (/* binding */ se),\n/* harmony export */   objToMap: () => (/* binding */ ot),\n/* harmony export */   parseAccountId: () => (/* binding */ z),\n/* harmony export */   parseChainId: () => (/* binding */ ve),\n/* harmony export */   parseContextNames: () => (/* binding */ Le),\n/* harmony export */   parseExpirerTarget: () => (/* binding */ ft),\n/* harmony export */   parseNamespaceKey: () => (/* binding */ en),\n/* harmony export */   parseRelayParams: () => (/* binding */ Ge),\n/* harmony export */   parseTopic: () => (/* binding */ We),\n/* harmony export */   parseUri: () => (/* binding */ wt),\n/* harmony export */   serialize: () => (/* binding */ Te),\n/* harmony export */   subscribeToBrowserNetworkChange: () => (/* binding */ gn),\n/* harmony export */   subscribeToNetworkChange: () => (/* binding */ nr),\n/* harmony export */   subscribeToReactNativeNetworkChange: () => (/* binding */ vn),\n/* harmony export */   validateDecoding: () => (/* binding */ Hn),\n/* harmony export */   validateEncoding: () => (/* binding */ Ae)\n/* harmony export */ });\n/* harmony import */ var _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stablelib/chacha20poly1305 */ \"(ssr)/../../node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js\");\n/* harmony import */ var _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stablelib/hkdf */ \"(ssr)/../../node_modules/@stablelib/hkdf/lib/hkdf.js\");\n/* harmony import */ var _stablelib_random__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stablelib/random */ \"(ssr)/../../node_modules/@stablelib/random/lib/random.js\");\n/* harmony import */ var _stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stablelib/sha256 */ \"(ssr)/../../node_modules/@stablelib/sha256/lib/sha256.js\");\n/* harmony import */ var _stablelib_x25519__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stablelib/x25519 */ \"(ssr)/../../node_modules/@stablelib/x25519/lib/x25519.js\");\n/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uint8arrays */ \"(ssr)/../../node_modules/uint8arrays/esm/src/index.js\");\n/* harmony import */ var detect_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! detect-browser */ \"(ssr)/../../node_modules/detect-browser/es/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/../../node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @walletconnect/window-getters */ \"(ssr)/../../node_modules/@walletconnect/window-getters/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @walletconnect/window-metadata */ \"(ssr)/../../node_modules/@walletconnect/window-metadata/dist/cjs/index.js\");\n/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! query-string */ \"(ssr)/../../node_modules/query-string/index.js\");\n/* harmony import */ var _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @walletconnect/relay-api */ \"(ssr)/../../node_modules/@walletconnect/relay-api/dist/esm/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nconst K = \":\";\nfunction ve(e) {\n    const [n, t] = e.split(K);\n    return {\n        namespace: n,\n        reference: t\n    };\n}\nfunction Ee(e) {\n    const { namespace: n, reference: t } = e;\n    return [\n        n,\n        t\n    ].join(K);\n}\nfunction z(e) {\n    const [n, t, r] = e.split(K);\n    return {\n        namespace: n,\n        reference: t,\n        address: r\n    };\n}\nfunction be(e) {\n    const { namespace: n, reference: t, address: r } = e;\n    return [\n        n,\n        t,\n        r\n    ].join(K);\n}\nfunction Y(e, n) {\n    const t = [];\n    return e.forEach((r)=>{\n        const o = n(r);\n        t.includes(o) || t.push(o);\n    }), t;\n}\nfunction Ne(e) {\n    const { address: n } = z(e);\n    return n;\n}\nfunction Oe(e) {\n    const { namespace: n, reference: t } = z(e);\n    return Ee({\n        namespace: n,\n        reference: t\n    });\n}\nfunction Tn(e, n) {\n    const { namespace: t, reference: r } = ve(n);\n    return be({\n        namespace: t,\n        reference: r,\n        address: e\n    });\n}\nfunction An(e) {\n    return Y(e, Ne);\n}\nfunction Se(e) {\n    return Y(e, Oe);\n}\nfunction Un(e, n = []) {\n    const t = [];\n    return Object.keys(e).forEach((r)=>{\n        if (n.length && !n.includes(r)) return;\n        const o = e[r];\n        t.push(...o.accounts);\n    }), t;\n}\nfunction _n(e, n = []) {\n    const t = [];\n    return Object.keys(e).forEach((r)=>{\n        if (n.length && !n.includes(r)) return;\n        const o = e[r];\n        t.push(...Se(o.accounts));\n    }), t;\n}\nfunction Cn(e, n = []) {\n    const t = [];\n    return Object.keys(e).forEach((r)=>{\n        if (n.length && !n.includes(r)) return;\n        const o = e[r];\n        t.push(...L(r, o));\n    }), t;\n}\nfunction L(e, n) {\n    return e.includes(\":\") ? [\n        e\n    ] : n.chains || [];\n}\nconst x = (e)=>e?.split(\":\"), we = (e)=>{\n    const n = e && x(e);\n    if (n) return n[3];\n}, jn = (e)=>{\n    const n = e && x(e);\n    if (n) return n[2] + \":\" + n[3];\n}, Ie = (e)=>{\n    const n = e && x(e);\n    if (n) return n.pop();\n}, $n = (e, n)=>{\n    const t = `${e.domain} wants you to sign in with your Ethereum account:`, r = Ie(n), o = e.statement, s = `URI: ${e.aud}`, i = `Version: ${e.version}`, d = `Chain ID: ${we(n)}`, l = `Nonce: ${e.nonce}`, c = `Issued At: ${e.iat}`, u = e.resources && e.resources.length > 0 ? `Resources:\n${e.resources.map((a)=>`- ${a}`).join(`\n`)}` : void 0;\n    return [\n        t,\n        r,\n        \"\",\n        o,\n        \"\",\n        s,\n        i,\n        d,\n        l,\n        c,\n        u\n    ].filter((a)=>a != null).join(`\n`);\n}, J = \"base10\", p = \"base16\", F = \"base64pad\", H = \"utf8\", Q = 0, _ = 1, Dn = 0, Pe = 1, Z = 12, X = 32;\nfunction kn() {\n    const e = _stablelib_x25519__WEBPACK_IMPORTED_MODULE_4__.generateKeyPair();\n    return {\n        privateKey: (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e.secretKey, p),\n        publicKey: (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e.publicKey, p)\n    };\n}\nfunction Vn() {\n    const e = (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(X);\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e, p);\n}\nfunction Mn(e, n) {\n    const t = _stablelib_x25519__WEBPACK_IMPORTED_MODULE_4__.sharedKey((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e, p), (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(n, p), !0), r = new _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_1__.HKDF(_stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__.SHA256, t).expand(X);\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(r, p);\n}\nfunction Kn(e) {\n    const n = (0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e, p));\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(n, p);\n}\nfunction Ln(e) {\n    const n = (0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_3__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e, H));\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(n, p);\n}\nfunction Re(e) {\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(`${e}`, J);\n}\nfunction $(e) {\n    return Number((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(e, J));\n}\nfunction xn(e) {\n    const n = Re(typeof e.type < \"u\" ? e.type : Q);\n    if ($(n) === _ && typeof e.senderPublicKey > \"u\") throw new Error(\"Missing sender public key for type 1 envelope\");\n    const t = typeof e.senderPublicKey < \"u\" ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.senderPublicKey, p) : void 0, r = typeof e.iv < \"u\" ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.iv, p) : (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(Z), o = new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_0__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.symKey, p)).seal(r, (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.message, H));\n    return Te({\n        type: n,\n        sealed: o,\n        iv: r,\n        senderPublicKey: t\n    });\n}\nfunction Fn(e) {\n    const n = new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_0__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e.symKey, p)), { sealed: t, iv: r } = ee(e.encoded), o = n.open(r, t);\n    if (o === null) throw new Error(\"Failed to decrypt\");\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(o, H);\n}\nfunction Te(e) {\n    if ($(e.type) === _) {\n        if (typeof e.senderPublicKey > \"u\") throw new Error(\"Missing sender public key for type 1 envelope\");\n        return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([\n            e.type,\n            e.senderPublicKey,\n            e.iv,\n            e.sealed\n        ]), F);\n    }\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.concat)([\n        e.type,\n        e.iv,\n        e.sealed\n    ]), F);\n}\nfunction ee(e) {\n    const n = (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.fromString)(e, F), t = n.slice(Dn, Pe), r = Pe;\n    if ($(t) === _) {\n        const d = r + X, l = d + Z, c = n.slice(r, d), u = n.slice(d, l), a = n.slice(l);\n        return {\n            type: t,\n            sealed: a,\n            iv: u,\n            senderPublicKey: c\n        };\n    }\n    const o = r + Z, s = n.slice(r, o), i = n.slice(o);\n    return {\n        type: t,\n        sealed: i,\n        iv: s\n    };\n}\nfunction Hn(e, n) {\n    const t = ee(e);\n    return Ae({\n        type: $(t.type),\n        senderPublicKey: typeof t.senderPublicKey < \"u\" ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_5__.toString)(t.senderPublicKey, p) : void 0,\n        receiverPublicKey: n?.receiverPublicKey\n    });\n}\nfunction Ae(e) {\n    const n = e?.type || Q;\n    if (n === _) {\n        if (typeof e?.senderPublicKey > \"u\") throw new Error(\"missing sender public key\");\n        if (typeof e?.receiverPublicKey > \"u\") throw new Error(\"missing receiver public key\");\n    }\n    return {\n        type: n,\n        senderPublicKey: e?.senderPublicKey,\n        receiverPublicKey: e?.receiverPublicKey\n    };\n}\nfunction qn(e) {\n    return e.type === _ && typeof e.senderPublicKey == \"string\" && typeof e.receiverPublicKey == \"string\";\n}\nvar Bn = Object.defineProperty, Ue = Object.getOwnPropertySymbols, Gn = Object.prototype.hasOwnProperty, Wn = Object.prototype.propertyIsEnumerable, _e = (e, n, t)=>n in e ? Bn(e, n, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : e[n] = t, Ce = (e, n)=>{\n    for(var t in n || (n = {}))Gn.call(n, t) && _e(e, t, n[t]);\n    if (Ue) for (var t of Ue(n))Wn.call(n, t) && _e(e, t, n[t]);\n    return e;\n};\nconst je = \"ReactNative\", m = {\n    reactNative: \"react-native\",\n    node: \"node\",\n    browser: \"browser\",\n    unknown: \"unknown\"\n}, q = \" \", zn = \":\", $e = \"/\", ne = 2, Yn = 1e3, De = \"js\";\nfunction te() {\n    return typeof process < \"u\" && typeof process.versions < \"u\" && typeof process.versions.node < \"u\";\n}\nfunction C() {\n    return !(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getDocument)() && !!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getNavigator)() && navigator.product === je;\n}\nfunction D() {\n    return !te() && !!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getNavigator)() && !!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getDocument)();\n}\nfunction T() {\n    return C() ? m.reactNative : te() ? m.node : D() ? m.browser : m.unknown;\n}\nfunction Jn() {\n    var e;\n    try {\n        return C() && typeof global < \"u\" && typeof (global == null ? void 0 : global.Application) < \"u\" ? (e = global.Application) == null ? void 0 : e.applicationId : void 0;\n    } catch  {\n        return;\n    }\n}\nfunction ke(e, n) {\n    let t = query_string__WEBPACK_IMPORTED_MODULE_9__.parse(e);\n    return t = Ce(Ce({}, t), n), e = query_string__WEBPACK_IMPORTED_MODULE_9__.stringify(t), e;\n}\nfunction Qn() {\n    return (0,_walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_8__.getWindowMetadata)() || {\n        name: \"\",\n        description: \"\",\n        url: \"\",\n        icons: [\n            \"\"\n        ]\n    };\n}\nfunction Zn(e, n) {\n    var t;\n    const r = T(), o = {\n        protocol: e,\n        version: n,\n        env: r\n    };\n    return r === \"browser\" && (o.host = ((t = (0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getLocation)()) == null ? void 0 : t.host) || \"unknown\"), o;\n}\nfunction Ve() {\n    if (T() === m.reactNative && typeof global < \"u\" && typeof (global == null ? void 0 : global.Platform) < \"u\") {\n        const { OS: t, Version: r } = global.Platform;\n        return [\n            t,\n            r\n        ].join(\"-\");\n    }\n    const e = (0,detect_browser__WEBPACK_IMPORTED_MODULE_11__.detect)();\n    if (e === null) return \"unknown\";\n    const n = e.os ? e.os.replace(\" \", \"\").toLowerCase() : \"unknown\";\n    return e.type === \"browser\" ? [\n        n,\n        e.name,\n        e.version\n    ].join(\"-\") : [\n        n,\n        e.version\n    ].join(\"-\");\n}\nfunction Me() {\n    var e;\n    const n = T();\n    return n === m.browser ? [\n        n,\n        ((e = (0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_7__.getLocation)()) == null ? void 0 : e.host) || \"unknown\"\n    ].join(\":\") : n;\n}\nfunction Ke(e, n, t) {\n    const r = Ve(), o = Me();\n    return [\n        [\n            e,\n            n\n        ].join(\"-\"),\n        [\n            De,\n            t\n        ].join(\"-\"),\n        r,\n        o\n    ].join(\"/\");\n}\nfunction Xn({ protocol: e, version: n, relayUrl: t, sdkVersion: r, auth: o, projectId: s, useOnCloseEvent: i, bundleId: d }) {\n    const l = t.split(\"?\"), c = Ke(e, n, r), u = {\n        auth: o,\n        ua: c,\n        projectId: s,\n        useOnCloseEvent: i || void 0,\n        origin: d || void 0\n    }, a = ke(l[1] || \"\", u);\n    return l[0] + \"?\" + a;\n}\nfunction et(e) {\n    let n = (e.match(/^[^:]+(?=:\\/\\/)/gi) || [])[0];\n    const t = typeof n < \"u\" ? e.split(\"://\")[1] : e;\n    return n = n === \"wss\" ? \"https\" : \"http\", [\n        n,\n        t\n    ].join(\"://\");\n}\nfunction nt(e, n, t) {\n    if (!e[n] || typeof e[n] !== t) throw new Error(`Missing or invalid \"${n}\" param`);\n}\nfunction Le(e, n = ne) {\n    return xe(e.split($e), n);\n}\nfunction tt(e) {\n    return Le(e).join(q);\n}\nfunction O(e, n) {\n    return e.filter((t)=>n.includes(t)).length === e.length;\n}\nfunction xe(e, n = ne) {\n    return e.slice(Math.max(e.length - n, 0));\n}\nfunction rt(e) {\n    return Object.fromEntries(e.entries());\n}\nfunction ot(e) {\n    return new Map(Object.entries(e));\n}\nfunction st(e, n) {\n    const t = {};\n    return Object.keys(e).forEach((r)=>{\n        t[r] = n(e[r]);\n    }), t;\n}\nconst it = (e)=>e;\nfunction Fe(e) {\n    return e.trim().replace(/^\\w/, (n)=>n.toUpperCase());\n}\nfunction ct(e) {\n    return e.split(q).map((n)=>Fe(n)).join(q);\n}\nfunction at(e = _walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES, n) {\n    const t = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.toMiliseconds)(e || _walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.FIVE_MINUTES);\n    let r, o, s;\n    return {\n        resolve: (i)=>{\n            s && r && (clearTimeout(s), r(i));\n        },\n        reject: (i)=>{\n            s && o && (clearTimeout(s), o(i));\n        },\n        done: ()=>new Promise((i, d)=>{\n                s = setTimeout(()=>{\n                    d(new Error(n));\n                }, t), r = i, o = d;\n            })\n    };\n}\nfunction ut(e, n, t) {\n    return new Promise(async (r, o)=>{\n        const s = setTimeout(()=>o(new Error(t)), n);\n        try {\n            const i = await e;\n            r(i);\n        } catch (i) {\n            o(i);\n        }\n        clearTimeout(s);\n    });\n}\nfunction re(e, n) {\n    if (typeof n == \"string\" && n.startsWith(`${e}:`)) return n;\n    if (e.toLowerCase() === \"topic\") {\n        if (typeof n != \"string\") throw new Error('Value must be \"string\" for expirer target type: topic');\n        return `topic:${n}`;\n    } else if (e.toLowerCase() === \"id\") {\n        if (typeof n != \"number\") throw new Error('Value must be \"number\" for expirer target type: id');\n        return `id:${n}`;\n    }\n    throw new Error(`Unknown expirer target type: ${e}`);\n}\nfunction lt(e) {\n    return re(\"topic\", e);\n}\nfunction dt(e) {\n    return re(\"id\", e);\n}\nfunction ft(e) {\n    const [n, t] = e.split(\":\"), r = {\n        id: void 0,\n        topic: void 0\n    };\n    if (n === \"topic\" && typeof t == \"string\") r.topic = t;\n    else if (n === \"id\" && Number.isInteger(Number(t))) r.id = Number(t);\n    else throw new Error(`Invalid target, expected id:number or topic:string, got ${n}:${t}`);\n    return r;\n}\nfunction pt(e, n) {\n    return (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.fromMiliseconds)((n || Date.now()) + (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.toMiliseconds)(e));\n}\nfunction mt(e) {\n    return Date.now() >= (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_6__.toMiliseconds)(e);\n}\nfunction yt(e, n) {\n    return `${e}${n ? `:${n}` : \"\"}`;\n}\nfunction S(e = [], n = []) {\n    return [\n        ...new Set([\n            ...e,\n            ...n\n        ])\n    ];\n}\nasync function ht({ id: e, topic: n, wcDeepLink: t }) {\n    try {\n        if (!t) return;\n        const r = typeof t == \"string\" ? JSON.parse(t) : t;\n        let o = r?.href;\n        if (typeof o != \"string\") return;\n        o.endsWith(\"/\") && (o = o.slice(0, -1));\n        const s = `${o}/wc?requestId=${e}&sessionTopic=${n}`, i = T();\n        i === m.browser ? s.startsWith(\"https://\") ? window.open(s, \"_blank\", \"noreferrer noopener\") : window.open(s, \"_self\", \"noreferrer noopener\") : i === m.reactNative && typeof (global == null ? void 0 : global.Linking) < \"u\" && await global.Linking.openURL(s);\n    } catch (r) {\n        console.error(r);\n    }\n}\nasync function gt(e, n) {\n    try {\n        return await e.getItem(n) || (D() ? localStorage.getItem(n) : void 0);\n    } catch (t) {\n        console.error(t);\n    }\n}\nconst He = \"irn\";\nfunction vt(e) {\n    return e?.relay || {\n        protocol: He\n    };\n}\nfunction Et(e) {\n    const n = _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_10__.RELAY_JSONRPC[e];\n    if (typeof n > \"u\") throw new Error(`Relay Protocol not supported: ${e}`);\n    return n;\n}\nvar bt = Object.defineProperty, qe = Object.getOwnPropertySymbols, Nt = Object.prototype.hasOwnProperty, Ot = Object.prototype.propertyIsEnumerable, Be = (e, n, t)=>n in e ? bt(e, n, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : e[n] = t, St = (e, n)=>{\n    for(var t in n || (n = {}))Nt.call(n, t) && Be(e, t, n[t]);\n    if (qe) for (var t of qe(n))Ot.call(n, t) && Be(e, t, n[t]);\n    return e;\n};\nfunction Ge(e, n = \"-\") {\n    const t = {}, r = \"relay\" + n;\n    return Object.keys(e).forEach((o)=>{\n        if (o.startsWith(r)) {\n            const s = o.replace(r, \"\"), i = e[o];\n            t[s] = i;\n        }\n    }), t;\n}\nfunction wt(e) {\n    e = e.includes(\"wc://\") ? e.replace(\"wc://\", \"\") : e, e = e.includes(\"wc:\") ? e.replace(\"wc:\", \"\") : e;\n    const n = e.indexOf(\":\"), t = e.indexOf(\"?\") !== -1 ? e.indexOf(\"?\") : void 0, r = e.substring(0, n), o = e.substring(n + 1, t).split(\"@\"), s = typeof t < \"u\" ? e.substring(t) : \"\", i = query_string__WEBPACK_IMPORTED_MODULE_9__.parse(s);\n    return {\n        protocol: r,\n        topic: We(o[0]),\n        version: parseInt(o[1], 10),\n        symKey: i.symKey,\n        relay: Ge(i)\n    };\n}\nfunction We(e) {\n    return e.startsWith(\"//\") ? e.substring(2) : e;\n}\nfunction ze(e, n = \"-\") {\n    const t = \"relay\", r = {};\n    return Object.keys(e).forEach((o)=>{\n        const s = t + n + o;\n        e[o] && (r[s] = e[o]);\n    }), r;\n}\nfunction It(e) {\n    return `${e.protocol}:${e.topic}@${e.version}?` + query_string__WEBPACK_IMPORTED_MODULE_9__.stringify(St({\n        symKey: e.symKey\n    }, ze(e.relay)));\n}\nvar Pt = Object.defineProperty, Rt = Object.defineProperties, Tt = Object.getOwnPropertyDescriptors, Ye = Object.getOwnPropertySymbols, At = Object.prototype.hasOwnProperty, Ut = Object.prototype.propertyIsEnumerable, Je = (e, n, t)=>n in e ? Pt(e, n, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : e[n] = t, _t = (e, n)=>{\n    for(var t in n || (n = {}))At.call(n, t) && Je(e, t, n[t]);\n    if (Ye) for (var t of Ye(n))Ut.call(n, t) && Je(e, t, n[t]);\n    return e;\n}, Ct = (e, n)=>Rt(e, Tt(n));\nfunction A(e) {\n    const n = [];\n    return e.forEach((t)=>{\n        const [r, o] = t.split(\":\");\n        n.push(`${r}:${o}`);\n    }), n;\n}\nfunction Qe(e) {\n    const n = [];\n    return Object.values(e).forEach((t)=>{\n        n.push(...A(t.accounts));\n    }), n;\n}\nfunction Ze(e, n) {\n    const t = [];\n    return Object.values(e).forEach((r)=>{\n        A(r.accounts).includes(n) && t.push(...r.methods);\n    }), t;\n}\nfunction Xe(e, n) {\n    const t = [];\n    return Object.values(e).forEach((r)=>{\n        A(r.accounts).includes(n) && t.push(...r.events);\n    }), t;\n}\nfunction jt(e, n) {\n    const t = ln(e, n);\n    if (t) throw new Error(t.message);\n    const r = {};\n    for (const [o, s] of Object.entries(e))r[o] = {\n        methods: s.methods,\n        events: s.events,\n        chains: s.accounts.map((i)=>`${i.split(\":\")[0]}:${i.split(\":\")[1]}`)\n    };\n    return r;\n}\nfunction $t(e) {\n    const { proposal: { requiredNamespaces: n, optionalNamespaces: t = {} }, supportedNamespaces: r } = e, o = se(n), s = se(t), i = {};\n    Object.keys(r).forEach((c)=>{\n        const u = r[c].chains, a = r[c].methods, b = r[c].events, I = r[c].accounts;\n        u.forEach((y)=>{\n            if (!I.some((f)=>f.includes(y))) throw new Error(`No accounts provided for chain ${y} in namespace ${c}`);\n        }), i[c] = {\n            chains: u,\n            methods: a,\n            events: b,\n            accounts: I\n        };\n    });\n    const d = fn(n, i, \"approve()\");\n    if (d) throw new Error(d.message);\n    const l = {};\n    return !Object.keys(n).length && !Object.keys(t).length ? i : (Object.keys(o).forEach((c)=>{\n        const u = r[c].chains.filter((y)=>{\n            var f, g;\n            return (g = (f = o[c]) == null ? void 0 : f.chains) == null ? void 0 : g.includes(y);\n        }), a = r[c].methods.filter((y)=>{\n            var f, g;\n            return (g = (f = o[c]) == null ? void 0 : f.methods) == null ? void 0 : g.includes(y);\n        }), b = r[c].events.filter((y)=>{\n            var f, g;\n            return (g = (f = o[c]) == null ? void 0 : f.events) == null ? void 0 : g.includes(y);\n        }), I = u.map((y)=>r[c].accounts.filter((f)=>f.includes(`${y}:`))).flat();\n        l[c] = {\n            chains: u,\n            methods: a,\n            events: b,\n            accounts: I\n        };\n    }), Object.keys(s).forEach((c)=>{\n        var u, a, b, I, y, f;\n        if (!r[c]) return;\n        const g = (a = (u = s[c]) == null ? void 0 : u.chains) == null ? void 0 : a.filter((P)=>r[c].chains.includes(P)), En = r[c].methods.filter((P)=>{\n            var R, j;\n            return (j = (R = s[c]) == null ? void 0 : R.methods) == null ? void 0 : j.includes(P);\n        }), bn = r[c].events.filter((P)=>{\n            var R, j;\n            return (j = (R = s[c]) == null ? void 0 : R.events) == null ? void 0 : j.includes(P);\n        }), Nn = g?.map((P)=>r[c].accounts.filter((R)=>R.includes(`${P}:`))).flat();\n        l[c] = {\n            chains: S((b = l[c]) == null ? void 0 : b.chains, g),\n            methods: S((I = l[c]) == null ? void 0 : I.methods, En),\n            events: S((y = l[c]) == null ? void 0 : y.events, bn),\n            accounts: S((f = l[c]) == null ? void 0 : f.accounts, Nn)\n        };\n    }), l);\n}\nfunction oe(e) {\n    return e.includes(\":\");\n}\nfunction en(e) {\n    return oe(e) ? e.split(\":\")[0] : e;\n}\nfunction se(e) {\n    var n, t, r;\n    const o = {};\n    if (!B(e)) return o;\n    for (const [s, i] of Object.entries(e)){\n        const d = oe(s) ? [\n            s\n        ] : i.chains, l = i.methods || [], c = i.events || [], u = en(s);\n        o[u] = Ct(_t({}, o[u]), {\n            chains: S(d, (n = o[u]) == null ? void 0 : n.chains),\n            methods: S(l, (t = o[u]) == null ? void 0 : t.methods),\n            events: S(c, (r = o[u]) == null ? void 0 : r.events)\n        });\n    }\n    return o;\n}\nconst nn = {\n    INVALID_METHOD: {\n        message: \"Invalid method.\",\n        code: 1001\n    },\n    INVALID_EVENT: {\n        message: \"Invalid event.\",\n        code: 1002\n    },\n    INVALID_UPDATE_REQUEST: {\n        message: \"Invalid update request.\",\n        code: 1003\n    },\n    INVALID_EXTEND_REQUEST: {\n        message: \"Invalid extend request.\",\n        code: 1004\n    },\n    INVALID_SESSION_SETTLE_REQUEST: {\n        message: \"Invalid session settle request.\",\n        code: 1005\n    },\n    UNAUTHORIZED_METHOD: {\n        message: \"Unauthorized method.\",\n        code: 3001\n    },\n    UNAUTHORIZED_EVENT: {\n        message: \"Unauthorized event.\",\n        code: 3002\n    },\n    UNAUTHORIZED_UPDATE_REQUEST: {\n        message: \"Unauthorized update request.\",\n        code: 3003\n    },\n    UNAUTHORIZED_EXTEND_REQUEST: {\n        message: \"Unauthorized extend request.\",\n        code: 3004\n    },\n    USER_REJECTED: {\n        message: \"User rejected.\",\n        code: 5e3\n    },\n    USER_REJECTED_CHAINS: {\n        message: \"User rejected chains.\",\n        code: 5001\n    },\n    USER_REJECTED_METHODS: {\n        message: \"User rejected methods.\",\n        code: 5002\n    },\n    USER_REJECTED_EVENTS: {\n        message: \"User rejected events.\",\n        code: 5003\n    },\n    UNSUPPORTED_CHAINS: {\n        message: \"Unsupported chains.\",\n        code: 5100\n    },\n    UNSUPPORTED_METHODS: {\n        message: \"Unsupported methods.\",\n        code: 5101\n    },\n    UNSUPPORTED_EVENTS: {\n        message: \"Unsupported events.\",\n        code: 5102\n    },\n    UNSUPPORTED_ACCOUNTS: {\n        message: \"Unsupported accounts.\",\n        code: 5103\n    },\n    UNSUPPORTED_NAMESPACE_KEY: {\n        message: \"Unsupported namespace key.\",\n        code: 5104\n    },\n    USER_DISCONNECTED: {\n        message: \"User disconnected.\",\n        code: 6e3\n    },\n    SESSION_SETTLEMENT_FAILED: {\n        message: \"Session settlement failed.\",\n        code: 7e3\n    },\n    WC_METHOD_UNSUPPORTED: {\n        message: \"Unsupported wc_ method.\",\n        code: 10001\n    }\n}, tn = {\n    NOT_INITIALIZED: {\n        message: \"Not initialized.\",\n        code: 1\n    },\n    NO_MATCHING_KEY: {\n        message: \"No matching key.\",\n        code: 2\n    },\n    RESTORE_WILL_OVERRIDE: {\n        message: \"Restore will override.\",\n        code: 3\n    },\n    RESUBSCRIBED: {\n        message: \"Resubscribed.\",\n        code: 4\n    },\n    MISSING_OR_INVALID: {\n        message: \"Missing or invalid.\",\n        code: 5\n    },\n    EXPIRED: {\n        message: \"Expired.\",\n        code: 6\n    },\n    UNKNOWN_TYPE: {\n        message: \"Unknown type.\",\n        code: 7\n    },\n    MISMATCHED_TOPIC: {\n        message: \"Mismatched topic.\",\n        code: 8\n    },\n    NON_CONFORMING_NAMESPACES: {\n        message: \"Non conforming namespaces.\",\n        code: 9\n    }\n};\nfunction N(e, n) {\n    const { message: t, code: r } = tn[e];\n    return {\n        message: n ? `${t} ${n}` : t,\n        code: r\n    };\n}\nfunction U(e, n) {\n    const { message: t, code: r } = nn[e];\n    return {\n        message: n ? `${t} ${n}` : t,\n        code: r\n    };\n}\nfunction k(e, n) {\n    return Array.isArray(e) ? typeof n < \"u\" && e.length ? e.every(n) : !0 : !1;\n}\nfunction B(e) {\n    return Object.getPrototypeOf(e) === Object.prototype && Object.keys(e).length;\n}\nfunction w(e) {\n    return typeof e > \"u\";\n}\nfunction h(e, n) {\n    return n && w(e) ? !0 : typeof e == \"string\" && !!e.trim().length;\n}\nfunction G(e, n) {\n    return n && w(e) ? !0 : typeof e == \"number\" && !isNaN(e);\n}\nfunction Dt(e, n) {\n    const { requiredNamespaces: t } = n, r = Object.keys(e.namespaces), o = Object.keys(t);\n    let s = !0;\n    return O(o, r) ? (r.forEach((i)=>{\n        const { accounts: d, methods: l, events: c } = e.namespaces[i], u = A(d), a = t[i];\n        (!O(L(i, a), u) || !O(a.methods, l) || !O(a.events, c)) && (s = !1);\n    }), s) : !1;\n}\nfunction V(e) {\n    return h(e, !1) && e.includes(\":\") ? e.split(\":\").length === 2 : !1;\n}\nfunction rn(e) {\n    if (h(e, !1) && e.includes(\":\")) {\n        const n = e.split(\":\");\n        if (n.length === 3) {\n            const t = n[0] + \":\" + n[1];\n            return !!n[2] && V(t);\n        }\n    }\n    return !1;\n}\nfunction kt(e) {\n    if (h(e, !1)) try {\n        return typeof new URL(e) < \"u\";\n    } catch  {\n        return !1;\n    }\n    return !1;\n}\nfunction Vt(e) {\n    var n;\n    return (n = e?.proposer) == null ? void 0 : n.publicKey;\n}\nfunction Mt(e) {\n    return e?.topic;\n}\nfunction Kt(e, n) {\n    let t = null;\n    return h(e?.publicKey, !1) || (t = N(\"MISSING_OR_INVALID\", `${n} controller public key should be a string`)), t;\n}\nfunction ie(e) {\n    let n = !0;\n    return k(e) ? e.length && (n = e.every((t)=>h(t, !1))) : n = !1, n;\n}\nfunction on(e, n, t) {\n    let r = null;\n    return k(n) && n.length ? n.forEach((o)=>{\n        r || V(o) || (r = U(\"UNSUPPORTED_CHAINS\", `${t}, chain ${o} should be a string and conform to \"namespace:chainId\" format`));\n    }) : V(e) || (r = U(\"UNSUPPORTED_CHAINS\", `${t}, chains must be defined as \"namespace:chainId\" e.g. \"eip155:1\": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: [\"eip155:1\", \"eip155:5\"] }`)), r;\n}\nfunction sn(e, n, t) {\n    let r = null;\n    return Object.entries(e).forEach(([o, s])=>{\n        if (r) return;\n        const i = on(o, L(o, s), `${n} ${t}`);\n        i && (r = i);\n    }), r;\n}\nfunction cn(e, n) {\n    let t = null;\n    return k(e) ? e.forEach((r)=>{\n        t || rn(r) || (t = U(\"UNSUPPORTED_ACCOUNTS\", `${n}, account ${r} should be a string and conform to \"namespace:chainId:address\" format`));\n    }) : t = U(\"UNSUPPORTED_ACCOUNTS\", `${n}, accounts should be an array of strings conforming to \"namespace:chainId:address\" format`), t;\n}\nfunction an(e, n) {\n    let t = null;\n    return Object.values(e).forEach((r)=>{\n        if (t) return;\n        const o = cn(r?.accounts, `${n} namespace`);\n        o && (t = o);\n    }), t;\n}\nfunction un(e, n) {\n    let t = null;\n    return ie(e?.methods) ? ie(e?.events) || (t = U(\"UNSUPPORTED_EVENTS\", `${n}, events should be an array of strings or empty array for no events`)) : t = U(\"UNSUPPORTED_METHODS\", `${n}, methods should be an array of strings or empty array for no methods`), t;\n}\nfunction ce(e, n) {\n    let t = null;\n    return Object.values(e).forEach((r)=>{\n        if (t) return;\n        const o = un(r, `${n}, namespace`);\n        o && (t = o);\n    }), t;\n}\nfunction Lt(e, n, t) {\n    let r = null;\n    if (e && B(e)) {\n        const o = ce(e, n);\n        o && (r = o);\n        const s = sn(e, n, t);\n        s && (r = s);\n    } else r = N(\"MISSING_OR_INVALID\", `${n}, ${t} should be an object with data`);\n    return r;\n}\nfunction ln(e, n) {\n    let t = null;\n    if (e && B(e)) {\n        const r = ce(e, n);\n        r && (t = r);\n        const o = an(e, n);\n        o && (t = o);\n    } else t = N(\"MISSING_OR_INVALID\", `${n}, namespaces should be an object with data`);\n    return t;\n}\nfunction dn(e) {\n    return h(e.protocol, !0);\n}\nfunction xt(e, n) {\n    let t = !1;\n    return n && !e ? t = !0 : e && k(e) && e.length && e.forEach((r)=>{\n        t = dn(r);\n    }), t;\n}\nfunction Ft(e) {\n    return typeof e == \"number\";\n}\nfunction Ht(e) {\n    return typeof e < \"u\" && typeof e !== null;\n}\nfunction qt(e) {\n    return !(!e || typeof e != \"object\" || !e.code || !G(e.code, !1) || !e.message || !h(e.message, !1));\n}\nfunction Bt(e) {\n    return !(w(e) || !h(e.method, !1));\n}\nfunction Gt(e) {\n    return !(w(e) || w(e.result) && w(e.error) || !G(e.id, !1) || !h(e.jsonrpc, !1));\n}\nfunction Wt(e) {\n    return !(w(e) || !h(e.name, !1));\n}\nfunction zt(e, n) {\n    return !(!V(n) || !Qe(e).includes(n));\n}\nfunction Yt(e, n, t) {\n    return h(t, !1) ? Ze(e, n).includes(t) : !1;\n}\nfunction Jt(e, n, t) {\n    return h(t, !1) ? Xe(e, n).includes(t) : !1;\n}\nfunction fn(e, n, t) {\n    let r = null;\n    const o = Qt(e), s = Zt(n), i = Object.keys(o), d = Object.keys(s), l = pn(Object.keys(e)), c = pn(Object.keys(n)), u = l.filter((a)=>!c.includes(a));\n    return u.length && (r = N(\"NON_CONFORMING_NAMESPACES\", `${t} namespaces keys don't satisfy requiredNamespaces.\n      Required: ${u.toString()}\n      Received: ${Object.keys(n).toString()}`)), O(i, d) || (r = N(\"NON_CONFORMING_NAMESPACES\", `${t} namespaces chains don't satisfy required namespaces.\n      Required: ${i.toString()}\n      Approved: ${d.toString()}`)), Object.keys(n).forEach((a)=>{\n        if (!a.includes(\":\") || r) return;\n        const b = A(n[a].accounts);\n        b.includes(a) || (r = N(\"NON_CONFORMING_NAMESPACES\", `${t} namespaces accounts don't satisfy namespace accounts for ${a}\n        Required: ${a}\n        Approved: ${b.toString()}`));\n    }), i.forEach((a)=>{\n        r || (O(o[a].methods, s[a].methods) ? O(o[a].events, s[a].events) || (r = N(\"NON_CONFORMING_NAMESPACES\", `${t} namespaces events don't satisfy namespace events for ${a}`)) : r = N(\"NON_CONFORMING_NAMESPACES\", `${t} namespaces methods don't satisfy namespace methods for ${a}`));\n    }), r;\n}\nfunction Qt(e) {\n    const n = {};\n    return Object.keys(e).forEach((t)=>{\n        var r;\n        t.includes(\":\") ? n[t] = e[t] : (r = e[t].chains) == null || r.forEach((o)=>{\n            n[o] = {\n                methods: e[t].methods,\n                events: e[t].events\n            };\n        });\n    }), n;\n}\nfunction pn(e) {\n    return [\n        ...new Set(e.map((n)=>n.includes(\":\") ? n.split(\":\")[0] : n))\n    ];\n}\nfunction Zt(e) {\n    const n = {};\n    return Object.keys(e).forEach((t)=>{\n        if (t.includes(\":\")) n[t] = e[t];\n        else {\n            const r = A(e[t].accounts);\n            r?.forEach((o)=>{\n                n[o] = {\n                    accounts: e[t].accounts.filter((s)=>s.includes(`${o}:`)),\n                    methods: e[t].methods,\n                    events: e[t].events\n                };\n            });\n        }\n    }), n;\n}\nfunction Xt(e, n) {\n    return G(e, !1) && e <= n.max && e >= n.min;\n}\nfunction er() {\n    const e = T();\n    return new Promise((n)=>{\n        switch(e){\n            case m.browser:\n                n(mn());\n                break;\n            case m.reactNative:\n                n(yn());\n                break;\n            case m.node:\n                n(hn());\n                break;\n            default:\n                n(!0);\n        }\n    });\n}\nfunction mn() {\n    return D() && navigator?.onLine;\n}\nasync function yn() {\n    if (C() && typeof global < \"u\" && global != null && global.NetInfo) {\n        const e = await (global == null ? void 0 : global.NetInfo.fetch());\n        return e?.isConnected;\n    }\n    return !0;\n}\nfunction hn() {\n    return !0;\n}\nfunction nr(e) {\n    switch(T()){\n        case m.browser:\n            gn(e);\n            break;\n        case m.reactNative:\n            vn(e);\n            break;\n        case m.node:\n            break;\n    }\n}\nfunction gn(e) {\n    !C() && D() && (window.addEventListener(\"online\", ()=>e(!0)), window.addEventListener(\"offline\", ()=>e(!1)));\n}\nfunction vn(e) {\n    C() && typeof global < \"u\" && global != null && global.NetInfo && global?.NetInfo.addEventListener((n)=>e(n?.isConnected));\n}\nconst ae = {};\nclass tr {\n    static get(n) {\n        return ae[n];\n    }\n    static set(n, t) {\n        ae[n] = t;\n    }\n    static delete(n) {\n        delete ae[n];\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/utils/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/window-getters/dist/cjs/index.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/@walletconnect/window-getters/dist/cjs/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;\nfunction getFromWindow(name) {\n    let res = undefined;\n    if (false) {}\n    return res;\n}\nexports.getFromWindow = getFromWindow;\nfunction getFromWindowOrThrow(name) {\n    const res = getFromWindow(name);\n    if (!res) {\n        throw new Error(`${name} is not defined in Window`);\n    }\n    return res;\n}\nexports.getFromWindowOrThrow = getFromWindowOrThrow;\nfunction getDocumentOrThrow() {\n    return getFromWindowOrThrow(\"document\");\n}\nexports.getDocumentOrThrow = getDocumentOrThrow;\nfunction getDocument() {\n    return getFromWindow(\"document\");\n}\nexports.getDocument = getDocument;\nfunction getNavigatorOrThrow() {\n    return getFromWindowOrThrow(\"navigator\");\n}\nexports.getNavigatorOrThrow = getNavigatorOrThrow;\nfunction getNavigator() {\n    return getFromWindow(\"navigator\");\n}\nexports.getNavigator = getNavigator;\nfunction getLocationOrThrow() {\n    return getFromWindowOrThrow(\"location\");\n}\nexports.getLocationOrThrow = getLocationOrThrow;\nfunction getLocation() {\n    return getFromWindow(\"location\");\n}\nexports.getLocation = getLocation;\nfunction getCryptoOrThrow() {\n    return getFromWindowOrThrow(\"crypto\");\n}\nexports.getCryptoOrThrow = getCryptoOrThrow;\nfunction getCrypto() {\n    return getFromWindow(\"crypto\");\n}\nexports.getCrypto = getCrypto;\nfunction getLocalStorageOrThrow() {\n    return getFromWindowOrThrow(\"localStorage\");\n}\nexports.getLocalStorageOrThrow = getLocalStorageOrThrow;\nfunction getLocalStorage() {\n    return getFromWindow(\"localStorage\");\n}\nexports.getLocalStorage = getLocalStorage; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3dpbmRvdy1nZXR0ZXJzL2Rpc3QvY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx1QkFBdUIsR0FBR0EsOEJBQThCLEdBQUdBLGlCQUFpQixHQUFHQSx3QkFBd0IsR0FBR0EsbUJBQW1CLEdBQUdBLDBCQUEwQixHQUFHQSxvQkFBb0IsR0FBR0EsMkJBQTJCLEdBQUdBLG1CQUFtQixHQUFHQSwwQkFBMEIsR0FBR0EsNEJBQTRCLEdBQUdBLHFCQUFxQixHQUFHLEtBQUs7QUFDalUsU0FBU2EsY0FBY0MsSUFBSTtJQUN2QixJQUFJQyxNQUFNQztJQUNWLElBQUksS0FBb0UsRUFBRSxFQUV6RTtJQUNELE9BQU9EO0FBQ1g7QUFDQWYscUJBQXFCLEdBQUdhO0FBQ3hCLFNBQVNELHFCQUFxQkUsSUFBSTtJQUM5QixNQUFNQyxNQUFNRixjQUFjQztJQUMxQixJQUFJLENBQUNDLEtBQUs7UUFDTixNQUFNLElBQUlHLE1BQU0sQ0FBQyxFQUFFSixLQUFLLHlCQUF5QixDQUFDO0lBQ3REO0lBQ0EsT0FBT0M7QUFDWDtBQUNBZiw0QkFBNEIsR0FBR1k7QUFDL0IsU0FBU0Q7SUFDTCxPQUFPQyxxQkFBcUI7QUFDaEM7QUFDQVosMEJBQTBCLEdBQUdXO0FBQzdCLFNBQVNEO0lBQ0wsT0FBT0csY0FBYztBQUN6QjtBQUNBYixtQkFBbUIsR0FBR1U7QUFDdEIsU0FBU0Q7SUFDTCxPQUFPRyxxQkFBcUI7QUFDaEM7QUFDQVosMkJBQTJCLEdBQUdTO0FBQzlCLFNBQVNEO0lBQ0wsT0FBT0ssY0FBYztBQUN6QjtBQUNBYixvQkFBb0IsR0FBR1E7QUFDdkIsU0FBU0Q7SUFDTCxPQUFPSyxxQkFBcUI7QUFDaEM7QUFDQVosMEJBQTBCLEdBQUdPO0FBQzdCLFNBQVNEO0lBQ0wsT0FBT08sY0FBYztBQUN6QjtBQUNBYixtQkFBbUIsR0FBR007QUFDdEIsU0FBU0Q7SUFDTCxPQUFPTyxxQkFBcUI7QUFDaEM7QUFDQVosd0JBQXdCLEdBQUdLO0FBQzNCLFNBQVNEO0lBQ0wsT0FBT1MsY0FBYztBQUN6QjtBQUNBYixpQkFBaUIsR0FBR0k7QUFDcEIsU0FBU0Q7SUFDTCxPQUFPUyxxQkFBcUI7QUFDaEM7QUFDQVosOEJBQThCLEdBQUdHO0FBQ2pDLFNBQVNEO0lBQ0wsT0FBT1csY0FBYztBQUN6QjtBQUNBYix1QkFBdUIsR0FBR0UsaUJBQzFCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NzYS8uLi8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3Qvd2luZG93LWdldHRlcnMvZGlzdC9janMvaW5kZXguanM/YmM4NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0TG9jYWxTdG9yYWdlID0gZXhwb3J0cy5nZXRMb2NhbFN0b3JhZ2VPclRocm93ID0gZXhwb3J0cy5nZXRDcnlwdG8gPSBleHBvcnRzLmdldENyeXB0b09yVGhyb3cgPSBleHBvcnRzLmdldExvY2F0aW9uID0gZXhwb3J0cy5nZXRMb2NhdGlvbk9yVGhyb3cgPSBleHBvcnRzLmdldE5hdmlnYXRvciA9IGV4cG9ydHMuZ2V0TmF2aWdhdG9yT3JUaHJvdyA9IGV4cG9ydHMuZ2V0RG9jdW1lbnQgPSBleHBvcnRzLmdldERvY3VtZW50T3JUaHJvdyA9IGV4cG9ydHMuZ2V0RnJvbVdpbmRvd09yVGhyb3cgPSBleHBvcnRzLmdldEZyb21XaW5kb3cgPSB2b2lkIDA7XG5mdW5jdGlvbiBnZXRGcm9tV2luZG93KG5hbWUpIHtcbiAgICBsZXQgcmVzID0gdW5kZWZpbmVkO1xuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiB3aW5kb3dbbmFtZV0gIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgcmVzID0gd2luZG93W25hbWVdO1xuICAgIH1cbiAgICByZXR1cm4gcmVzO1xufVxuZXhwb3J0cy5nZXRGcm9tV2luZG93ID0gZ2V0RnJvbVdpbmRvdztcbmZ1bmN0aW9uIGdldEZyb21XaW5kb3dPclRocm93KG5hbWUpIHtcbiAgICBjb25zdCByZXMgPSBnZXRGcm9tV2luZG93KG5hbWUpO1xuICAgIGlmICghcmVzKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtuYW1lfSBpcyBub3QgZGVmaW5lZCBpbiBXaW5kb3dgKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbn1cbmV4cG9ydHMuZ2V0RnJvbVdpbmRvd09yVGhyb3cgPSBnZXRGcm9tV2luZG93T3JUaHJvdztcbmZ1bmN0aW9uIGdldERvY3VtZW50T3JUaHJvdygpIHtcbiAgICByZXR1cm4gZ2V0RnJvbVdpbmRvd09yVGhyb3coXCJkb2N1bWVudFwiKTtcbn1cbmV4cG9ydHMuZ2V0RG9jdW1lbnRPclRocm93ID0gZ2V0RG9jdW1lbnRPclRocm93O1xuZnVuY3Rpb24gZ2V0RG9jdW1lbnQoKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3coXCJkb2N1bWVudFwiKTtcbn1cbmV4cG9ydHMuZ2V0RG9jdW1lbnQgPSBnZXREb2N1bWVudDtcbmZ1bmN0aW9uIGdldE5hdmlnYXRvck9yVGhyb3coKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3dPclRocm93KFwibmF2aWdhdG9yXCIpO1xufVxuZXhwb3J0cy5nZXROYXZpZ2F0b3JPclRocm93ID0gZ2V0TmF2aWdhdG9yT3JUaHJvdztcbmZ1bmN0aW9uIGdldE5hdmlnYXRvcigpIHtcbiAgICByZXR1cm4gZ2V0RnJvbVdpbmRvdyhcIm5hdmlnYXRvclwiKTtcbn1cbmV4cG9ydHMuZ2V0TmF2aWdhdG9yID0gZ2V0TmF2aWdhdG9yO1xuZnVuY3Rpb24gZ2V0TG9jYXRpb25PclRocm93KCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93T3JUaHJvdyhcImxvY2F0aW9uXCIpO1xufVxuZXhwb3J0cy5nZXRMb2NhdGlvbk9yVGhyb3cgPSBnZXRMb2NhdGlvbk9yVGhyb3c7XG5mdW5jdGlvbiBnZXRMb2NhdGlvbigpIHtcbiAgICByZXR1cm4gZ2V0RnJvbVdpbmRvdyhcImxvY2F0aW9uXCIpO1xufVxuZXhwb3J0cy5nZXRMb2NhdGlvbiA9IGdldExvY2F0aW9uO1xuZnVuY3Rpb24gZ2V0Q3J5cHRvT3JUaHJvdygpIHtcbiAgICByZXR1cm4gZ2V0RnJvbVdpbmRvd09yVGhyb3coXCJjcnlwdG9cIik7XG59XG5leHBvcnRzLmdldENyeXB0b09yVGhyb3cgPSBnZXRDcnlwdG9PclRocm93O1xuZnVuY3Rpb24gZ2V0Q3J5cHRvKCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93KFwiY3J5cHRvXCIpO1xufVxuZXhwb3J0cy5nZXRDcnlwdG8gPSBnZXRDcnlwdG87XG5mdW5jdGlvbiBnZXRMb2NhbFN0b3JhZ2VPclRocm93KCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93T3JUaHJvdyhcImxvY2FsU3RvcmFnZVwiKTtcbn1cbmV4cG9ydHMuZ2V0TG9jYWxTdG9yYWdlT3JUaHJvdyA9IGdldExvY2FsU3RvcmFnZU9yVGhyb3c7XG5mdW5jdGlvbiBnZXRMb2NhbFN0b3JhZ2UoKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3coXCJsb2NhbFN0b3JhZ2VcIik7XG59XG5leHBvcnRzLmdldExvY2FsU3RvcmFnZSA9IGdldExvY2FsU3RvcmFnZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImdldExvY2FsU3RvcmFnZSIsImdldExvY2FsU3RvcmFnZU9yVGhyb3ciLCJnZXRDcnlwdG8iLCJnZXRDcnlwdG9PclRocm93IiwiZ2V0TG9jYXRpb24iLCJnZXRMb2NhdGlvbk9yVGhyb3ciLCJnZXROYXZpZ2F0b3IiLCJnZXROYXZpZ2F0b3JPclRocm93IiwiZ2V0RG9jdW1lbnQiLCJnZXREb2N1bWVudE9yVGhyb3ciLCJnZXRGcm9tV2luZG93T3JUaHJvdyIsImdldEZyb21XaW5kb3ciLCJuYW1lIiwicmVzIiwidW5kZWZpbmVkIiwid2luZG93IiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/window-getters/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/window-metadata/dist/cjs/index.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@walletconnect/window-metadata/dist/cjs/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getWindowMetadata = void 0;\nconst window_getters_1 = __webpack_require__(/*! @walletconnect/window-getters */ \"(ssr)/../../node_modules/@walletconnect/window-getters/dist/cjs/index.js\");\nfunction getWindowMetadata() {\n    let doc;\n    let loc;\n    try {\n        doc = window_getters_1.getDocumentOrThrow();\n        loc = window_getters_1.getLocationOrThrow();\n    } catch (e) {\n        return null;\n    }\n    function getIcons() {\n        const links = doc.getElementsByTagName(\"link\");\n        const icons = [];\n        for(let i = 0; i < links.length; i++){\n            const link = links[i];\n            const rel = link.getAttribute(\"rel\");\n            if (rel) {\n                if (rel.toLowerCase().indexOf(\"icon\") > -1) {\n                    const href = link.getAttribute(\"href\");\n                    if (href) {\n                        if (href.toLowerCase().indexOf(\"https:\") === -1 && href.toLowerCase().indexOf(\"http:\") === -1 && href.indexOf(\"//\") !== 0) {\n                            let absoluteHref = loc.protocol + \"//\" + loc.host;\n                            if (href.indexOf(\"/\") === 0) {\n                                absoluteHref += href;\n                            } else {\n                                const path = loc.pathname.split(\"/\");\n                                path.pop();\n                                const finalPath = path.join(\"/\");\n                                absoluteHref += finalPath + \"/\" + href;\n                            }\n                            icons.push(absoluteHref);\n                        } else if (href.indexOf(\"//\") === 0) {\n                            const absoluteUrl = loc.protocol + href;\n                            icons.push(absoluteUrl);\n                        } else {\n                            icons.push(href);\n                        }\n                    }\n                }\n            }\n        }\n        return icons;\n    }\n    function getWindowMetadataOfAny(...args) {\n        const metaTags = doc.getElementsByTagName(\"meta\");\n        for(let i = 0; i < metaTags.length; i++){\n            const tag = metaTags[i];\n            const attributes = [\n                \"itemprop\",\n                \"property\",\n                \"name\"\n            ].map((target)=>tag.getAttribute(target)).filter((attr)=>{\n                if (attr) {\n                    return args.includes(attr);\n                }\n                return false;\n            });\n            if (attributes.length && attributes) {\n                const content = tag.getAttribute(\"content\");\n                if (content) {\n                    return content;\n                }\n            }\n        }\n        return \"\";\n    }\n    function getName() {\n        let name = getWindowMetadataOfAny(\"name\", \"og:site_name\", \"og:title\", \"twitter:title\");\n        if (!name) {\n            name = doc.title;\n        }\n        return name;\n    }\n    function getDescription() {\n        const description = getWindowMetadataOfAny(\"description\", \"og:description\", \"twitter:description\", \"keywords\");\n        return description;\n    }\n    const name = getName();\n    const description = getDescription();\n    const url = loc.origin;\n    const icons = getIcons();\n    const meta = {\n        description,\n        url,\n        icons,\n        name\n    };\n    return meta;\n}\nexports.getWindowMetadata = getWindowMetadata; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/window-metadata/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/modal-core/dist/index.js":
/*!******************************************************************!*\
  !*** ../../node_modules/@walletconnect/modal-core/dist/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConfigCtrl: () => (/* binding */ y),\n/* harmony export */   CoreUtil: () => (/* binding */ a),\n/* harmony export */   EventsCtrl: () => (/* binding */ R),\n/* harmony export */   ExplorerCtrl: () => (/* binding */ te),\n/* harmony export */   ModalCtrl: () => (/* binding */ se),\n/* harmony export */   OptionsCtrl: () => (/* binding */ p),\n/* harmony export */   RouterCtrl: () => (/* binding */ T),\n/* harmony export */   ThemeCtrl: () => (/* binding */ ne),\n/* harmony export */   ToastCtrl: () => (/* binding */ oe)\n/* harmony export */ });\n/* harmony import */ var valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! valtio/vanilla */ \"(ssr)/../../node_modules/valtio/esm/vanilla.mjs\");\n\nconst o = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    history: [\n        \"ConnectWallet\"\n    ],\n    view: \"ConnectWallet\",\n    data: void 0\n}), T = {\n    state: o,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(o, ()=>e(o));\n    },\n    push (e, t) {\n        e !== o.view && (o.view = e, t && (o.data = t), o.history.push(e));\n    },\n    reset (e) {\n        o.view = e, o.history = [\n            e\n        ];\n    },\n    replace (e) {\n        o.history.length > 1 && (o.history[o.history.length - 1] = e, o.view = e);\n    },\n    goBack () {\n        if (o.history.length > 1) {\n            o.history.pop();\n            const [e] = o.history.slice(-1);\n            o.view = e;\n        }\n    },\n    setData (e) {\n        o.data = e;\n    }\n}, a = {\n    WALLETCONNECT_DEEPLINK_CHOICE: \"WALLETCONNECT_DEEPLINK_CHOICE\",\n    WCM_VERSION: \"WCM_VERSION\",\n    RECOMMENDED_WALLET_AMOUNT: 9,\n    isMobile () {\n        return  false ? 0 : !1;\n    },\n    isAndroid () {\n        return a.isMobile() && navigator.userAgent.toLowerCase().includes(\"android\");\n    },\n    isIos () {\n        const e = navigator.userAgent.toLowerCase();\n        return a.isMobile() && (e.includes(\"iphone\") || e.includes(\"ipad\"));\n    },\n    isHttpUrl (e) {\n        return e.startsWith(\"http://\") || e.startsWith(\"https://\");\n    },\n    isArray (e) {\n        return Array.isArray(e) && e.length > 0;\n    },\n    formatNativeUrl (e, t, s) {\n        if (a.isHttpUrl(e)) return this.formatUniversalUrl(e, t, s);\n        let n = e;\n        n.includes(\"://\") || (n = e.replaceAll(\"/\", \"\").replaceAll(\":\", \"\"), n = `${n}://`), n.endsWith(\"/\") || (n = `${n}/`), this.setWalletConnectDeepLink(n, s);\n        const i = encodeURIComponent(t);\n        return `${n}wc?uri=${i}`;\n    },\n    formatUniversalUrl (e, t, s) {\n        if (!a.isHttpUrl(e)) return this.formatNativeUrl(e, t, s);\n        let n = e;\n        n.endsWith(\"/\") || (n = `${n}/`), this.setWalletConnectDeepLink(n, s);\n        const i = encodeURIComponent(t);\n        return `${n}wc?uri=${i}`;\n    },\n    async wait (e) {\n        return new Promise((t)=>{\n            setTimeout(t, e);\n        });\n    },\n    openHref (e, t) {\n        window.open(e, t, \"noreferrer noopener\");\n    },\n    setWalletConnectDeepLink (e, t) {\n        try {\n            localStorage.setItem(a.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n                href: e,\n                name: t\n            }));\n        } catch  {\n            console.info(\"Unable to set WalletConnect deep link\");\n        }\n    },\n    setWalletConnectAndroidDeepLink (e) {\n        try {\n            const [t] = e.split(\"?\");\n            localStorage.setItem(a.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n                href: t,\n                name: \"Android\"\n            }));\n        } catch  {\n            console.info(\"Unable to set WalletConnect android deep link\");\n        }\n    },\n    removeWalletConnectDeepLink () {\n        try {\n            localStorage.removeItem(a.WALLETCONNECT_DEEPLINK_CHOICE);\n        } catch  {\n            console.info(\"Unable to remove WalletConnect deep link\");\n        }\n    },\n    setModalVersionInStorage () {\n        try {\n            typeof localStorage < \"u\" && localStorage.setItem(a.WCM_VERSION, \"2.6.2\");\n        } catch  {\n            console.info(\"Unable to set Web3Modal version in storage\");\n        }\n    },\n    getWalletRouterData () {\n        var e;\n        const t = (e = T.state.data) == null ? void 0 : e.Wallet;\n        if (!t) throw new Error('Missing \"Wallet\" view data');\n        return t;\n    }\n}, _ = typeof location < \"u\" && (location.hostname.includes(\"localhost\") || location.protocol.includes(\"https\")), r = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    enabled: _,\n    userSessionId: \"\",\n    events: [],\n    connectedWalletId: void 0\n}), R = {\n    state: r,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(r.events, ()=>e((0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.snapshot)(r.events[r.events.length - 1])));\n    },\n    initialize () {\n        r.enabled && typeof (crypto == null ? void 0 : crypto.randomUUID) < \"u\" && (r.userSessionId = crypto.randomUUID());\n    },\n    setConnectedWalletId (e) {\n        r.connectedWalletId = e;\n    },\n    click (e) {\n        if (r.enabled) {\n            const t = {\n                type: \"CLICK\",\n                name: e.name,\n                userSessionId: r.userSessionId,\n                timestamp: Date.now(),\n                data: e\n            };\n            r.events.push(t);\n        }\n    },\n    track (e) {\n        if (r.enabled) {\n            const t = {\n                type: \"TRACK\",\n                name: e.name,\n                userSessionId: r.userSessionId,\n                timestamp: Date.now(),\n                data: e\n            };\n            r.events.push(t);\n        }\n    },\n    view (e) {\n        if (r.enabled) {\n            const t = {\n                type: \"VIEW\",\n                name: e.name,\n                userSessionId: r.userSessionId,\n                timestamp: Date.now(),\n                data: e\n            };\n            r.events.push(t);\n        }\n    }\n}, c = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    chains: void 0,\n    walletConnectUri: void 0,\n    isAuth: !1,\n    isCustomDesktop: !1,\n    isCustomMobile: !1,\n    isDataLoaded: !1,\n    isUiLoaded: !1\n}), p = {\n    state: c,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(c, ()=>e(c));\n    },\n    setChains (e) {\n        c.chains = e;\n    },\n    setWalletConnectUri (e) {\n        c.walletConnectUri = e;\n    },\n    setIsCustomDesktop (e) {\n        c.isCustomDesktop = e;\n    },\n    setIsCustomMobile (e) {\n        c.isCustomMobile = e;\n    },\n    setIsDataLoaded (e) {\n        c.isDataLoaded = e;\n    },\n    setIsUiLoaded (e) {\n        c.isUiLoaded = e;\n    },\n    setIsAuth (e) {\n        c.isAuth = e;\n    }\n}, W = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    projectId: \"\",\n    mobileWallets: void 0,\n    desktopWallets: void 0,\n    walletImages: void 0,\n    chains: void 0,\n    enableAuthMode: !1,\n    enableExplorer: !0,\n    explorerExcludedWalletIds: void 0,\n    explorerRecommendedWalletIds: void 0,\n    termsOfServiceUrl: void 0,\n    privacyPolicyUrl: void 0\n}), y = {\n    state: W,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(W, ()=>e(W));\n    },\n    setConfig (e) {\n        var t, s;\n        R.initialize(), p.setChains(e.chains), p.setIsAuth(Boolean(e.enableAuthMode)), p.setIsCustomMobile(Boolean((t = e.mobileWallets) == null ? void 0 : t.length)), p.setIsCustomDesktop(Boolean((s = e.desktopWallets) == null ? void 0 : s.length)), a.setModalVersionInStorage(), Object.assign(W, e);\n    }\n};\nvar V = Object.defineProperty, D = Object.getOwnPropertySymbols, H = Object.prototype.hasOwnProperty, B = Object.prototype.propertyIsEnumerable, M = (e, t, s)=>t in e ? V(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: s\n    }) : e[t] = s, K = (e, t)=>{\n    for(var s in t || (t = {}))H.call(t, s) && M(e, s, t[s]);\n    if (D) for (var s of D(t))B.call(t, s) && M(e, s, t[s]);\n    return e;\n};\nconst L = \"https://explorer-api.walletconnect.com\", E = \"wcm\", O = \"js-2.6.2\";\nasync function w(e, t) {\n    const s = K({\n        sdkType: E,\n        sdkVersion: O\n    }, t), n = new URL(e, L);\n    return n.searchParams.append(\"projectId\", y.state.projectId), Object.entries(s).forEach(([i, l])=>{\n        l && n.searchParams.append(i, String(l));\n    }), (await fetch(n)).json();\n}\nconst m = {\n    async getDesktopListings (e) {\n        return w(\"/w3m/v1/getDesktopListings\", e);\n    },\n    async getMobileListings (e) {\n        return w(\"/w3m/v1/getMobileListings\", e);\n    },\n    async getInjectedListings (e) {\n        return w(\"/w3m/v1/getInjectedListings\", e);\n    },\n    async getAllListings (e) {\n        return w(\"/w3m/v1/getAllListings\", e);\n    },\n    getWalletImageUrl (e) {\n        return `${L}/w3m/v1/getWalletImage/${e}?projectId=${y.state.projectId}&sdkType=${E}&sdkVersion=${O}`;\n    },\n    getAssetImageUrl (e) {\n        return `${L}/w3m/v1/getAssetImage/${e}?projectId=${y.state.projectId}&sdkType=${E}&sdkVersion=${O}`;\n    }\n};\nvar z = Object.defineProperty, j = Object.getOwnPropertySymbols, J = Object.prototype.hasOwnProperty, q = Object.prototype.propertyIsEnumerable, k = (e, t, s)=>t in e ? z(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: s\n    }) : e[t] = s, F = (e, t)=>{\n    for(var s in t || (t = {}))J.call(t, s) && k(e, s, t[s]);\n    if (j) for (var s of j(t))q.call(t, s) && k(e, s, t[s]);\n    return e;\n};\nconst N = a.isMobile(), d = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    wallets: {\n        listings: [],\n        total: 0,\n        page: 1\n    },\n    search: {\n        listings: [],\n        total: 0,\n        page: 1\n    },\n    recomendedWallets: []\n}), te = {\n    state: d,\n    async getRecomendedWallets () {\n        const { explorerRecommendedWalletIds: e, explorerExcludedWalletIds: t } = y.state;\n        if (e === \"NONE\" || t === \"ALL\" && !e) return d.recomendedWallets;\n        if (a.isArray(e)) {\n            const s = {\n                recommendedIds: e.join(\",\")\n            }, { listings: n } = await m.getAllListings(s), i = Object.values(n);\n            i.sort((l, v)=>{\n                const b = e.indexOf(l.id), f = e.indexOf(v.id);\n                return b - f;\n            }), d.recomendedWallets = i;\n        } else {\n            const { chains: s, isAuth: n } = p.state, i = s?.join(\",\"), l = a.isArray(t), v = {\n                page: 1,\n                sdks: n ? \"auth_v1\" : void 0,\n                entries: a.RECOMMENDED_WALLET_AMOUNT,\n                chains: i,\n                version: 2,\n                excludedIds: l ? t.join(\",\") : void 0\n            }, { listings: b } = N ? await m.getMobileListings(v) : await m.getDesktopListings(v);\n            d.recomendedWallets = Object.values(b);\n        }\n        return d.recomendedWallets;\n    },\n    async getWallets (e) {\n        const t = F({}, e), { explorerRecommendedWalletIds: s, explorerExcludedWalletIds: n } = y.state, { recomendedWallets: i } = d;\n        if (n === \"ALL\") return d.wallets;\n        i.length ? t.excludedIds = i.map((x)=>x.id).join(\",\") : a.isArray(s) && (t.excludedIds = s.join(\",\")), a.isArray(n) && (t.excludedIds = [\n            t.excludedIds,\n            n\n        ].filter(Boolean).join(\",\")), p.state.isAuth && (t.sdks = \"auth_v1\");\n        const { page: l, search: v } = e, { listings: b, total: f } = N ? await m.getMobileListings(t) : await m.getDesktopListings(t), A = Object.values(b), U = v ? \"search\" : \"wallets\";\n        return d[U] = {\n            listings: [\n                ...d[U].listings,\n                ...A\n            ],\n            total: f,\n            page: l ?? 1\n        }, {\n            listings: A,\n            total: f\n        };\n    },\n    getWalletImageUrl (e) {\n        return m.getWalletImageUrl(e);\n    },\n    getAssetImageUrl (e) {\n        return m.getAssetImageUrl(e);\n    },\n    resetSearch () {\n        d.search = {\n            listings: [],\n            total: 0,\n            page: 1\n        };\n    }\n}, I = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    open: !1\n}), se = {\n    state: I,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(I, ()=>e(I));\n    },\n    async open (e) {\n        return new Promise((t)=>{\n            const { isUiLoaded: s, isDataLoaded: n } = p.state;\n            if (a.removeWalletConnectDeepLink(), p.setWalletConnectUri(e?.uri), p.setChains(e?.chains), T.reset(\"ConnectWallet\"), s && n) I.open = !0, t();\n            else {\n                const i = setInterval(()=>{\n                    const l = p.state;\n                    l.isUiLoaded && l.isDataLoaded && (clearInterval(i), I.open = !0, t());\n                }, 200);\n            }\n        });\n    },\n    close () {\n        I.open = !1;\n    }\n};\nvar G = Object.defineProperty, $ = Object.getOwnPropertySymbols, Q = Object.prototype.hasOwnProperty, X = Object.prototype.propertyIsEnumerable, S = (e, t, s)=>t in e ? G(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: s\n    }) : e[t] = s, Y = (e, t)=>{\n    for(var s in t || (t = {}))Q.call(t, s) && S(e, s, t[s]);\n    if ($) for (var s of $(t))X.call(t, s) && S(e, s, t[s]);\n    return e;\n};\nfunction Z() {\n    return typeof matchMedia < \"u\" && matchMedia(\"(prefers-color-scheme: dark)\").matches;\n}\nconst C = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    themeMode: Z() ? \"dark\" : \"light\"\n}), ne = {\n    state: C,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(C, ()=>e(C));\n    },\n    setThemeConfig (e) {\n        const { themeMode: t, themeVariables: s } = e;\n        t && (C.themeMode = t), s && (C.themeVariables = Y({}, s));\n    }\n}, g = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    open: !1,\n    message: \"\",\n    variant: \"success\"\n}), oe = {\n    state: g,\n    subscribe (e) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(g, ()=>e(g));\n    },\n    openToast (e, t) {\n        g.open = !0, g.message = e, g.variant = t;\n    },\n    closeToast () {\n        g.open = !1;\n    }\n};\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/modal-core/dist/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@walletconnect/modal/dist/index.js":
/*!*************************************************************!*\
  !*** ../../node_modules/@walletconnect/modal/dist/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WalletConnectModal: () => (/* binding */ d)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/modal-core */ \"(ssr)/../../node_modules/@walletconnect/modal-core/dist/index.js\");\n\nclass d {\n    constructor(e){\n        this.openModal = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalCtrl.open, this.closeModal = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalCtrl.close, this.subscribeModal = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalCtrl.subscribe, this.setTheme = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ThemeCtrl.setThemeConfig, _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ThemeCtrl.setThemeConfig(e), _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ConfigCtrl.setConfig(e), this.initUi();\n    }\n    async initUi() {\n        if (false) {}\n    }\n}\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L21vZGFsL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0c7QUFBQSxNQUFNUTtJQUFFQyxZQUFZQyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNDLFNBQVMsR0FBQ1YsZ0VBQUNBLENBQUNXLElBQUksRUFBQyxJQUFJLENBQUNDLFVBQVUsR0FBQ1osZ0VBQUNBLENBQUNhLEtBQUssRUFBQyxJQUFJLENBQUNDLGNBQWMsR0FBQ2QsZ0VBQUNBLENBQUNlLFNBQVMsRUFBQyxJQUFJLENBQUNDLFFBQVEsR0FBQ2QsZ0VBQUNBLENBQUNlLGNBQWMsRUFBQ2YsZ0VBQUNBLENBQUNlLGNBQWMsQ0FBQ1IsSUFBR0wsaUVBQUNBLENBQUNjLFNBQVMsQ0FBQ1QsSUFBRyxJQUFJLENBQUNVLE1BQU07SUFBRTtJQUFDLE1BQU1BLFNBQVE7UUFBQyxJQUFHLEtBQWlCLEVBQUMsRUFBNEo7SUFBQTtBQUFDO0FBQWlDLENBQzdmLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NzYS8uLi8uLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwvZGlzdC9pbmRleC5qcz80NDAxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydHtNb2RhbEN0cmwgYXMgdCxUaGVtZUN0cmwgYXMgbyxDb25maWdDdHJsIGFzIGksT3B0aW9uc0N0cmwgYXMgbn1mcm9tXCJAd2FsbGV0Y29ubmVjdC9tb2RhbC1jb3JlXCI7Y2xhc3MgZHtjb25zdHJ1Y3RvcihlKXt0aGlzLm9wZW5Nb2RhbD10Lm9wZW4sdGhpcy5jbG9zZU1vZGFsPXQuY2xvc2UsdGhpcy5zdWJzY3JpYmVNb2RhbD10LnN1YnNjcmliZSx0aGlzLnNldFRoZW1lPW8uc2V0VGhlbWVDb25maWcsby5zZXRUaGVtZUNvbmZpZyhlKSxpLnNldENvbmZpZyhlKSx0aGlzLmluaXRVaSgpfWFzeW5jIGluaXRVaSgpe2lmKHR5cGVvZiB3aW5kb3c8XCJ1XCIpe2F3YWl0IGltcG9ydChcIkB3YWxsZXRjb25uZWN0L21vZGFsLXVpXCIpO2NvbnN0IGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIndjbS1tb2RhbFwiKTtkb2N1bWVudC5ib2R5Lmluc2VydEFkamFjZW50RWxlbWVudChcImJlZm9yZWVuZFwiLGUpLG4uc2V0SXNVaUxvYWRlZCghMCl9fX1leHBvcnR7ZCBhcyBXYWxsZXRDb25uZWN0TW9kYWx9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOlsiTW9kYWxDdHJsIiwidCIsIlRoZW1lQ3RybCIsIm8iLCJDb25maWdDdHJsIiwiaSIsIk9wdGlvbnNDdHJsIiwibiIsImQiLCJjb25zdHJ1Y3RvciIsImUiLCJvcGVuTW9kYWwiLCJvcGVuIiwiY2xvc2VNb2RhbCIsImNsb3NlIiwic3Vic2NyaWJlTW9kYWwiLCJzdWJzY3JpYmUiLCJzZXRUaGVtZSIsInNldFRoZW1lQ29uZmlnIiwic2V0Q29uZmlnIiwiaW5pdFVpIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiYm9keSIsImluc2VydEFkamFjZW50RWxlbWVudCIsInNldElzVWlMb2FkZWQiLCJXYWxsZXRDb25uZWN0TW9kYWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@walletconnect/modal/dist/index.js\n");

/***/ })

};
;