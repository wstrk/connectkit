"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/lossless-json";
exports.ids = ["vendor-chunks/lossless-json"];
exports.modules = {

/***/ "(ssr)/../../node_modules/lossless-json/lib/esm/LosslessNumber.js":
/*!******************************************************************!*\
  !*** ../../node_modules/lossless-json/lib/esm/LosslessNumber.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LosslessNumber: () => (/* binding */ LosslessNumber),\n/* harmony export */   isLosslessNumber: () => (/* binding */ isLosslessNumber),\n/* harmony export */   toLosslessNumber: () => (/* binding */ toLosslessNumber)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../../node_modules/lossless-json/lib/esm/utils.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\n\n/**\n * A lossless number. Stores its numeric value as string\n */ var LosslessNumber = /*#__PURE__*/ function() {\n    function LosslessNumber(value) {\n        _classCallCheck(this, LosslessNumber);\n        // numeric value as string\n        // type information\n        _defineProperty(this, \"isLosslessNumber\", true);\n        if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isNumber)(value)) {\n            throw new Error('Invalid number (value: \"' + value + '\")');\n        }\n        this.value = value;\n    }\n    /**\n   * Get the value of the LosslessNumber as number or bigint.\n   *\n   * - a number is returned for safe numbers and decimal values that only lose some insignificant digits\n   * - a bigint is returned for big integer numbers\n   * - an Error is thrown for values that will overflow or underflow\n   *\n   * Note that you can implement your own strategy for conversion by just getting the value as string\n   * via .toString(), and using util functions like isInteger, isSafeNumber, getUnsafeNumberReason,\n   * and toSafeNumberOrThrow to convert it to a numeric value.\n   */ _createClass(LosslessNumber, [\n        {\n            key: \"valueOf\",\n            value: function valueOf() {\n                var unsafeReason = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getUnsafeNumberReason)(this.value);\n                // safe or truncate_float\n                if (unsafeReason === undefined || unsafeReason === _utils_js__WEBPACK_IMPORTED_MODULE_0__.UnsafeNumberReason.truncate_float) {\n                    return parseFloat(this.value);\n                }\n                // truncate_integer\n                if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(this.value)) {\n                    return BigInt(this.value);\n                }\n                // overflow or underflow\n                throw new Error(\"Cannot safely convert to number: \" + \"the value '\".concat(this.value, \"' would \").concat(unsafeReason, \" and become \").concat(parseFloat(this.value)));\n            }\n        },\n        {\n            key: \"toString\",\n            value: function toString() {\n                return this.value;\n            }\n        }\n    ]);\n    return LosslessNumber;\n}();\n/**\n * Test whether a value is a LosslessNumber\n */ function isLosslessNumber(value) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return value && _typeof(value) === \"object\" && value.isLosslessNumber === true || false;\n}\n/**\n * Convert a number into a LosslessNumber if this is possible in a safe way\n * If the value has too many digits, or is NaN or Infinity, an error will be thrown\n */ function toLosslessNumber(value) {\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.extractSignificantDigits)(value + \"\").length > 15) {\n        throw new Error(\"Invalid number: contains more than 15 digits and is most likely truncated and unsafe by itself \" + \"(value: \".concat(value, \")\"));\n    }\n    if (isNaN(value)) {\n        throw new Error(\"Invalid number: NaN\");\n    }\n    if (!isFinite(value)) {\n        throw new Error(\"Invalid number: \" + value);\n    }\n    return new LosslessNumber(String(value));\n} //# sourceMappingURL=LosslessNumber.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL2xvc3NsZXNzLWpzb24vbGliL2VzbS9Mb3NzbGVzc051bWJlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsU0FBU0EsUUFBUUMsR0FBRztJQUFJO0lBQTJCLE9BQU9ELFVBQVUsY0FBYyxPQUFPRSxVQUFVLFlBQVksT0FBT0EsT0FBT0MsUUFBUSxHQUFHLFNBQVVGLEdBQUc7UUFBSSxPQUFPLE9BQU9BO0lBQUssSUFBSSxTQUFVQSxHQUFHO1FBQUksT0FBT0EsT0FBTyxjQUFjLE9BQU9DLFVBQVVELElBQUlHLFdBQVcsS0FBS0YsVUFBVUQsUUFBUUMsT0FBT0csU0FBUyxHQUFHLFdBQVcsT0FBT0o7SUFBSyxHQUFHRCxRQUFRQztBQUFNO0FBQy9VLFNBQVNLLGdCQUFnQkMsUUFBUSxFQUFFQyxXQUFXO0lBQUksSUFBSSxDQUFFRCxDQUFBQSxvQkFBb0JDLFdBQVUsR0FBSTtRQUFFLE1BQU0sSUFBSUMsVUFBVTtJQUFzQztBQUFFO0FBQ3hKLFNBQVNDLGtCQUFrQkMsTUFBTSxFQUFFQyxLQUFLO0lBQUksSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlELE1BQU1FLE1BQU0sRUFBRUQsSUFBSztRQUFFLElBQUlFLGFBQWFILEtBQUssQ0FBQ0MsRUFBRTtRQUFFRSxXQUFXQyxVQUFVLEdBQUdELFdBQVdDLFVBQVUsSUFBSTtRQUFPRCxXQUFXRSxZQUFZLEdBQUc7UUFBTSxJQUFJLFdBQVdGLFlBQVlBLFdBQVdHLFFBQVEsR0FBRztRQUFNQyxPQUFPQyxjQUFjLENBQUNULFFBQVFVLGVBQWVOLFdBQVdPLEdBQUcsR0FBR1A7SUFBYTtBQUFFO0FBQzVVLFNBQVNRLGFBQWFmLFdBQVcsRUFBRWdCLFVBQVUsRUFBRUMsV0FBVztJQUFJLElBQUlELFlBQVlkLGtCQUFrQkYsWUFBWUgsU0FBUyxFQUFFbUI7SUFBYSxJQUFJQyxhQUFhZixrQkFBa0JGLGFBQWFpQjtJQUFjTixPQUFPQyxjQUFjLENBQUNaLGFBQWEsYUFBYTtRQUFFVSxVQUFVO0lBQU07SUFBSSxPQUFPVjtBQUFhO0FBQzVSLFNBQVNrQixnQkFBZ0J6QixHQUFHLEVBQUVxQixHQUFHLEVBQUVLLEtBQUs7SUFBSUwsTUFBTUQsZUFBZUM7SUFBTSxJQUFJQSxPQUFPckIsS0FBSztRQUFFa0IsT0FBT0MsY0FBYyxDQUFDbkIsS0FBS3FCLEtBQUs7WUFBRUssT0FBT0E7WUFBT1gsWUFBWTtZQUFNQyxjQUFjO1lBQU1DLFVBQVU7UUFBSztJQUFJLE9BQU87UUFBRWpCLEdBQUcsQ0FBQ3FCLElBQUksR0FBR0s7SUFBTztJQUFFLE9BQU8xQjtBQUFLO0FBQzNPLFNBQVNvQixlQUFlTyxHQUFHO0lBQUksSUFBSU4sTUFBTU8sYUFBYUQsS0FBSztJQUFXLE9BQU81QixRQUFRc0IsU0FBUyxXQUFXQSxNQUFNUSxPQUFPUjtBQUFNO0FBQzVILFNBQVNPLGFBQWFFLEtBQUssRUFBRUMsSUFBSTtJQUFJLElBQUloQyxRQUFRK0IsV0FBVyxZQUFZQSxVQUFVLE1BQU0sT0FBT0E7SUFBTyxJQUFJRSxPQUFPRixLQUFLLENBQUM3QixPQUFPZ0MsV0FBVyxDQUFDO0lBQUUsSUFBSUQsU0FBU0UsV0FBVztRQUFFLElBQUlDLE1BQU1ILEtBQUtJLElBQUksQ0FBQ04sT0FBT0MsUUFBUTtRQUFZLElBQUloQyxRQUFRb0MsU0FBUyxVQUFVLE9BQU9BO1FBQUssTUFBTSxJQUFJM0IsVUFBVTtJQUFpRDtJQUFFLE9BQU8sQ0FBQ3VCLFNBQVMsV0FBV0YsU0FBU1EsTUFBSyxFQUFHUDtBQUFRO0FBQ3RRO0FBRXRIOztDQUVDLEdBQ00sSUFBSWEsaUJBQWlCLFdBQVcsR0FBRTtJQUN2QyxTQUFTQSxlQUFlakIsS0FBSztRQUMzQnJCLGdCQUFnQixJQUFJLEVBQUVzQztRQUN0QiwwQkFBMEI7UUFDMUIsbUJBQW1CO1FBQ25CbEIsZ0JBQWdCLElBQUksRUFBRSxvQkFBb0I7UUFDMUMsSUFBSSxDQUFDZ0IsbURBQVFBLENBQUNmLFFBQVE7WUFDcEIsTUFBTSxJQUFJa0IsTUFBTSw2QkFBNkJsQixRQUFRO1FBQ3ZEO1FBQ0EsSUFBSSxDQUFDQSxLQUFLLEdBQUdBO0lBQ2Y7SUFFQTs7Ozs7Ozs7OztHQVVDLEdBQ0RKLGFBQWFxQixnQkFBZ0I7UUFBQztZQUM1QnRCLEtBQUs7WUFDTEssT0FBTyxTQUFTbUI7Z0JBQ2QsSUFBSUMsZUFBZVAsZ0VBQXFCQSxDQUFDLElBQUksQ0FBQ2IsS0FBSztnQkFFbkQseUJBQXlCO2dCQUN6QixJQUFJb0IsaUJBQWlCWixhQUFhWSxpQkFBaUJKLHlEQUFrQkEsQ0FBQ0ssY0FBYyxFQUFFO29CQUNwRixPQUFPQyxXQUFXLElBQUksQ0FBQ3RCLEtBQUs7Z0JBQzlCO2dCQUVBLG1CQUFtQjtnQkFDbkIsSUFBSWMsb0RBQVNBLENBQUMsSUFBSSxDQUFDZCxLQUFLLEdBQUc7b0JBQ3pCLE9BQU91QixPQUFPLElBQUksQ0FBQ3ZCLEtBQUs7Z0JBQzFCO2dCQUVBLHdCQUF3QjtnQkFDeEIsTUFBTSxJQUFJa0IsTUFBTSxzQ0FBc0MsY0FBY00sTUFBTSxDQUFDLElBQUksQ0FBQ3hCLEtBQUssRUFBRSxZQUFZd0IsTUFBTSxDQUFDSixjQUFjLGdCQUFnQkksTUFBTSxDQUFDRixXQUFXLElBQUksQ0FBQ3RCLEtBQUs7WUFDdEs7UUFLRjtRQUFHO1lBQ0RMLEtBQUs7WUFDTEssT0FBTyxTQUFTeUI7Z0JBQ2QsT0FBTyxJQUFJLENBQUN6QixLQUFLO1lBQ25CO1FBS0Y7S0FBRTtJQUNGLE9BQU9pQjtBQUNULElBQUk7QUFFSjs7Q0FFQyxHQUNNLFNBQVNTLGlCQUFpQjFCLEtBQUs7SUFDcEMsNkRBQTZEO0lBQzdELGFBQWE7SUFDYixPQUFPQSxTQUFTM0IsUUFBUTJCLFdBQVcsWUFBWUEsTUFBTTBCLGdCQUFnQixLQUFLLFFBQVE7QUFDcEY7QUFFQTs7O0NBR0MsR0FDTSxTQUFTQyxpQkFBaUIzQixLQUFLO0lBQ3BDLElBQUlZLG1FQUF3QkEsQ0FBQ1osUUFBUSxJQUFJYixNQUFNLEdBQUcsSUFBSTtRQUNwRCxNQUFNLElBQUkrQixNQUFNLG9HQUFvRyxXQUFXTSxNQUFNLENBQUN4QixPQUFPO0lBQy9JO0lBQ0EsSUFBSTRCLE1BQU01QixRQUFRO1FBQ2hCLE1BQU0sSUFBSWtCLE1BQU07SUFDbEI7SUFDQSxJQUFJLENBQUNXLFNBQVM3QixRQUFRO1FBQ3BCLE1BQU0sSUFBSWtCLE1BQU0scUJBQXFCbEI7SUFDdkM7SUFDQSxPQUFPLElBQUlpQixlQUFlZCxPQUFPSDtBQUNuQyxFQUNBLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YXJrbmV0LXJlYWN0Ly4uLy4uL25vZGVfbW9kdWxlcy9sb3NzbGVzcy1qc29uL2xpYi9lc20vTG9zc2xlc3NOdW1iZXIuanM/ZDZlMSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfSwgX3R5cGVvZihvYmopOyB9XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBfdG9Qcm9wZXJ0eUtleShkZXNjcmlwdG9yLmtleSksIGRlc2NyaXB0b3IpOyB9IH1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KENvbnN0cnVjdG9yLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiBmYWxzZSB9KTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGtleSA9IF90b1Byb3BlcnR5S2V5KGtleSk7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkoYXJnKSB7IHZhciBrZXkgPSBfdG9QcmltaXRpdmUoYXJnLCBcInN0cmluZ1wiKTsgcmV0dXJuIF90eXBlb2Yoa2V5KSA9PT0gXCJzeW1ib2xcIiA/IGtleSA6IFN0cmluZyhrZXkpOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUoaW5wdXQsIGhpbnQpIHsgaWYgKF90eXBlb2YoaW5wdXQpICE9PSBcIm9iamVjdFwiIHx8IGlucHV0ID09PSBudWxsKSByZXR1cm4gaW5wdXQ7IHZhciBwcmltID0gaW5wdXRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHByaW0gIT09IHVuZGVmaW5lZCkgeyB2YXIgcmVzID0gcHJpbS5jYWxsKGlucHV0LCBoaW50IHx8IFwiZGVmYXVsdFwiKTsgaWYgKF90eXBlb2YocmVzKSAhPT0gXCJvYmplY3RcIikgcmV0dXJuIHJlczsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpOyB9IHJldHVybiAoaGludCA9PT0gXCJzdHJpbmdcIiA/IFN0cmluZyA6IE51bWJlcikoaW5wdXQpOyB9XG5pbXBvcnQgeyBleHRyYWN0U2lnbmlmaWNhbnREaWdpdHMsIGdldFVuc2FmZU51bWJlclJlYXNvbiwgaXNJbnRlZ2VyLCBpc051bWJlciwgVW5zYWZlTnVtYmVyUmVhc29uIH0gZnJvbSAnLi91dGlscy5qcyc7XG5cbi8qKlxuICogQSBsb3NzbGVzcyBudW1iZXIuIFN0b3JlcyBpdHMgbnVtZXJpYyB2YWx1ZSBhcyBzdHJpbmdcbiAqL1xuZXhwb3J0IHZhciBMb3NzbGVzc051bWJlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIExvc3NsZXNzTnVtYmVyKHZhbHVlKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExvc3NsZXNzTnVtYmVyKTtcbiAgICAvLyBudW1lcmljIHZhbHVlIGFzIHN0cmluZ1xuICAgIC8vIHR5cGUgaW5mb3JtYXRpb25cbiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgXCJpc0xvc3NsZXNzTnVtYmVyXCIsIHRydWUpO1xuICAgIGlmICghaXNOdW1iZXIodmFsdWUpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgbnVtYmVyICh2YWx1ZTogXCInICsgdmFsdWUgKyAnXCIpJyk7XG4gICAgfVxuICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdGhlIHZhbHVlIG9mIHRoZSBMb3NzbGVzc051bWJlciBhcyBudW1iZXIgb3IgYmlnaW50LlxuICAgKlxuICAgKiAtIGEgbnVtYmVyIGlzIHJldHVybmVkIGZvciBzYWZlIG51bWJlcnMgYW5kIGRlY2ltYWwgdmFsdWVzIHRoYXQgb25seSBsb3NlIHNvbWUgaW5zaWduaWZpY2FudCBkaWdpdHNcbiAgICogLSBhIGJpZ2ludCBpcyByZXR1cm5lZCBmb3IgYmlnIGludGVnZXIgbnVtYmVyc1xuICAgKiAtIGFuIEVycm9yIGlzIHRocm93biBmb3IgdmFsdWVzIHRoYXQgd2lsbCBvdmVyZmxvdyBvciB1bmRlcmZsb3dcbiAgICpcbiAgICogTm90ZSB0aGF0IHlvdSBjYW4gaW1wbGVtZW50IHlvdXIgb3duIHN0cmF0ZWd5IGZvciBjb252ZXJzaW9uIGJ5IGp1c3QgZ2V0dGluZyB0aGUgdmFsdWUgYXMgc3RyaW5nXG4gICAqIHZpYSAudG9TdHJpbmcoKSwgYW5kIHVzaW5nIHV0aWwgZnVuY3Rpb25zIGxpa2UgaXNJbnRlZ2VyLCBpc1NhZmVOdW1iZXIsIGdldFVuc2FmZU51bWJlclJlYXNvbixcbiAgICogYW5kIHRvU2FmZU51bWJlck9yVGhyb3cgdG8gY29udmVydCBpdCB0byBhIG51bWVyaWMgdmFsdWUuXG4gICAqL1xuICBfY3JlYXRlQ2xhc3MoTG9zc2xlc3NOdW1iZXIsIFt7XG4gICAga2V5OiBcInZhbHVlT2ZcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsdWVPZigpIHtcbiAgICAgIHZhciB1bnNhZmVSZWFzb24gPSBnZXRVbnNhZmVOdW1iZXJSZWFzb24odGhpcy52YWx1ZSk7XG5cbiAgICAgIC8vIHNhZmUgb3IgdHJ1bmNhdGVfZmxvYXRcbiAgICAgIGlmICh1bnNhZmVSZWFzb24gPT09IHVuZGVmaW5lZCB8fCB1bnNhZmVSZWFzb24gPT09IFVuc2FmZU51bWJlclJlYXNvbi50cnVuY2F0ZV9mbG9hdCkge1xuICAgICAgICByZXR1cm4gcGFyc2VGbG9hdCh0aGlzLnZhbHVlKTtcbiAgICAgIH1cblxuICAgICAgLy8gdHJ1bmNhdGVfaW50ZWdlclxuICAgICAgaWYgKGlzSW50ZWdlcih0aGlzLnZhbHVlKSkge1xuICAgICAgICByZXR1cm4gQmlnSW50KHRoaXMudmFsdWUpO1xuICAgICAgfVxuXG4gICAgICAvLyBvdmVyZmxvdyBvciB1bmRlcmZsb3dcbiAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IHNhZmVseSBjb252ZXJ0IHRvIG51bWJlcjogJyArIFwidGhlIHZhbHVlICdcIi5jb25jYXQodGhpcy52YWx1ZSwgXCInIHdvdWxkIFwiKS5jb25jYXQodW5zYWZlUmVhc29uLCBcIiBhbmQgYmVjb21lIFwiKS5jb25jYXQocGFyc2VGbG9hdCh0aGlzLnZhbHVlKSkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgdmFsdWUgb2YgdGhlIExvc3NsZXNzTnVtYmVyIGFzIHN0cmluZy5cbiAgICAgKi9cbiAgfSwge1xuICAgIGtleTogXCJ0b1N0cmluZ1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICAgIHJldHVybiB0aGlzLnZhbHVlO1xuICAgIH1cblxuICAgIC8vIE5vdGU6IHdlIGRvIE5PVCBpbXBsZW1lbnQgYSAudG9KU09OKCkgbWV0aG9kLCBhbmQgeW91IHNob3VsZCBub3QgaW1wbGVtZW50XG4gICAgLy8gb3IgdXNlIHRoYXQsIGl0IGNhbm5vdCBzYWZlbHkgdHVybiB0aGUgbnVtZXJpYyB2YWx1ZSBpbiB0aGUgc3RyaW5nIGludG9cbiAgICAvLyBzdHJpbmdpZmllZCBKU09OIHNpbmNlIGl0IGhhcyB0byBiZSBwYXJzZWQgaW50byBhIG51bWJlciBmaXJzdC5cbiAgfV0pO1xuICByZXR1cm4gTG9zc2xlc3NOdW1iZXI7XG59KCk7XG5cbi8qKlxuICogVGVzdCB3aGV0aGVyIGEgdmFsdWUgaXMgYSBMb3NzbGVzc051bWJlclxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNMb3NzbGVzc051bWJlcih2YWx1ZSkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10cy1jb21tZW50XG4gIC8vIEB0cy1pZ25vcmVcbiAgcmV0dXJuIHZhbHVlICYmIF90eXBlb2YodmFsdWUpID09PSAnb2JqZWN0JyAmJiB2YWx1ZS5pc0xvc3NsZXNzTnVtYmVyID09PSB0cnVlIHx8IGZhbHNlO1xufVxuXG4vKipcbiAqIENvbnZlcnQgYSBudW1iZXIgaW50byBhIExvc3NsZXNzTnVtYmVyIGlmIHRoaXMgaXMgcG9zc2libGUgaW4gYSBzYWZlIHdheVxuICogSWYgdGhlIHZhbHVlIGhhcyB0b28gbWFueSBkaWdpdHMsIG9yIGlzIE5hTiBvciBJbmZpbml0eSwgYW4gZXJyb3Igd2lsbCBiZSB0aHJvd25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvTG9zc2xlc3NOdW1iZXIodmFsdWUpIHtcbiAgaWYgKGV4dHJhY3RTaWduaWZpY2FudERpZ2l0cyh2YWx1ZSArICcnKS5sZW5ndGggPiAxNSkge1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBudW1iZXI6IGNvbnRhaW5zIG1vcmUgdGhhbiAxNSBkaWdpdHMgYW5kIGlzIG1vc3QgbGlrZWx5IHRydW5jYXRlZCBhbmQgdW5zYWZlIGJ5IGl0c2VsZiAnICsgXCIodmFsdWU6IFwiLmNvbmNhdCh2YWx1ZSwgXCIpXCIpKTtcbiAgfVxuICBpZiAoaXNOYU4odmFsdWUpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIG51bWJlcjogTmFOJyk7XG4gIH1cbiAgaWYgKCFpc0Zpbml0ZSh2YWx1ZSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgbnVtYmVyOiAnICsgdmFsdWUpO1xuICB9XG4gIHJldHVybiBuZXcgTG9zc2xlc3NOdW1iZXIoU3RyaW5nKHZhbHVlKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Mb3NzbGVzc051bWJlci5qcy5tYXAiXSwibmFtZXMiOlsiX3R5cGVvZiIsIm9iaiIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJfY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiVHlwZUVycm9yIiwiX2RlZmluZVByb3BlcnRpZXMiLCJ0YXJnZXQiLCJwcm9wcyIsImkiLCJsZW5ndGgiLCJkZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJfdG9Qcm9wZXJ0eUtleSIsImtleSIsIl9jcmVhdGVDbGFzcyIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsIl9kZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiYXJnIiwiX3RvUHJpbWl0aXZlIiwiU3RyaW5nIiwiaW5wdXQiLCJoaW50IiwicHJpbSIsInRvUHJpbWl0aXZlIiwidW5kZWZpbmVkIiwicmVzIiwiY2FsbCIsIk51bWJlciIsImV4dHJhY3RTaWduaWZpY2FudERpZ2l0cyIsImdldFVuc2FmZU51bWJlclJlYXNvbiIsImlzSW50ZWdlciIsImlzTnVtYmVyIiwiVW5zYWZlTnVtYmVyUmVhc29uIiwiTG9zc2xlc3NOdW1iZXIiLCJFcnJvciIsInZhbHVlT2YiLCJ1bnNhZmVSZWFzb24iLCJ0cnVuY2F0ZV9mbG9hdCIsInBhcnNlRmxvYXQiLCJCaWdJbnQiLCJjb25jYXQiLCJ0b1N0cmluZyIsImlzTG9zc2xlc3NOdW1iZXIiLCJ0b0xvc3NsZXNzTnVtYmVyIiwiaXNOYU4iLCJpc0Zpbml0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/lossless-json/lib/esm/LosslessNumber.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/lossless-json/lib/esm/config.js":
/*!**********************************************************!*\
  !*** ../../node_modules/lossless-json/lib/esm/config.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config)\n/* harmony export */ });\n/**\n * Get and/or set configuration options\n * @deprecated There is no config anymore\n */ // eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction config(options) {\n    // Backward compatibility warning for v1.x\n    throw new Error(\"config is deprecated, support for circularRefs is removed from the library. \" + \"If you encounter circular references in your data structures, \" + \"please rethink your datastructures: \" + \"better prevent circular references in the first place.\");\n} //# sourceMappingURL=config.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL2xvc3NsZXNzLWpzb24vbGliL2VzbS9jb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Q0FHQyxHQUFHLDZEQUE2RDtBQUMxRCxTQUFTQSxPQUFPQyxPQUFPO0lBQzVCLDBDQUEwQztJQUMxQyxNQUFNLElBQUlDLE1BQU0saUZBQWlGLG1FQUFtRSx5Q0FBeUM7QUFDL00sRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFya25ldC1yZWFjdC8uLi8uLi9ub2RlX21vZHVsZXMvbG9zc2xlc3MtanNvbi9saWIvZXNtL2NvbmZpZy5qcz84YzJjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2V0IGFuZC9vciBzZXQgY29uZmlndXJhdGlvbiBvcHRpb25zXG4gKiBAZGVwcmVjYXRlZCBUaGVyZSBpcyBubyBjb25maWcgYW55bW9yZVxuICovIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbmV4cG9ydCBmdW5jdGlvbiBjb25maWcob3B0aW9ucykge1xuICAvLyBCYWNrd2FyZCBjb21wYXRpYmlsaXR5IHdhcm5pbmcgZm9yIHYxLnhcbiAgdGhyb3cgbmV3IEVycm9yKCdjb25maWcgaXMgZGVwcmVjYXRlZCwgc3VwcG9ydCBmb3IgY2lyY3VsYXJSZWZzIGlzIHJlbW92ZWQgZnJvbSB0aGUgbGlicmFyeS4gJyArICdJZiB5b3UgZW5jb3VudGVyIGNpcmN1bGFyIHJlZmVyZW5jZXMgaW4geW91ciBkYXRhIHN0cnVjdHVyZXMsICcgKyAncGxlYXNlIHJldGhpbmsgeW91ciBkYXRhc3RydWN0dXJlczogJyArICdiZXR0ZXIgcHJldmVudCBjaXJjdWxhciByZWZlcmVuY2VzIGluIHRoZSBmaXJzdCBwbGFjZS4nKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbmZpZy5qcy5tYXAiXSwibmFtZXMiOlsiY29uZmlnIiwib3B0aW9ucyIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/lossless-json/lib/esm/config.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/lossless-json/lib/esm/index.js":
/*!*********************************************************!*\
  !*** ../../node_modules/lossless-json/lib/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LosslessNumber: () => (/* reexport safe */ _LosslessNumber_js__WEBPACK_IMPORTED_MODULE_3__.LosslessNumber),\n/* harmony export */   UnsafeNumberReason: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.UnsafeNumberReason),\n/* harmony export */   config: () => (/* reexport safe */ _config_js__WEBPACK_IMPORTED_MODULE_0__.config),\n/* harmony export */   getUnsafeNumberReason: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.getUnsafeNumberReason),\n/* harmony export */   isInteger: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.isInteger),\n/* harmony export */   isLosslessNumber: () => (/* reexport safe */ _LosslessNumber_js__WEBPACK_IMPORTED_MODULE_3__.isLosslessNumber),\n/* harmony export */   isNumber: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.isNumber),\n/* harmony export */   isSafeNumber: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.isSafeNumber),\n/* harmony export */   parse: () => (/* reexport safe */ _parse_js__WEBPACK_IMPORTED_MODULE_1__.parse),\n/* harmony export */   parseLosslessNumber: () => (/* reexport safe */ _numberParsers_js__WEBPACK_IMPORTED_MODULE_5__.parseLosslessNumber),\n/* harmony export */   parseNumberAndBigInt: () => (/* reexport safe */ _numberParsers_js__WEBPACK_IMPORTED_MODULE_5__.parseNumberAndBigInt),\n/* harmony export */   reviveDate: () => (/* reexport safe */ _reviveDate_js__WEBPACK_IMPORTED_MODULE_4__.reviveDate),\n/* harmony export */   stringify: () => (/* reexport safe */ _stringify_js__WEBPACK_IMPORTED_MODULE_2__.stringify),\n/* harmony export */   toLosslessNumber: () => (/* reexport safe */ _LosslessNumber_js__WEBPACK_IMPORTED_MODULE_3__.toLosslessNumber),\n/* harmony export */   toSafeNumberOrThrow: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_6__.toSafeNumberOrThrow)\n/* harmony export */ });\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config.js */ \"(ssr)/../../node_modules/lossless-json/lib/esm/config.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parse.js */ \"(ssr)/../../node_modules/lossless-json/lib/esm/parse.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stringify.js */ \"(ssr)/../../node_modules/lossless-json/lib/esm/stringify.js\");\n/* harmony import */ var _LosslessNumber_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./LosslessNumber.js */ \"(ssr)/../../node_modules/lossless-json/lib/esm/LosslessNumber.js\");\n/* harmony import */ var _reviveDate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reviveDate.js */ \"(ssr)/../../node_modules/lossless-json/lib/esm/reviveDate.js\");\n/* harmony import */ var _numberParsers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./numberParsers.js */ \"(ssr)/../../node_modules/lossless-json/lib/esm/numberParsers.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../../node_modules/lossless-json/lib/esm/utils.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./types.js */ \"(ssr)/../../node_modules/lossless-json/lib/esm/types.js\");\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL2xvc3NsZXNzLWpzb24vbGliL2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFxQztBQUNGO0FBQ1E7QUFDOEM7QUFDNUM7QUFDa0M7QUFDZ0Q7QUFDcEcsQ0FDM0IsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhcmtuZXQtcmVhY3QvLi4vLi4vbm9kZV9tb2R1bGVzL2xvc3NsZXNzLWpzb24vbGliL2VzbS9pbmRleC5qcz83OTM2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGNvbmZpZyB9IGZyb20gJy4vY29uZmlnLmpzJztcbmV4cG9ydCB7IHBhcnNlIH0gZnJvbSAnLi9wYXJzZS5qcyc7XG5leHBvcnQgeyBzdHJpbmdpZnkgfSBmcm9tICcuL3N0cmluZ2lmeS5qcyc7XG5leHBvcnQgeyBMb3NzbGVzc051bWJlciwgaXNMb3NzbGVzc051bWJlciwgdG9Mb3NzbGVzc051bWJlciB9IGZyb20gJy4vTG9zc2xlc3NOdW1iZXIuanMnO1xuZXhwb3J0IHsgcmV2aXZlRGF0ZSB9IGZyb20gJy4vcmV2aXZlRGF0ZS5qcyc7XG5leHBvcnQgeyBwYXJzZUxvc3NsZXNzTnVtYmVyLCBwYXJzZU51bWJlckFuZEJpZ0ludCB9IGZyb20gJy4vbnVtYmVyUGFyc2Vycy5qcyc7XG5leHBvcnQgeyBVbnNhZmVOdW1iZXJSZWFzb24sIGlzSW50ZWdlciwgaXNOdW1iZXIsIGlzU2FmZU51bWJlciwgdG9TYWZlTnVtYmVyT3JUaHJvdywgZ2V0VW5zYWZlTnVtYmVyUmVhc29uIH0gZnJvbSAnLi91dGlscy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3R5cGVzLmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJjb25maWciLCJwYXJzZSIsInN0cmluZ2lmeSIsIkxvc3NsZXNzTnVtYmVyIiwiaXNMb3NzbGVzc051bWJlciIsInRvTG9zc2xlc3NOdW1iZXIiLCJyZXZpdmVEYXRlIiwicGFyc2VMb3NzbGVzc051bWJlciIsInBhcnNlTnVtYmVyQW5kQmlnSW50IiwiVW5zYWZlTnVtYmVyUmVhc29uIiwiaXNJbnRlZ2VyIiwiaXNOdW1iZXIiLCJpc1NhZmVOdW1iZXIiLCJ0b1NhZmVOdW1iZXJPclRocm93IiwiZ2V0VW5zYWZlTnVtYmVyUmVhc29uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/lossless-json/lib/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/lossless-json/lib/esm/numberParsers.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/lossless-json/lib/esm/numberParsers.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseLosslessNumber: () => (/* binding */ parseLosslessNumber),\n/* harmony export */   parseNumberAndBigInt: () => (/* binding */ parseNumberAndBigInt)\n/* harmony export */ });\n/* harmony import */ var _LosslessNumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LosslessNumber.js */ \"(ssr)/../../node_modules/lossless-json/lib/esm/LosslessNumber.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../../node_modules/lossless-json/lib/esm/utils.js\");\n\n\nfunction parseLosslessNumber(value) {\n    return new _LosslessNumber_js__WEBPACK_IMPORTED_MODULE_0__.LosslessNumber(value);\n}\nfunction parseNumberAndBigInt(value) {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isInteger)(value) ? BigInt(value) : parseFloat(value);\n} //# sourceMappingURL=numberParsers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL2xvc3NsZXNzLWpzb24vbGliL2VzbS9udW1iZXJQYXJzZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBcUQ7QUFDZDtBQUNoQyxTQUFTRSxvQkFBb0JDLEtBQUs7SUFDdkMsT0FBTyxJQUFJSCw4REFBY0EsQ0FBQ0c7QUFDNUI7QUFDTyxTQUFTQyxxQkFBcUJELEtBQUs7SUFDeEMsT0FBT0Ysb0RBQVNBLENBQUNFLFNBQVNFLE9BQU9GLFNBQVNHLFdBQVdIO0FBQ3ZELEVBQ0EseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhcmtuZXQtcmVhY3QvLi4vLi4vbm9kZV9tb2R1bGVzL2xvc3NsZXNzLWpzb24vbGliL2VzbS9udW1iZXJQYXJzZXJzLmpzPzNkNDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9zc2xlc3NOdW1iZXIgfSBmcm9tICcuL0xvc3NsZXNzTnVtYmVyLmpzJztcbmltcG9ydCB7IGlzSW50ZWdlciB9IGZyb20gJy4vdXRpbHMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlTG9zc2xlc3NOdW1iZXIodmFsdWUpIHtcbiAgcmV0dXJuIG5ldyBMb3NzbGVzc051bWJlcih2YWx1ZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VOdW1iZXJBbmRCaWdJbnQodmFsdWUpIHtcbiAgcmV0dXJuIGlzSW50ZWdlcih2YWx1ZSkgPyBCaWdJbnQodmFsdWUpIDogcGFyc2VGbG9hdCh2YWx1ZSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1udW1iZXJQYXJzZXJzLmpzLm1hcCJdLCJuYW1lcyI6WyJMb3NzbGVzc051bWJlciIsImlzSW50ZWdlciIsInBhcnNlTG9zc2xlc3NOdW1iZXIiLCJ2YWx1ZSIsInBhcnNlTnVtYmVyQW5kQmlnSW50IiwiQmlnSW50IiwicGFyc2VGbG9hdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/lossless-json/lib/esm/numberParsers.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/lossless-json/lib/esm/parse.js":
/*!*********************************************************!*\
  !*** ../../node_modules/lossless-json/lib/esm/parse.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codeLowercaseA: () => (/* binding */ codeLowercaseA),\n/* harmony export */   codeLowercaseE: () => (/* binding */ codeLowercaseE),\n/* harmony export */   codeLowercaseF: () => (/* binding */ codeLowercaseF),\n/* harmony export */   codeUppercaseA: () => (/* binding */ codeUppercaseA),\n/* harmony export */   codeUppercaseE: () => (/* binding */ codeUppercaseE),\n/* harmony export */   codeUppercaseF: () => (/* binding */ codeUppercaseF),\n/* harmony export */   isDeepEqual: () => (/* binding */ isDeepEqual),\n/* harmony export */   isValidStringCharacter: () => (/* binding */ isValidStringCharacter),\n/* harmony export */   parse: () => (/* binding */ parse)\n/* harmony export */ });\n/* harmony import */ var _numberParsers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./numberParsers.js */ \"(ssr)/../../node_modules/lossless-json/lib/esm/numberParsers.js\");\n/* harmony import */ var _revive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./revive.js */ \"(ssr)/../../node_modules/lossless-json/lib/esm/revive.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\n/**\n * The LosslessJSON.parse() method parses a string as JSON, optionally transforming\n * the value produced by parsing.\n *\n * The parser is based on the parser of Tan Li Hou shared in\n * https://lihautan.com/json-parser-with-javascript/\n *\n * @param text\n * The string to parse as JSON. See the JSON object for a description of JSON syntax.\n *\n * @param [reviver]\n * If a function, prescribes how the value originally produced by parsing is\n * transformed, before being returned.\n *\n * @param [parseNumber=parseLosslessNumber]\n * Pass a custom number parser. Input is a string, and the output can be unknown\n * numeric value: number, bigint, LosslessNumber, or a custom BigNumber library.\n *\n * @returns Returns the Object corresponding to the given JSON text.\n *\n * @throws Throws a SyntaxError exception if the string to parse is not valid JSON.\n */ function parse(text, reviver) {\n    var parseNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _numberParsers_js__WEBPACK_IMPORTED_MODULE_0__.parseLosslessNumber;\n    var i = 0;\n    var value = parseValue();\n    expectValue(value);\n    expectEndOfInput();\n    return reviver ? (0,_revive_js__WEBPACK_IMPORTED_MODULE_1__.revive)(value, reviver) : value;\n    function parseObject() {\n        if (text.charCodeAt(i) === codeOpeningBrace) {\n            i++;\n            skipWhitespace();\n            var object = {};\n            var initial = true;\n            while(i < text.length && text.charCodeAt(i) !== codeClosingBrace){\n                if (!initial) {\n                    eatComma();\n                    skipWhitespace();\n                } else {\n                    initial = false;\n                }\n                var start = i;\n                var key = parseString();\n                if (key === undefined) {\n                    throwObjectKeyExpected();\n                }\n                skipWhitespace();\n                eatColon();\n                var _value = parseValue();\n                if (_value === undefined) {\n                    throwObjectValueExpected();\n                }\n                // TODO: test deep equal instead of strict equal\n                if (Object.prototype.hasOwnProperty.call(object, key) && !isDeepEqual(_value, object[key])) {\n                    // Note that we could also test `if(key in object) {...}`\n                    // or `if (object[key] !== 'undefined') {...}`, but that is slower.\n                    throwDuplicateKey(key, start + 1);\n                }\n                object[key] = _value;\n            }\n            if (text.charCodeAt(i) !== codeClosingBrace) {\n                throwObjectKeyOrEndExpected();\n            }\n            i++;\n            return object;\n        }\n    }\n    function parseArray() {\n        if (text.charCodeAt(i) === codeOpeningBracket) {\n            i++;\n            skipWhitespace();\n            var array = [];\n            var initial = true;\n            while(i < text.length && text.charCodeAt(i) !== codeClosingBracket){\n                if (!initial) {\n                    eatComma();\n                } else {\n                    initial = false;\n                }\n                var _value2 = parseValue();\n                expectArrayItem(_value2);\n                array.push(_value2);\n            }\n            if (text.charCodeAt(i) !== codeClosingBracket) {\n                throwArrayItemOrEndExpected();\n            }\n            i++;\n            return array;\n        }\n    }\n    function parseValue() {\n        var _ref, _ref2, _ref3, _ref4, _ref5, _parseString;\n        skipWhitespace();\n        var value = (_ref = (_ref2 = (_ref3 = (_ref4 = (_ref5 = (_parseString = parseString()) !== null && _parseString !== void 0 ? _parseString : parseNumeric()) !== null && _ref5 !== void 0 ? _ref5 : parseObject()) !== null && _ref4 !== void 0 ? _ref4 : parseArray()) !== null && _ref3 !== void 0 ? _ref3 : parseKeyword(\"true\", true)) !== null && _ref2 !== void 0 ? _ref2 : parseKeyword(\"false\", false)) !== null && _ref !== void 0 ? _ref : parseKeyword(\"null\", null);\n        skipWhitespace();\n        return value;\n    }\n    function parseKeyword(name, value) {\n        if (text.slice(i, i + name.length) === name) {\n            i += name.length;\n            return value;\n        }\n    }\n    function skipWhitespace() {\n        while(isWhitespace(text.charCodeAt(i))){\n            i++;\n        }\n    }\n    function parseString() {\n        if (text.charCodeAt(i) === codeDoubleQuote) {\n            i++;\n            var result = \"\";\n            while(i < text.length && text.charCodeAt(i) !== codeDoubleQuote){\n                if (text.charCodeAt(i) === codeBackslash) {\n                    var char = text[i + 1];\n                    var escapeChar = escapeCharacters[char];\n                    if (escapeChar !== undefined) {\n                        result += escapeChar;\n                        i++;\n                    } else if (char === \"u\") {\n                        if (isHex(text.charCodeAt(i + 2)) && isHex(text.charCodeAt(i + 3)) && isHex(text.charCodeAt(i + 4)) && isHex(text.charCodeAt(i + 5))) {\n                            result += String.fromCharCode(parseInt(text.slice(i + 2, i + 6), 16));\n                            i += 5;\n                        } else {\n                            throwInvalidUnicodeCharacter(i);\n                        }\n                    } else {\n                        throwInvalidEscapeCharacter(i);\n                    }\n                } else {\n                    if (isValidStringCharacter(text.charCodeAt(i))) {\n                        result += text[i];\n                    } else {\n                        throwInvalidCharacter(text[i]);\n                    }\n                }\n                i++;\n            }\n            expectEndOfString();\n            i++;\n            return result;\n        }\n    }\n    function parseNumeric() {\n        var start = i;\n        if (text.charCodeAt(i) === codeMinus) {\n            i++;\n            expectDigit(start);\n        }\n        if (text.charCodeAt(i) === codeZero) {\n            i++;\n        } else if (isNonZeroDigit(text.charCodeAt(i))) {\n            i++;\n            while(isDigit(text.charCodeAt(i))){\n                i++;\n            }\n        }\n        if (text.charCodeAt(i) === codeDot) {\n            i++;\n            expectDigit(start);\n            while(isDigit(text.charCodeAt(i))){\n                i++;\n            }\n        }\n        if (text.charCodeAt(i) === codeLowercaseE || text.charCodeAt(i) === codeUppercaseE) {\n            i++;\n            if (text.charCodeAt(i) === codeMinus || text.charCodeAt(i) === codePlus) {\n                i++;\n            }\n            expectDigit(start);\n            while(isDigit(text.charCodeAt(i))){\n                i++;\n            }\n        }\n        if (i > start) {\n            return parseNumber(text.slice(start, i));\n        }\n    }\n    function eatComma() {\n        if (text.charCodeAt(i) !== codeComma) {\n            throw new SyntaxError(\"Comma ',' expected after value \".concat(gotAt()));\n        }\n        i++;\n    }\n    function eatColon() {\n        if (text.charCodeAt(i) !== codeColon) {\n            throw new SyntaxError(\"Colon ':' expected after property name \".concat(gotAt()));\n        }\n        i++;\n    }\n    function expectValue(value) {\n        if (value === undefined) {\n            throw new SyntaxError(\"JSON value expected \".concat(gotAt()));\n        }\n    }\n    function expectArrayItem(value) {\n        if (value === undefined) {\n            throw new SyntaxError(\"Array item expected \".concat(gotAt()));\n        }\n    }\n    function expectEndOfInput() {\n        if (i < text.length) {\n            throw new SyntaxError(\"Expected end of input \".concat(gotAt()));\n        }\n    }\n    function expectDigit(start) {\n        if (!isDigit(text.charCodeAt(i))) {\n            var numSoFar = text.slice(start, i);\n            throw new SyntaxError(\"Invalid number '\".concat(numSoFar, \"', expecting a digit \").concat(gotAt()));\n        }\n    }\n    function expectEndOfString() {\n        if (text.charCodeAt(i) !== codeDoubleQuote) {\n            throw new SyntaxError(\"End of string '\\\"' expected \".concat(gotAt()));\n        }\n    }\n    function throwObjectKeyExpected() {\n        throw new SyntaxError(\"Quoted object key expected \".concat(gotAt()));\n    }\n    function throwDuplicateKey(key, pos) {\n        throw new SyntaxError(\"Duplicate key '\".concat(key, \"' encountered at position \").concat(pos));\n    }\n    function throwObjectKeyOrEndExpected() {\n        throw new SyntaxError(\"Quoted object key or end of object '}' expected \".concat(gotAt()));\n    }\n    function throwArrayItemOrEndExpected() {\n        throw new SyntaxError(\"Array item or end of array ']' expected \".concat(gotAt()));\n    }\n    function throwInvalidCharacter(char) {\n        throw new SyntaxError(\"Invalid character '\".concat(char, \"' \").concat(pos()));\n    }\n    function throwInvalidEscapeCharacter(start) {\n        var chars = text.slice(start, start + 2);\n        throw new SyntaxError(\"Invalid escape character '\".concat(chars, \"' \").concat(pos()));\n    }\n    function throwObjectValueExpected() {\n        throw new SyntaxError(\"Object value expected after ':' \".concat(pos()));\n    }\n    function throwInvalidUnicodeCharacter(start) {\n        var end = start + 2;\n        while(/\\w/.test(text[end])){\n            end++;\n        }\n        var chars = text.slice(start, end);\n        throw new SyntaxError(\"Invalid unicode character '\".concat(chars, \"' \").concat(pos()));\n    }\n    // zero based character position\n    function pos() {\n        return \"at position \".concat(i);\n    }\n    function got() {\n        return i < text.length ? \"but got '\".concat(text[i], \"'\") : \"but reached end of input\";\n    }\n    function gotAt() {\n        return got() + \" \" + pos();\n    }\n}\nfunction isWhitespace(code) {\n    return code === codeSpace || code === codeNewline || code === codeTab || code === codeReturn;\n}\nfunction isHex(code) {\n    return code >= codeZero && code <= codeNine || code >= codeUppercaseA && code <= codeUppercaseF || code >= codeLowercaseA && code <= codeLowercaseF;\n}\nfunction isDigit(code) {\n    return code >= codeZero && code <= codeNine;\n}\nfunction isNonZeroDigit(code) {\n    return code >= codeOne && code <= codeNine;\n}\nfunction isValidStringCharacter(code) {\n    return code >= 0x20 && code <= 0x10ffff;\n}\nfunction isDeepEqual(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (Array.isArray(a) && Array.isArray(b)) {\n        return a.length === b.length && a.every(function(item, index) {\n            return isDeepEqual(item, b[index]);\n        });\n    }\n    if (isObject(a) && isObject(b)) {\n        var keys = _toConsumableArray(new Set([].concat(_toConsumableArray(Object.keys(a)), _toConsumableArray(Object.keys(b)))));\n        return keys.every(function(key) {\n            return isDeepEqual(a[key], b[key]);\n        });\n    }\n    return false;\n}\nfunction isObject(value) {\n    return _typeof(value) === \"object\" && value !== null;\n}\n// map with all escape characters\nvar escapeCharacters = {\n    '\"': '\"',\n    \"\\\\\": \"\\\\\",\n    \"/\": \"/\",\n    b: \"\\b\",\n    f: \"\\f\",\n    n: \"\\n\",\n    r: \"\\r\",\n    t: \"\t\"\n};\nvar codeBackslash = 0x5c; // \"\\\"\nvar codeOpeningBrace = 0x7b; // \"{\"\nvar codeClosingBrace = 0x7d; // \"}\"\nvar codeOpeningBracket = 0x5b; // \"[\"\nvar codeClosingBracket = 0x5d; // \"]\"\nvar codeSpace = 0x20; // \" \"\nvar codeNewline = 0xa; // \"\\n\"\nvar codeTab = 0x9; // \"\\t\"\nvar codeReturn = 0xd; // \"\\r\"\nvar codeDoubleQuote = 0x0022; // \"\nvar codePlus = 0x2b; // \"+\"\nvar codeMinus = 0x2d; // \"-\"\nvar codeZero = 0x30;\nvar codeOne = 0x31;\nvar codeNine = 0x39;\nvar codeComma = 0x2c; // \",\"\nvar codeDot = 0x2e; // \".\" (dot, period)\nvar codeColon = 0x3a; // \":\"\nvar codeUppercaseA = 0x41; // \"A\"\nvar codeLowercaseA = 0x61; // \"a\"\nvar codeUppercaseE = 0x45; // \"E\"\nvar codeLowercaseE = 0x65; // \"e\"\nvar codeUppercaseF = 0x46; // \"F\"\nvar codeLowercaseF = 0x66; // \"f\"\n //# sourceMappingURL=parse.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/lossless-json/lib/esm/parse.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/lossless-json/lib/esm/revive.js":
/*!**********************************************************!*\
  !*** ../../node_modules/lossless-json/lib/esm/revive.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   revive: () => (/* binding */ revive)\n/* harmony export */ });\n/* harmony import */ var _LosslessNumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LosslessNumber.js */ \"(ssr)/../../node_modules/lossless-json/lib/esm/LosslessNumber.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\n\n/**\n * Revive a json object.\n * Applies the reviver function recursively on all values in the JSON object.\n * @param json   A JSON Object, Array, or value\n * @param reviver\n *              A reviver function invoked with arguments `key` and `value`,\n *              which must return a replacement value. The function context\n *              (`this`) is the Object or Array that contains the currently\n *              handled value.\n */ function revive(json, reviver) {\n    return reviveValue({\n        \"\": json\n    }, \"\", json, reviver);\n}\n/**\n * Revive a value\n */ function reviveValue(context, key, value, reviver) {\n    if (Array.isArray(value)) {\n        return reviver.call(context, key, reviveArray(value, reviver));\n    } else if (value && _typeof(value) === \"object\" && !(0,_LosslessNumber_js__WEBPACK_IMPORTED_MODULE_0__.isLosslessNumber)(value)) {\n        // note the special case for LosslessNumber,\n        // we don't want to iterate over the internals of a LosslessNumber\n        return reviver.call(context, key, reviveObject(value, reviver));\n    } else {\n        return reviver.call(context, key, value);\n    }\n}\n/**\n * Revive the properties of an object\n */ function reviveObject(object, reviver) {\n    Object.keys(object).forEach(function(key) {\n        var value = reviveValue(object, key, object[key], reviver);\n        if (value !== undefined) {\n            object[key] = value;\n        } else {\n            delete object[key];\n        }\n    });\n    return object;\n}\n/**\n * Revive the properties of an Array\n */ function reviveArray(array, reviver) {\n    for(var i = 0; i < array.length; i++){\n        array[i] = reviveValue(array, i + \"\", array[i], reviver);\n    }\n    return array;\n} //# sourceMappingURL=revive.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL2xvc3NsZXNzLWpzb24vbGliL2VzbS9yZXZpdmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxTQUFTQSxRQUFRQyxHQUFHO0lBQUk7SUFBMkIsT0FBT0QsVUFBVSxjQUFjLE9BQU9FLFVBQVUsWUFBWSxPQUFPQSxPQUFPQyxRQUFRLEdBQUcsU0FBVUYsR0FBRztRQUFJLE9BQU8sT0FBT0E7SUFBSyxJQUFJLFNBQVVBLEdBQUc7UUFBSSxPQUFPQSxPQUFPLGNBQWMsT0FBT0MsVUFBVUQsSUFBSUcsV0FBVyxLQUFLRixVQUFVRCxRQUFRQyxPQUFPRyxTQUFTLEdBQUcsV0FBVyxPQUFPSjtJQUFLLEdBQUdELFFBQVFDO0FBQU07QUFDeFI7QUFDdkQ7Ozs7Ozs7OztDQVNDLEdBQ00sU0FBU00sT0FBT0MsSUFBSSxFQUFFQyxPQUFPO0lBQ2xDLE9BQU9DLFlBQVk7UUFDakIsSUFBSUY7SUFDTixHQUFHLElBQUlBLE1BQU1DO0FBQ2Y7QUFFQTs7Q0FFQyxHQUNELFNBQVNDLFlBQVlDLE9BQU8sRUFBRUMsR0FBRyxFQUFFQyxLQUFLLEVBQUVKLE9BQU87SUFDL0MsSUFBSUssTUFBTUMsT0FBTyxDQUFDRixRQUFRO1FBQ3hCLE9BQU9KLFFBQVFPLElBQUksQ0FBQ0wsU0FBU0MsS0FBS0ssWUFBWUosT0FBT0o7SUFDdkQsT0FBTyxJQUFJSSxTQUFTYixRQUFRYSxXQUFXLFlBQVksQ0FBQ1Asb0VBQWdCQSxDQUFDTyxRQUFRO1FBQzNFLDRDQUE0QztRQUM1QyxrRUFBa0U7UUFDbEUsT0FBT0osUUFBUU8sSUFBSSxDQUFDTCxTQUFTQyxLQUFLTSxhQUFhTCxPQUFPSjtJQUN4RCxPQUFPO1FBQ0wsT0FBT0EsUUFBUU8sSUFBSSxDQUFDTCxTQUFTQyxLQUFLQztJQUNwQztBQUNGO0FBRUE7O0NBRUMsR0FDRCxTQUFTSyxhQUFhQyxNQUFNLEVBQUVWLE9BQU87SUFDbkNXLE9BQU9DLElBQUksQ0FBQ0YsUUFBUUcsT0FBTyxDQUFDLFNBQVVWLEdBQUc7UUFDdkMsSUFBSUMsUUFBUUgsWUFBWVMsUUFBUVAsS0FBS08sTUFBTSxDQUFDUCxJQUFJLEVBQUVIO1FBQ2xELElBQUlJLFVBQVVVLFdBQVc7WUFDdkJKLE1BQU0sQ0FBQ1AsSUFBSSxHQUFHQztRQUNoQixPQUFPO1lBQ0wsT0FBT00sTUFBTSxDQUFDUCxJQUFJO1FBQ3BCO0lBQ0Y7SUFDQSxPQUFPTztBQUNUO0FBRUE7O0NBRUMsR0FDRCxTQUFTRixZQUFZTyxLQUFLLEVBQUVmLE9BQU87SUFDakMsSUFBSyxJQUFJZ0IsSUFBSSxHQUFHQSxJQUFJRCxNQUFNRSxNQUFNLEVBQUVELElBQUs7UUFDckNELEtBQUssQ0FBQ0MsRUFBRSxHQUFHZixZQUFZYyxPQUFPQyxJQUFJLElBQUlELEtBQUssQ0FBQ0MsRUFBRSxFQUFFaEI7SUFDbEQ7SUFDQSxPQUFPZTtBQUNULEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhcmtuZXQtcmVhY3QvLi4vLi4vbm9kZV9tb2R1bGVzL2xvc3NsZXNzLWpzb24vbGliL2VzbS9yZXZpdmUuanM/MGZhOCJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfSwgX3R5cGVvZihvYmopOyB9XG5pbXBvcnQgeyBpc0xvc3NsZXNzTnVtYmVyIH0gZnJvbSAnLi9Mb3NzbGVzc051bWJlci5qcyc7XG4vKipcbiAqIFJldml2ZSBhIGpzb24gb2JqZWN0LlxuICogQXBwbGllcyB0aGUgcmV2aXZlciBmdW5jdGlvbiByZWN1cnNpdmVseSBvbiBhbGwgdmFsdWVzIGluIHRoZSBKU09OIG9iamVjdC5cbiAqIEBwYXJhbSBqc29uICAgQSBKU09OIE9iamVjdCwgQXJyYXksIG9yIHZhbHVlXG4gKiBAcGFyYW0gcmV2aXZlclxuICogICAgICAgICAgICAgIEEgcmV2aXZlciBmdW5jdGlvbiBpbnZva2VkIHdpdGggYXJndW1lbnRzIGBrZXlgIGFuZCBgdmFsdWVgLFxuICogICAgICAgICAgICAgIHdoaWNoIG11c3QgcmV0dXJuIGEgcmVwbGFjZW1lbnQgdmFsdWUuIFRoZSBmdW5jdGlvbiBjb250ZXh0XG4gKiAgICAgICAgICAgICAgKGB0aGlzYCkgaXMgdGhlIE9iamVjdCBvciBBcnJheSB0aGF0IGNvbnRhaW5zIHRoZSBjdXJyZW50bHlcbiAqICAgICAgICAgICAgICBoYW5kbGVkIHZhbHVlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcmV2aXZlKGpzb24sIHJldml2ZXIpIHtcbiAgcmV0dXJuIHJldml2ZVZhbHVlKHtcbiAgICAnJzoganNvblxuICB9LCAnJywganNvbiwgcmV2aXZlcik7XG59XG5cbi8qKlxuICogUmV2aXZlIGEgdmFsdWVcbiAqL1xuZnVuY3Rpb24gcmV2aXZlVmFsdWUoY29udGV4dCwga2V5LCB2YWx1ZSwgcmV2aXZlcikge1xuICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcmV2aXZlci5jYWxsKGNvbnRleHQsIGtleSwgcmV2aXZlQXJyYXkodmFsdWUsIHJldml2ZXIpKTtcbiAgfSBlbHNlIGlmICh2YWx1ZSAmJiBfdHlwZW9mKHZhbHVlKSA9PT0gJ29iamVjdCcgJiYgIWlzTG9zc2xlc3NOdW1iZXIodmFsdWUpKSB7XG4gICAgLy8gbm90ZSB0aGUgc3BlY2lhbCBjYXNlIGZvciBMb3NzbGVzc051bWJlcixcbiAgICAvLyB3ZSBkb24ndCB3YW50IHRvIGl0ZXJhdGUgb3ZlciB0aGUgaW50ZXJuYWxzIG9mIGEgTG9zc2xlc3NOdW1iZXJcbiAgICByZXR1cm4gcmV2aXZlci5jYWxsKGNvbnRleHQsIGtleSwgcmV2aXZlT2JqZWN0KHZhbHVlLCByZXZpdmVyKSk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHJldml2ZXIuY2FsbChjb250ZXh0LCBrZXksIHZhbHVlKTtcbiAgfVxufVxuXG4vKipcbiAqIFJldml2ZSB0aGUgcHJvcGVydGllcyBvZiBhbiBvYmplY3RcbiAqL1xuZnVuY3Rpb24gcmV2aXZlT2JqZWN0KG9iamVjdCwgcmV2aXZlcikge1xuICBPYmplY3Qua2V5cyhvYmplY3QpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciB2YWx1ZSA9IHJldml2ZVZhbHVlKG9iamVjdCwga2V5LCBvYmplY3Rba2V5XSwgcmV2aXZlcik7XG4gICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIG9iamVjdFtrZXldID0gdmFsdWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlbGV0ZSBvYmplY3Rba2V5XTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gb2JqZWN0O1xufVxuXG4vKipcbiAqIFJldml2ZSB0aGUgcHJvcGVydGllcyBvZiBhbiBBcnJheVxuICovXG5mdW5jdGlvbiByZXZpdmVBcnJheShhcnJheSwgcmV2aXZlcikge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgYXJyYXlbaV0gPSByZXZpdmVWYWx1ZShhcnJheSwgaSArICcnLCBhcnJheVtpXSwgcmV2aXZlcik7XG4gIH1cbiAgcmV0dXJuIGFycmF5O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmV2aXZlLmpzLm1hcCJdLCJuYW1lcyI6WyJfdHlwZW9mIiwib2JqIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsImlzTG9zc2xlc3NOdW1iZXIiLCJyZXZpdmUiLCJqc29uIiwicmV2aXZlciIsInJldml2ZVZhbHVlIiwiY29udGV4dCIsImtleSIsInZhbHVlIiwiQXJyYXkiLCJpc0FycmF5IiwiY2FsbCIsInJldml2ZUFycmF5IiwicmV2aXZlT2JqZWN0Iiwib2JqZWN0IiwiT2JqZWN0Iiwia2V5cyIsImZvckVhY2giLCJ1bmRlZmluZWQiLCJhcnJheSIsImkiLCJsZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/lossless-json/lib/esm/revive.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/lossless-json/lib/esm/reviveDate.js":
/*!**************************************************************!*\
  !*** ../../node_modules/lossless-json/lib/esm/reviveDate.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reviveDate: () => (/* binding */ reviveDate)\n/* harmony export */ });\n/**\n * Revive a string containing an ISO 8601 date string into a JavaScript `Date` object\n */ function reviveDate(key, value) {\n    return typeof value === \"string\" && isoDateRegex.test(value) ? new Date(value) : value;\n}\n// Matches strings like \"2022-08-25T09:39:19.288Z\"\nvar isoDateRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/; //# sourceMappingURL=reviveDate.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL2xvc3NsZXNzLWpzb24vbGliL2VzbS9yZXZpdmVEYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Q0FFQyxHQUNNLFNBQVNBLFdBQVdDLEdBQUcsRUFBRUMsS0FBSztJQUNuQyxPQUFPLE9BQU9BLFVBQVUsWUFBWUMsYUFBYUMsSUFBSSxDQUFDRixTQUFTLElBQUlHLEtBQUtILFNBQVNBO0FBQ25GO0FBRUEsa0RBQWtEO0FBQ2xELElBQUlDLGVBQWUsaURBQ25CLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YXJrbmV0LXJlYWN0Ly4uLy4uL25vZGVfbW9kdWxlcy9sb3NzbGVzcy1qc29uL2xpYi9lc20vcmV2aXZlRGF0ZS5qcz8wN2NiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmV2aXZlIGEgc3RyaW5nIGNvbnRhaW5pbmcgYW4gSVNPIDg2MDEgZGF0ZSBzdHJpbmcgaW50byBhIEphdmFTY3JpcHQgYERhdGVgIG9iamVjdFxuICovXG5leHBvcnQgZnVuY3Rpb24gcmV2aXZlRGF0ZShrZXksIHZhbHVlKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmIGlzb0RhdGVSZWdleC50ZXN0KHZhbHVlKSA/IG5ldyBEYXRlKHZhbHVlKSA6IHZhbHVlO1xufVxuXG4vLyBNYXRjaGVzIHN0cmluZ3MgbGlrZSBcIjIwMjItMDgtMjVUMDk6Mzk6MTkuMjg4WlwiXG52YXIgaXNvRGF0ZVJlZ2V4ID0gL15cXGR7NH0tXFxkezJ9LVxcZHsyfVRcXGR7Mn06XFxkezJ9OlxcZHsyfVxcLlxcZHszfVokLztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJldml2ZURhdGUuanMubWFwIl0sIm5hbWVzIjpbInJldml2ZURhdGUiLCJrZXkiLCJ2YWx1ZSIsImlzb0RhdGVSZWdleCIsInRlc3QiLCJEYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/lossless-json/lib/esm/reviveDate.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/lossless-json/lib/esm/stringify.js":
/*!*************************************************************!*\
  !*** ../../node_modules/lossless-json/lib/esm/stringify.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stringify: () => (/* binding */ stringify)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../../node_modules/lossless-json/lib/esm/utils.js\");\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n}\n\n/**\n * The LosslessJSON.stringify() method converts a JavaScript value to a JSON string,\n * optionally replacing values if a replacer function is specified, or\n * optionally including only the specified properties if a replacer array is specified.\n *\n * @param value\n * The value to convert to a JSON string.\n *\n * @param [replacer]\n * A function that alters the behavior of the stringification process,\n * or an array of String and Number objects that serve as a whitelist for\n * selecting the properties of the value object to be included in the JSON string.\n * If this value is null or not provided, all properties of the object are\n * included in the resulting JSON string.\n *\n * @param [space]\n * A String or Number object that's used to insert white space into the output\n * JSON string for readability purposes. If this is a Number, it indicates the\n * number of space characters to use as white space; this number is capped at 10\n * if it's larger than that. Values less than 1 indicate that no space should be\n * used. If this is a String, the string (or the first 10 characters of the string,\n * if it's longer than that) is used as white space. If this parameter is not\n * provided (or is null), no white space is used.\n *\n * @param [numberStringifiers]\n * An optional list with additional number stringifiers, for example to serialize\n * a BigNumber. The output of the function must be valid stringified JSON.\n * When `undefined` is returned, the property will be deleted from the object.\n * The difference with using a `replacer` is that the output of a `replacer`\n * must be JSON and will be stringified afterwards, whereas the output of the\n * `numberStringifiers` is already stringified JSON.\n *\n * @returns Returns the string representation of the JSON object.\n */ function stringify(value, replacer, space, numberStringifiers) {\n    var resolvedSpace = resolveSpace(space);\n    var replacedValue = typeof replacer === \"function\" ? replacer.call({\n        \"\": value\n    }, \"\", value) : value;\n    return stringifyValue(replacedValue, \"\");\n    /**\n   * Stringify a value\n   */ function stringifyValue(value, indent) {\n        if (Array.isArray(numberStringifiers)) {\n            var stringifier = numberStringifiers.find(function(item) {\n                return item.test(value);\n            });\n            if (stringifier) {\n                var str = stringifier.stringify(value);\n                if (typeof str !== \"string\" || !(0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isNumber)(str)) {\n                    throw new Error(\"Invalid JSON number: \" + \"output of a number stringifier must be a string containing a JSON number \" + \"(output: \".concat(str, \")\"));\n                }\n                return str;\n            }\n        }\n        // boolean, null, number, string, or date\n        if (typeof value === \"boolean\" || typeof value === \"number\" || typeof value === \"string\" || value === null || value instanceof Date || value instanceof Boolean || value instanceof Number || value instanceof String) {\n            return JSON.stringify(value);\n        }\n        // lossless number, the secret ingredient :)\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        if (value && value.isLosslessNumber) {\n            return value.toString();\n        }\n        // BigInt\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        // Array\n        if (Array.isArray(value)) {\n            return stringifyArray(value, indent);\n        }\n        // Object (test lastly!)\n        if (value && _typeof(value) === \"object\") {\n            return stringifyObject(value, indent);\n        }\n        return undefined;\n    }\n    /**\n   * Stringify an array\n   */ function stringifyArray(array, indent) {\n        if (array.length === 0) {\n            return \"[]\";\n        }\n        var childIndent = resolvedSpace ? indent + resolvedSpace : undefined;\n        var str = resolvedSpace ? \"[\\n\" : \"[\";\n        for(var i = 0; i < array.length; i++){\n            var item = typeof replacer === \"function\" ? replacer.call(array, String(i), array[i]) : array[i];\n            if (resolvedSpace) {\n                str += childIndent;\n            }\n            if (typeof item !== \"undefined\" && typeof item !== \"function\") {\n                str += stringifyValue(item, childIndent);\n            } else {\n                str += \"null\";\n            }\n            if (i < array.length - 1) {\n                str += resolvedSpace ? \",\\n\" : \",\";\n            }\n        }\n        str += resolvedSpace ? \"\\n\" + indent + \"]\" : \"]\";\n        return str;\n    }\n    /**\n   * Stringify an object\n   */ function stringifyObject(object, indent) {\n        if (typeof object.toJSON === \"function\") {\n            return stringify(object.toJSON(), replacer, space, undefined);\n        }\n        var keys = Array.isArray(replacer) ? replacer.map(String) : Object.keys(object);\n        if (keys.length === 0) {\n            return \"{}\";\n        }\n        var childIndent = resolvedSpace ? indent + resolvedSpace : undefined;\n        var first = true;\n        var str = resolvedSpace ? \"{\\n\" : \"{\";\n        keys.forEach(function(key) {\n            var value = typeof replacer === \"function\" ? replacer.call(object, key, object[key]) : object[key];\n            if (includeProperty(key, value)) {\n                if (first) {\n                    first = false;\n                } else {\n                    str += resolvedSpace ? \",\\n\" : \",\";\n                }\n                var keyStr = JSON.stringify(key);\n                str += resolvedSpace ? childIndent + keyStr + \": \" : keyStr + \":\";\n                str += stringifyValue(value, childIndent);\n            }\n        });\n        str += resolvedSpace ? \"\\n\" + indent + \"}\" : \"}\";\n        return str;\n    }\n    /**\n   * Test whether to include a property in a stringified object or not.\n   */ function includeProperty(key, value) {\n        return typeof value !== \"undefined\" && typeof value !== \"function\" && _typeof(value) !== \"symbol\";\n    }\n}\n/**\n * Resolve a JSON stringify space:\n * replace a number with a string containing that number of spaces\n */ function resolveSpace(space) {\n    if (typeof space === \"number\") {\n        return \" \".repeat(space);\n    }\n    if (typeof space === \"string\" && space !== \"\") {\n        return space;\n    }\n    return undefined;\n} //# sourceMappingURL=stringify.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/lossless-json/lib/esm/stringify.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/lossless-json/lib/esm/types.js":
/*!*********************************************************!*\
  !*** ../../node_modules/lossless-json/lib/esm/types.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL2xvc3NsZXNzLWpzb24vbGliL2VzbS90eXBlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQVUsQ0FDVixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGFya25ldC1yZWFjdC8uLi8uLi9ub2RlX21vZHVsZXMvbG9zc2xlc3MtanNvbi9saWIvZXNtL3R5cGVzLmpzP2M1YmMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/lossless-json/lib/esm/types.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/lossless-json/lib/esm/utils.js":
/*!*********************************************************!*\
  !*** ../../node_modules/lossless-json/lib/esm/utils.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UnsafeNumberReason: () => (/* binding */ UnsafeNumberReason),\n/* harmony export */   extractSignificantDigits: () => (/* binding */ extractSignificantDigits),\n/* harmony export */   getUnsafeNumberReason: () => (/* binding */ getUnsafeNumberReason),\n/* harmony export */   isInteger: () => (/* binding */ isInteger),\n/* harmony export */   isNumber: () => (/* binding */ isNumber),\n/* harmony export */   isSafeNumber: () => (/* binding */ isSafeNumber),\n/* harmony export */   toSafeNumberOrThrow: () => (/* binding */ toSafeNumberOrThrow)\n/* harmony export */ });\n/**\n * Test whether a string contains an integer number\n */ function isInteger(value) {\n    return INTEGER_REGEX.test(value);\n}\nvar INTEGER_REGEX = /^-?[0-9]+$/;\n/**\n * Test whether a string contains a number\n * http://stackoverflow.com/questions/13340717/json-numbers-regular-expression\n */ function isNumber(value) {\n    return NUMBER_REGEX.test(value);\n}\nvar NUMBER_REGEX = /^-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?$/;\n/**\n * Test whether a string can be safely represented with a number\n * without information loss.\n *\n * When approx is true, floating point numbers that lose a few digits but\n * are still approximately equal in value are considered safe too.\n * Integer numbers must still be exactly equal.\n */ function isSafeNumber(value, config) {\n    var num = parseFloat(value);\n    var str = String(num);\n    var v = extractSignificantDigits(value);\n    var s = extractSignificantDigits(str);\n    if (v === s) {\n        return true;\n    }\n    if ((config === null || config === void 0 ? void 0 : config.approx) === true) {\n        // A value is approximately equal when:\n        // 1. it is a floating point number, not an integer\n        // 2. it has at least 14 digits\n        // 3. the first 14 digits are equal\n        var requiredDigits = 14;\n        if (!isInteger(value) && s.length >= requiredDigits && v.startsWith(s.substring(0, requiredDigits))) {\n            return true;\n        }\n    }\n    return false;\n}\nvar UnsafeNumberReason = /*#__PURE__*/ function(UnsafeNumberReason) {\n    UnsafeNumberReason[\"underflow\"] = \"underflow\";\n    UnsafeNumberReason[\"overflow\"] = \"overflow\";\n    UnsafeNumberReason[\"truncate_integer\"] = \"truncate_integer\";\n    UnsafeNumberReason[\"truncate_float\"] = \"truncate_float\";\n    return UnsafeNumberReason;\n}({});\n/**\n * When the provided value is an unsafe number, describe what the reason is:\n * overflow, underflow, truncate_integer, or truncate_float.\n * Returns undefined when the value is safe.\n */ function getUnsafeNumberReason(value) {\n    if (isSafeNumber(value, {\n        approx: false\n    })) {\n        return undefined;\n    }\n    if (isInteger(value)) {\n        return UnsafeNumberReason.truncate_integer;\n    }\n    var num = parseFloat(value);\n    if (!isFinite(num)) {\n        return UnsafeNumberReason.overflow;\n    }\n    if (num === 0) {\n        return UnsafeNumberReason.underflow;\n    }\n    return UnsafeNumberReason.truncate_float;\n}\n/**\n * Convert a string into a number when it is safe to do so.\n * Throws an error otherwise, explaining the reason.\n */ function toSafeNumberOrThrow(value, config) {\n    var number = parseFloat(value);\n    var unsafeReason = getUnsafeNumberReason(value);\n    if ((config === null || config === void 0 ? void 0 : config.approx) === true ? unsafeReason && unsafeReason !== UnsafeNumberReason.truncate_float : unsafeReason) {\n        var unsafeReasonText = unsafeReason.replace(/_\\w+$/, \"\");\n        throw new Error(\"Cannot safely convert to number: \" + \"the value '\".concat(value, \"' would \").concat(unsafeReasonText, \" and become \").concat(number));\n    }\n    return number;\n}\n/**\n * Get the significant digits of a number.\n *\n * For example:\n *   '2.34' returns '234'\n *   '-77' returns '77'\n *   '0.003400' returns '34'\n *   '120.5e+30' returns '1205'\n **/ function extractSignificantDigits(value) {\n    return value// from \"-0.250e+30\" to \"-0.250\"\n    .replace(EXPONENTIAL_PART_REGEX, \"\")// from \"-0.250\" to \"-0250\"\n    .replace(DOT_REGEX, \"\")// from \"-0250\" to \"-025\"\n    .replace(TRAILING_ZEROS_REGEX, \"\")// from \"-025\" to \"25\"\n    .replace(LEADING_MINUS_AND_ZEROS_REGEX, \"\");\n}\nvar EXPONENTIAL_PART_REGEX = /[eE][+-]?\\d+$/;\nvar LEADING_MINUS_AND_ZEROS_REGEX = /^-?(0*)?/;\nvar DOT_REGEX = /\\./;\nvar TRAILING_ZEROS_REGEX = /0+$/; //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL2xvc3NsZXNzLWpzb24vbGliL2VzbS91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7O0NBRUMsR0FDTSxTQUFTQSxVQUFVQyxLQUFLO0lBQzdCLE9BQU9DLGNBQWNDLElBQUksQ0FBQ0Y7QUFDNUI7QUFDQSxJQUFJQyxnQkFBZ0I7QUFFcEI7OztDQUdDLEdBQ00sU0FBU0UsU0FBU0gsS0FBSztJQUM1QixPQUFPSSxhQUFhRixJQUFJLENBQUNGO0FBQzNCO0FBQ0EsSUFBSUksZUFBZTtBQUVuQjs7Ozs7OztDQU9DLEdBQ00sU0FBU0MsYUFBYUwsS0FBSyxFQUFFTSxNQUFNO0lBQ3hDLElBQUlDLE1BQU1DLFdBQVdSO0lBQ3JCLElBQUlTLE1BQU1DLE9BQU9IO0lBQ2pCLElBQUlJLElBQUlDLHlCQUF5Qlo7SUFDakMsSUFBSWEsSUFBSUQseUJBQXlCSDtJQUNqQyxJQUFJRSxNQUFNRSxHQUFHO1FBQ1gsT0FBTztJQUNUO0lBQ0EsSUFBSSxDQUFDUCxXQUFXLFFBQVFBLFdBQVcsS0FBSyxJQUFJLEtBQUssSUFBSUEsT0FBT1EsTUFBTSxNQUFNLE1BQU07UUFDNUUsdUNBQXVDO1FBQ3ZDLG1EQUFtRDtRQUNuRCwrQkFBK0I7UUFDL0IsbUNBQW1DO1FBQ25DLElBQUlDLGlCQUFpQjtRQUNyQixJQUFJLENBQUNoQixVQUFVQyxVQUFVYSxFQUFFRyxNQUFNLElBQUlELGtCQUFrQkosRUFBRU0sVUFBVSxDQUFDSixFQUFFSyxTQUFTLENBQUMsR0FBR0gsa0JBQWtCO1lBQ25HLE9BQU87UUFDVDtJQUNGO0lBQ0EsT0FBTztBQUNUO0FBQ08sSUFBSUkscUJBQXFCLFdBQVcsR0FBRSxTQUFVQSxrQkFBa0I7SUFDdkVBLGtCQUFrQixDQUFDLFlBQVksR0FBRztJQUNsQ0Esa0JBQWtCLENBQUMsV0FBVyxHQUFHO0lBQ2pDQSxrQkFBa0IsQ0FBQyxtQkFBbUIsR0FBRztJQUN6Q0Esa0JBQWtCLENBQUMsaUJBQWlCLEdBQUc7SUFDdkMsT0FBT0E7QUFDVCxFQUFFLENBQUMsR0FBRztBQUVOOzs7O0NBSUMsR0FDTSxTQUFTQyxzQkFBc0JwQixLQUFLO0lBQ3pDLElBQUlLLGFBQWFMLE9BQU87UUFDdEJjLFFBQVE7SUFDVixJQUFJO1FBQ0YsT0FBT087SUFDVDtJQUNBLElBQUl0QixVQUFVQyxRQUFRO1FBQ3BCLE9BQU9tQixtQkFBbUJHLGdCQUFnQjtJQUM1QztJQUNBLElBQUlmLE1BQU1DLFdBQVdSO0lBQ3JCLElBQUksQ0FBQ3VCLFNBQVNoQixNQUFNO1FBQ2xCLE9BQU9ZLG1CQUFtQkssUUFBUTtJQUNwQztJQUNBLElBQUlqQixRQUFRLEdBQUc7UUFDYixPQUFPWSxtQkFBbUJNLFNBQVM7SUFDckM7SUFDQSxPQUFPTixtQkFBbUJPLGNBQWM7QUFDMUM7QUFFQTs7O0NBR0MsR0FDTSxTQUFTQyxvQkFBb0IzQixLQUFLLEVBQUVNLE1BQU07SUFDL0MsSUFBSXNCLFNBQVNwQixXQUFXUjtJQUN4QixJQUFJNkIsZUFBZVQsc0JBQXNCcEI7SUFDekMsSUFBSSxDQUFDTSxXQUFXLFFBQVFBLFdBQVcsS0FBSyxJQUFJLEtBQUssSUFBSUEsT0FBT1EsTUFBTSxNQUFNLE9BQU9lLGdCQUFnQkEsaUJBQWlCVixtQkFBbUJPLGNBQWMsR0FBR0csY0FBYztRQUNoSyxJQUFJQyxtQkFBbUJELGFBQWFFLE9BQU8sQ0FBQyxTQUFTO1FBQ3JELE1BQU0sSUFBSUMsTUFBTSxzQ0FBc0MsY0FBY0MsTUFBTSxDQUFDakMsT0FBTyxZQUFZaUMsTUFBTSxDQUFDSCxrQkFBa0IsZ0JBQWdCRyxNQUFNLENBQUNMO0lBQ2hKO0lBQ0EsT0FBT0E7QUFDVDtBQUVBOzs7Ozs7OztFQVFFLEdBQ0ssU0FBU2hCLHlCQUF5QlosS0FBSztJQUM1QyxPQUFPQSxLQUNQLGdDQUFnQztLQUMvQitCLE9BQU8sQ0FBQ0csd0JBQXdCLEdBRWpDLDJCQUEyQjtLQUMxQkgsT0FBTyxDQUFDSSxXQUFXLEdBRXBCLHlCQUF5QjtLQUN4QkosT0FBTyxDQUFDSyxzQkFBc0IsR0FFL0Isc0JBQXNCO0tBQ3JCTCxPQUFPLENBQUNNLCtCQUErQjtBQUMxQztBQUNBLElBQUlILHlCQUF5QjtBQUM3QixJQUFJRyxnQ0FBZ0M7QUFDcEMsSUFBSUYsWUFBWTtBQUNoQixJQUFJQyx1QkFBdUIsT0FDM0IsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RhcmtuZXQtcmVhY3QvLi4vLi4vbm9kZV9tb2R1bGVzL2xvc3NsZXNzLWpzb24vbGliL2VzbS91dGlscy5qcz9jMzlkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGVzdCB3aGV0aGVyIGEgc3RyaW5nIGNvbnRhaW5zIGFuIGludGVnZXIgbnVtYmVyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0ludGVnZXIodmFsdWUpIHtcbiAgcmV0dXJuIElOVEVHRVJfUkVHRVgudGVzdCh2YWx1ZSk7XG59XG52YXIgSU5URUdFUl9SRUdFWCA9IC9eLT9bMC05XSskLztcblxuLyoqXG4gKiBUZXN0IHdoZXRoZXIgYSBzdHJpbmcgY29udGFpbnMgYSBudW1iZXJcbiAqIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMTMzNDA3MTcvanNvbi1udW1iZXJzLXJlZ3VsYXItZXhwcmVzc2lvblxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNOdW1iZXIodmFsdWUpIHtcbiAgcmV0dXJuIE5VTUJFUl9SRUdFWC50ZXN0KHZhbHVlKTtcbn1cbnZhciBOVU1CRVJfUkVHRVggPSAvXi0/KD86MHxbMS05XVxcZCopKD86XFwuXFxkKyk/KD86W2VFXVsrLV0/XFxkKyk/JC87XG5cbi8qKlxuICogVGVzdCB3aGV0aGVyIGEgc3RyaW5nIGNhbiBiZSBzYWZlbHkgcmVwcmVzZW50ZWQgd2l0aCBhIG51bWJlclxuICogd2l0aG91dCBpbmZvcm1hdGlvbiBsb3NzLlxuICpcbiAqIFdoZW4gYXBwcm94IGlzIHRydWUsIGZsb2F0aW5nIHBvaW50IG51bWJlcnMgdGhhdCBsb3NlIGEgZmV3IGRpZ2l0cyBidXRcbiAqIGFyZSBzdGlsbCBhcHByb3hpbWF0ZWx5IGVxdWFsIGluIHZhbHVlIGFyZSBjb25zaWRlcmVkIHNhZmUgdG9vLlxuICogSW50ZWdlciBudW1iZXJzIG11c3Qgc3RpbGwgYmUgZXhhY3RseSBlcXVhbC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzU2FmZU51bWJlcih2YWx1ZSwgY29uZmlnKSB7XG4gIHZhciBudW0gPSBwYXJzZUZsb2F0KHZhbHVlKTtcbiAgdmFyIHN0ciA9IFN0cmluZyhudW0pO1xuICB2YXIgdiA9IGV4dHJhY3RTaWduaWZpY2FudERpZ2l0cyh2YWx1ZSk7XG4gIHZhciBzID0gZXh0cmFjdFNpZ25pZmljYW50RGlnaXRzKHN0cik7XG4gIGlmICh2ID09PSBzKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgaWYgKChjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcuYXBwcm94KSA9PT0gdHJ1ZSkge1xuICAgIC8vIEEgdmFsdWUgaXMgYXBwcm94aW1hdGVseSBlcXVhbCB3aGVuOlxuICAgIC8vIDEuIGl0IGlzIGEgZmxvYXRpbmcgcG9pbnQgbnVtYmVyLCBub3QgYW4gaW50ZWdlclxuICAgIC8vIDIuIGl0IGhhcyBhdCBsZWFzdCAxNCBkaWdpdHNcbiAgICAvLyAzLiB0aGUgZmlyc3QgMTQgZGlnaXRzIGFyZSBlcXVhbFxuICAgIHZhciByZXF1aXJlZERpZ2l0cyA9IDE0O1xuICAgIGlmICghaXNJbnRlZ2VyKHZhbHVlKSAmJiBzLmxlbmd0aCA+PSByZXF1aXJlZERpZ2l0cyAmJiB2LnN0YXJ0c1dpdGgocy5zdWJzdHJpbmcoMCwgcmVxdWlyZWREaWdpdHMpKSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydCB2YXIgVW5zYWZlTnVtYmVyUmVhc29uID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChVbnNhZmVOdW1iZXJSZWFzb24pIHtcbiAgVW5zYWZlTnVtYmVyUmVhc29uW1widW5kZXJmbG93XCJdID0gXCJ1bmRlcmZsb3dcIjtcbiAgVW5zYWZlTnVtYmVyUmVhc29uW1wib3ZlcmZsb3dcIl0gPSBcIm92ZXJmbG93XCI7XG4gIFVuc2FmZU51bWJlclJlYXNvbltcInRydW5jYXRlX2ludGVnZXJcIl0gPSBcInRydW5jYXRlX2ludGVnZXJcIjtcbiAgVW5zYWZlTnVtYmVyUmVhc29uW1widHJ1bmNhdGVfZmxvYXRcIl0gPSBcInRydW5jYXRlX2Zsb2F0XCI7XG4gIHJldHVybiBVbnNhZmVOdW1iZXJSZWFzb247XG59KHt9KTtcblxuLyoqXG4gKiBXaGVuIHRoZSBwcm92aWRlZCB2YWx1ZSBpcyBhbiB1bnNhZmUgbnVtYmVyLCBkZXNjcmliZSB3aGF0IHRoZSByZWFzb24gaXM6XG4gKiBvdmVyZmxvdywgdW5kZXJmbG93LCB0cnVuY2F0ZV9pbnRlZ2VyLCBvciB0cnVuY2F0ZV9mbG9hdC5cbiAqIFJldHVybnMgdW5kZWZpbmVkIHdoZW4gdGhlIHZhbHVlIGlzIHNhZmUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRVbnNhZmVOdW1iZXJSZWFzb24odmFsdWUpIHtcbiAgaWYgKGlzU2FmZU51bWJlcih2YWx1ZSwge1xuICAgIGFwcHJveDogZmFsc2VcbiAgfSkpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG4gIGlmIChpc0ludGVnZXIodmFsdWUpKSB7XG4gICAgcmV0dXJuIFVuc2FmZU51bWJlclJlYXNvbi50cnVuY2F0ZV9pbnRlZ2VyO1xuICB9XG4gIHZhciBudW0gPSBwYXJzZUZsb2F0KHZhbHVlKTtcbiAgaWYgKCFpc0Zpbml0ZShudW0pKSB7XG4gICAgcmV0dXJuIFVuc2FmZU51bWJlclJlYXNvbi5vdmVyZmxvdztcbiAgfVxuICBpZiAobnVtID09PSAwKSB7XG4gICAgcmV0dXJuIFVuc2FmZU51bWJlclJlYXNvbi51bmRlcmZsb3c7XG4gIH1cbiAgcmV0dXJuIFVuc2FmZU51bWJlclJlYXNvbi50cnVuY2F0ZV9mbG9hdDtcbn1cblxuLyoqXG4gKiBDb252ZXJ0IGEgc3RyaW5nIGludG8gYSBudW1iZXIgd2hlbiBpdCBpcyBzYWZlIHRvIGRvIHNvLlxuICogVGhyb3dzIGFuIGVycm9yIG90aGVyd2lzZSwgZXhwbGFpbmluZyB0aGUgcmVhc29uLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9TYWZlTnVtYmVyT3JUaHJvdyh2YWx1ZSwgY29uZmlnKSB7XG4gIHZhciBudW1iZXIgPSBwYXJzZUZsb2F0KHZhbHVlKTtcbiAgdmFyIHVuc2FmZVJlYXNvbiA9IGdldFVuc2FmZU51bWJlclJlYXNvbih2YWx1ZSk7XG4gIGlmICgoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLmFwcHJveCkgPT09IHRydWUgPyB1bnNhZmVSZWFzb24gJiYgdW5zYWZlUmVhc29uICE9PSBVbnNhZmVOdW1iZXJSZWFzb24udHJ1bmNhdGVfZmxvYXQgOiB1bnNhZmVSZWFzb24pIHtcbiAgICB2YXIgdW5zYWZlUmVhc29uVGV4dCA9IHVuc2FmZVJlYXNvbi5yZXBsYWNlKC9fXFx3KyQvLCAnJyk7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3Qgc2FmZWx5IGNvbnZlcnQgdG8gbnVtYmVyOiAnICsgXCJ0aGUgdmFsdWUgJ1wiLmNvbmNhdCh2YWx1ZSwgXCInIHdvdWxkIFwiKS5jb25jYXQodW5zYWZlUmVhc29uVGV4dCwgXCIgYW5kIGJlY29tZSBcIikuY29uY2F0KG51bWJlcikpO1xuICB9XG4gIHJldHVybiBudW1iZXI7XG59XG5cbi8qKlxuICogR2V0IHRoZSBzaWduaWZpY2FudCBkaWdpdHMgb2YgYSBudW1iZXIuXG4gKlxuICogRm9yIGV4YW1wbGU6XG4gKiAgICcyLjM0JyByZXR1cm5zICcyMzQnXG4gKiAgICctNzcnIHJldHVybnMgJzc3J1xuICogICAnMC4wMDM0MDAnIHJldHVybnMgJzM0J1xuICogICAnMTIwLjVlKzMwJyByZXR1cm5zICcxMjA1J1xuICoqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4dHJhY3RTaWduaWZpY2FudERpZ2l0cyh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWVcbiAgLy8gZnJvbSBcIi0wLjI1MGUrMzBcIiB0byBcIi0wLjI1MFwiXG4gIC5yZXBsYWNlKEVYUE9ORU5USUFMX1BBUlRfUkVHRVgsICcnKVxuXG4gIC8vIGZyb20gXCItMC4yNTBcIiB0byBcIi0wMjUwXCJcbiAgLnJlcGxhY2UoRE9UX1JFR0VYLCAnJylcblxuICAvLyBmcm9tIFwiLTAyNTBcIiB0byBcIi0wMjVcIlxuICAucmVwbGFjZShUUkFJTElOR19aRVJPU19SRUdFWCwgJycpXG5cbiAgLy8gZnJvbSBcIi0wMjVcIiB0byBcIjI1XCJcbiAgLnJlcGxhY2UoTEVBRElOR19NSU5VU19BTkRfWkVST1NfUkVHRVgsICcnKTtcbn1cbnZhciBFWFBPTkVOVElBTF9QQVJUX1JFR0VYID0gL1tlRV1bKy1dP1xcZCskLztcbnZhciBMRUFESU5HX01JTlVTX0FORF9aRVJPU19SRUdFWCA9IC9eLT8oMCopPy87XG52YXIgRE9UX1JFR0VYID0gL1xcLi87XG52YXIgVFJBSUxJTkdfWkVST1NfUkVHRVggPSAvMCskLztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6WyJpc0ludGVnZXIiLCJ2YWx1ZSIsIklOVEVHRVJfUkVHRVgiLCJ0ZXN0IiwiaXNOdW1iZXIiLCJOVU1CRVJfUkVHRVgiLCJpc1NhZmVOdW1iZXIiLCJjb25maWciLCJudW0iLCJwYXJzZUZsb2F0Iiwic3RyIiwiU3RyaW5nIiwidiIsImV4dHJhY3RTaWduaWZpY2FudERpZ2l0cyIsInMiLCJhcHByb3giLCJyZXF1aXJlZERpZ2l0cyIsImxlbmd0aCIsInN0YXJ0c1dpdGgiLCJzdWJzdHJpbmciLCJVbnNhZmVOdW1iZXJSZWFzb24iLCJnZXRVbnNhZmVOdW1iZXJSZWFzb24iLCJ1bmRlZmluZWQiLCJ0cnVuY2F0ZV9pbnRlZ2VyIiwiaXNGaW5pdGUiLCJvdmVyZmxvdyIsInVuZGVyZmxvdyIsInRydW5jYXRlX2Zsb2F0IiwidG9TYWZlTnVtYmVyT3JUaHJvdyIsIm51bWJlciIsInVuc2FmZVJlYXNvbiIsInVuc2FmZVJlYXNvblRleHQiLCJyZXBsYWNlIiwiRXJyb3IiLCJjb25jYXQiLCJFWFBPTkVOVElBTF9QQVJUX1JFR0VYIiwiRE9UX1JFR0VYIiwiVFJBSUxJTkdfWkVST1NfUkVHRVgiLCJMRUFESU5HX01JTlVTX0FORF9aRVJPU19SRUdFWCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/lossless-json/lib/esm/utils.js\n");

/***/ })

};
;